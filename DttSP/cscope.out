cscope 15 /Store-1/home/kippa/src/ghpsdr.svn/DttSP               0000639782
	@am_demod.c

36 
	~<am_demod.h
>

37 
	~<cx›s.h
>

45 
	$öô_∂l
 (
AMD
 
am
,

46 
REAL
 
ßm¥©e
, REAL 
‰eq
, REAL 
lo‰eq
, REAL 
hi‰eq
, REAL 
b™dwidth
)

48 
REAL
 
Ác
 = (REALË(
TWOPI
 / 
ßm¥©e
);

49 
am
->
∂l
.
‰eq
.
f
 = fªq * 
Ác
;

50 
am
->
∂l
.
‰eq
.
l
 = 
lo‰eq
 * 
Ác
;

51 
am
->
∂l
.
‰eq
.
h
 = 
hi‰eq
 * 
Ác
;

52 
am
->
∂l
.
phs
 = 0.0;

53 
am
->
∂l
.
dñay
 = 
cxJ
;

55 
am
->
∂l
.
iú
.
Æpha
 = 
b™dwidth
 * 
Ác
;

56 
am
->
∂l
.
Æpha
 =ám->∂l.
iú
.alpha * 0.3f;

57 
am
->
∂l
.
bëa
 =ám->∂l.
Æpha
 *ám->pll.alpha * 0.25f;

58 
am
->
∂l
.
Á°_Æpha
 =ám->∂l.
Æpha
;

59 
	}
}

62 
	$∂l
 (
AMD
 
am
, 
COMPLEX
 
sig
)

64 
COMPLEX
 
z
 = 
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
am
->
∂l
.
phs
), (REALË
	`sö
 (am->pll.phs));

65 
REAL
 
diff
;

67 
am
->
∂l
.
dñay
.
ª
 = 
z
.ª * 
sig
.ª + z.
im
 * sig.im;

68 
am
->
∂l
.
dñay
.
im
 = -
z
.im * 
sig
.
ª
 + z.re * sig.im;

69 
diff
 = 
	`Á°_©™2
 (
am
->
∂l
.
dñay
.
im
,ám->∂l.dñay.
ª
);

71 
am
->
∂l
.
‰eq
.
f
 +am->∂l.
bëa
 * 
diff
;

73 i‡(
am
->
∂l
.
‰eq
.
f
 <ám->∂l.‰eq.
l
)

74 
am
->
∂l
.
‰eq
.
f
 =ám->∂l.‰eq.
l
;

75 i‡(
am
->
∂l
.
‰eq
.
f
 >ám->∂l.‰eq.
h
)

76 
am
->
∂l
.
‰eq
.
f
 =ám->∂l.‰eq.
h
;

78 
am
->
∂l
.
phs
 +am->∂l.
‰eq
.
f
 +ám->∂l.
Æpha
 * 
diff
;

80 
am
->
∂l
.
phs
 >
TWOPI
)

81 
am
->
∂l
.
phs
 -(
REAL
Ë
TWOPI
;

82 
am
->
∂l
.
phs
 < 0)

83 
am
->
∂l
.
phs
 +(
REAL
Ë
TWOPI
;

84 
	}
}

86 
REAL


87 
	$dem
 (
AMD
 
am
)

89 
am
->
lock
.
cuº
 =

90 (
REAL
Ë(0.999 * 
am
->
lock
.
cuº
 + 0.001 * 
	`Ábs
 (am->
∂l
.
dñay
.
im
));

102 
am
->
lock
.
¥ev
 =ám->lock.
cuº
;

103 
am
->
dc
 = 0.99999‡*ám->d¯+ 0.00001‡*ám->
∂l
.
dñay
.
ª
;

104  
am
->
∂l
.
dñay
.
ª
 -ám->
dc
;

105 
	}
}

112 
	$AMDemod
 (
AMD
 
am
)

114 
i
;

115 
REAL
 
demout
;

116 
am
->
mode
)

118 
SAMdë
:

119 
i
 = 0; i < 
am
->
size
; i++)

121 
	`∂l
 (
am
, 
	`CXBd©a
 (am->
ibuf
, 
i
));

122 
demout
 = 
	`dem
 (
am
);

123 
	`CXBd©a
 (
am
->
obuf
, 
i
Ë
	`Cm∂x
 (
demout
, demout);

126 
AMdë
:

127 
i
 = 0; i < 
am
->
size
; i++)

129 
am
->
lock
.
cuº
 = 
	`Cmag
 (
	`CXBd©a
 (am->
ibuf
, 
i
));

130 
am
->
dc
 = 0.9999‡*ám->d¯+ 0.0001‡*ám->
lock
.
cuº
;

131 
am
->
smoŸh
 = 0.5‡*ám->smoŸh + 0.5‡* (am->
lock
.
cuº
 -ám->
dc
);

133 
	`CXBd©a
 (
am
->
obuf
, 
i
Ë
	`Cm∂x
 (am->
smoŸh
,ám->smooth);

137 
	}
}

139 
AMD


140 
	$√wAMD
 (
REAL
 
ßm¥©e
,

141 
REAL
 
f_öôül
,

142 
REAL
 
f_lobound
,

143 
REAL
 
f_hibound
,

144 
REAL
 
f_b™dwid
,

145 
size
, 
COMPLEX
 * 
ivec
, COMPLEX * 
ovec
, 
AMMode
 
mode
, *
èg
)

147 
AMD
 
am
 = (AMDË
	`ß„Æloc
 (1,  (
AMDDesc
), 
èg
);

149 
am
->
size
 = size;

150 
am
->
ibuf
 = 
	`√wCXB
 (
size
, 
ivec
, 
èg
);

151 
am
->
obuf
 = 
	`√wCXB
 (
size
, 
ovec
, 
èg
);

152 
am
->
mode
 = mode;

153 
	`öô_∂l
 (
am
, 
ßm¥©e
, 
f_öôül
, 
f_lobound
, 
f_hibound
, 
f_b™dwid
);

155 
am
->
lock
.
cuº
 = 0.5;

156 
am
->
lock
.
¥ev
 = 1.0;

157 
am
->
dc
 = 0.0;

159  
am
;

160 
	}
}

163 
	$dñAMD
 (
AMD
 
am
)

165 i‡(
am
)

167 
	`dñCXB
 (
am
->
ibuf
);

168 
	`dñCXB
 (
am
->
obuf
);

169 
	`ß„‰ì
 ((*Ë
am
);

171 
	}
}

	@am_demod.h

34 #i‚de‡
_am_demod_h


35 
	#_am_demod_h


	)

37 
	~<‰omsys.h
>

38 
	~<b™Æ.h
>

39 
	~<•lôfõlds.h
>

40 
	~<d©©y≥s.h
>

41 
	~<bufvec.h
>

42 
	~<cx›s.h
>

43 
	~<Á°rig.h
>

44 
	~<upd©e.h
>

45 
	~<lmadf.h
>

46 
	~<f·w3.h
>

47 
	~<f·w3_fix.h
>

48 
	~<ovsv.h
>

49 
	~<fûãr.h
>

50 
	~<oscûœt‹.h
>

52 
	e_ammode


53 { 
	mAMdë
, 
	mSAMdë
 } 
	tAMMode
;

54 
	s_am_demod


56 
	msize
;

57 
CXB
 
	mibuf
, 
	mobuf
;

61 
REAL
 
	mÆpha
, 
	mbëa
, 
	mÁ°_Æpha
;

64 
REAL
 
	mf
, 
	ml
, 
	mh
;

65 } 
	m‰eq
;

66 
REAL
 
	mphs
;

69 
REAL
 
	mÆpha
;

70 } 
	miú
;

71 
COMPLEX
 
	mdñay
;

72 } 
	m∂l
;

76 
REAL
 
	mcuº
, 
	m¥ev
;

77 } 
	mlock
;

79 
REAL
 
	mdc
;

80 
REAL
 
	msmoŸh
;

81 
AMMode
 
	mmode
;

82 } 
	tAMDDesc
, *
	tAMD
;

84 
AMDemod
 (
AMD
 
am
);

85 
AMD
 
√wAMD
 (
REAL
 
ßm¥©e
,

86 
REAL
 
f_öôül
,

87 
REAL
 
f_lobound
,

88 
REAL
 
f_hibound
,

89 
REAL
 
f_b™dwid
,

90 
size
,

91 
COMPLEX
 * 
ivec
, COMPLEX * 
ovec
, 
AMMode
 
mode
, *
èg
);

92 
dñAMD
 (
AMD
 
am
);

94 #i‚de‡
TWOPI


95 
	#TWOPI
 (2.0*
M_PI
)

	)

	@banal.c

34 
	~<sys/time.h
>

35 
	~<‰omsys.h
>

36 
	~<b™Æ.h
>

39 
	$nûfunc
 ()

41 
	}
}

43 
ölöe
 
REAL


44 
	$sqr
 (
REAL
 
x
)

46  
x
 * x;

47 
	}
}

50 
	$p›˙t
 (
k
)

52 
c
, 
i
;

53 
c
 = 
k
 & 01;

54 
i
 = 1; i < 32; i++)

55 
c
 +(
k
 >> 
i
) & 01;

56  
c
;

57 
	}
}

60 
	$≈oof2
 (
n
)

62 
i
 = 0;

63 --
n
;

64 
n
 > 0)

65 
n
 >>1, 
i
++;

66  
i
;

67 
	}
}

70 
	$nblock2
 (
n
)

72  1 << 
	`≈oof2
 (
n
);

73 
	}
}

76 
	$ö_blocks
 (
cou¡
, 
block_size
)

78 i‡(
block_size
 < 1)

80 
	`Ârötf
 (
°dîr
, "block_size zero in in_blocks\n");

81 
	`exô
 (1);

83  (1 + ((
cou¡
 - 1Ë/ 
block_size
));

84 
	}
}

86 
FILE
 *

87 
	$ef›í
 (*
∑th
, *
mode
)

89 
FILE
 *
i›
 = 
	`f›í
 (
∑th
, 
mode
);

90 i‡(!
i›
)

92 
	`Ârötf
 (
°dîr
, "ˇn'à›í \"%s\" i¿modê\"%s\"\n", 
∑th
, 
mode
);

93 
	`exô
 (1);

95  
i›
;

96 
	}
}

98 
FILE
 *

99 
	$e‰e›í
 (*
∑th
, *
mode
, 
FILE
 * 
°rm
)

101 
FILE
 *
i›
 = 
	`‰e›í
 (
∑th
, 
mode
, 
°rm
);

102 i‡(!
i›
)

104 
	`Ârötf
 (
°dîr
, "ˇn'àª›í \"%s\" i¿modê\"%s\"\n", 
∑th
, 
mode
);

105 
	`exô
 (1);

107  
i›
;

108 
	}
}

110 
size_t


111 
	$fûesize
 (*
∑th
)

113 
°©
 
sbuf
;

114 i‡(
	`°©
 (
∑th
, &
sbuf
) == -1)

116  
sbuf
.
°_size
;

117 
	}
}

119 
size_t


120 
	$fdsize
 (
fd
)

122 
°©
 
sbuf
;

123 i‡(
	`f°©
 (
fd
, &
sbuf
) == -1)

125  
sbuf
.
°_size
;

126 
	}
}

128 
	#MILLION
 (1000000)

	)

131 
timevÆ


132 
	$now_tv
 ()

134 
timevÆ
 
tv
;

135 
	`gëtimeofday
 (&
tv
, 0);

136  
tv
;

137 
	}
}

140 
timevÆ


141 
	$diff_tv
 (
timevÆ
 *
è
, timevÆ *
tb
)

143 
timevÆ
 
tv
;

144 i‡(
tb
->
tv_u£c
 > 
è
->tv_usec)

146 
è
->
tv_£c
--;

147 
è
->
tv_u£c
 +
MILLION
;

149 
tv
.
tv_£c
 = 
è
->tv_£¯- 
tb
->tv_sec;

150 i‡((
tv
.
tv_u£c
 = 
è
->tv_u£¯- 
tb
->tv_u£cË>
MILLION
)

152 
tv
.
tv_u£c
 -
MILLION
;

153 
tv
.
tv_£c
++;

155  
tv
;

156 
	}
}

159 
timevÆ


160 
	$sum_tv
 (
timevÆ
 *
è
, timevÆ *
tb
)

162 
timevÆ
 
tv
;

163 
tv
.
tv_£c
 = 
è
->tv_£¯+ 
tb
->tv_sec;

164 i‡((
tv
.
tv_u£c
 = 
è
->tv_u£¯+ 
tb
->tv_u£cË>
MILLION
)

166 
tv
.
tv_u£c
 -
MILLION
;

167 
tv
.
tv_£c
++;

169  
tv
;

170 
	}
}

173 
	$fmt_tv
 (
timevÆ
 *
tv
)

175 
buff
[256];

176 
	`¢¥ötf
 (
buff
,  (buff), "%ds%du", ()
tv
->
tv_£c
, (Èv->
tv_u£c
);

177  
buff
;

178 
	}
}

181 
	$sö˚
 (
timevÆ
 *
tv
)

183 
timevÆ
 
¡
 = 
	`now_tv
 (), 
dt
 = 
	`diff_tv
 (&¡, 
tv
);

184  
	`fmt_tv
 (&
dt
);

185 
	}
}

194 
	$höãΩ_vec
 (
REAL
 * 
u
, 
m
, REAL * 
v
, 
n
)

196 i‡(!
u
 || !
v
 || (
n
 < 2Ë|| (
m
 <Ç) || (m %Ç))

200 
div
 = 
m
 / 
n
, 
i
, 
j
 = 0;

201 
i
 = 1; i < 
n
; i++)

203 
k
;

204 
REAL
 
vl
 = 
v
[
i
 - 1], 
dñ
 = (v[i] - vlË/ 
div
;

205 
u
[
j
++] = 
vl
;

206 
k
 = 1; k < 
div
; k++)

207 
u
[
j
++] = 
vl
 + 
k
 * 
dñ
;

209 
u
[
j
++] = 
v
[
n
 - 1];

210  
j
;

212 
	}
}

215 
	$°©us_mesßge
 (*
msg
)

217 
	`wrôe
 (2, 
msg
, 
	`°æí
 (msg));

218 
	}
}

220 
FILE
 *

221 
	$föd_rcfûe
 (*
ba£
)

223 
∑th
[
MAXPATHLEN
];

224 
FILE
 *
Â
;

225 
	`•rötf
 (
∑th
, "./%s", 
ba£
);

226 i‡((
Â
 = 
	`f›í
 (
∑th
, "r")))

227  
Â
;

230 *
home
 = 
	`gëív
 ("HOME");

231 i‡(!
home
)

232 
	`Ârötf
 (
°dîr
, "ˇn'àgë HOME!\n"), 
	`exô
 (1);

233 
	`•rötf
 (
∑th
, "%s/%s", 
home
, 
ba£
);

234 i‡((
Â
 = 
	`f›í
 (
∑th
, "r")))

235  
Â
;

238 
	}
}

243 
	$hash
 (*
°r
)

245 
hash
 = 5381;

246 
c
;

247 
c
 = *
°r
++)

248 
hash
 = ((hash << 5Ë+ hashË+ 
c
;

249  
hash
;

250 
	}
}

253 
	$gcd
 (
m
, 
n
)

255  (
m
 % 
n
 =0 ?Ç : 
	`gcd
 (n, m %Ç));

256 
	}
}

259 
	$Àa°_comm⁄_mul
 (
i
, 
j
)

261  (
	`abs
 ((
i
 * 
j
Ë/ 
	`gcd
 (i, j)));

262 
	}
}

	@banal.h

35 #i‚de‡
_b™Æ_h


37 
	#_b™Æ_h


	)

39 
	~<‰omsys.h
>

40 
	~<defs.h
>

41 
	~<d©©y≥s.h
>

43 #i‚de‡
mö


44 
	#mö
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

46 #i‚de‡
max


47 
	#max
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

49 
	#abs
(
a
Ë(◊Ë>0 ? (aË: -◊))

	)

51 
	#MONDO
 1e15

	)

52 
	#BITSY
 1e-15

	)

54 
	#TRUE
 1

	)

55 
	#FALSE
 0

	)

57 
nûfunc
 ();

58 
INLINE
 
REAL
 
sqr
 (REAL);

59 
p›˙t
 ();

60 
≈oof2
 ();

61 
nblock2
 ();

63 
ö_blocks
 (
cou¡
, 
block_size
);

65 
FILE
 *
ef›í
 (*
∑th
, *
mode
);

66 
FILE
 *
e‰e›í
 (*
∑th
, *
mode
, FILE * 
°rm
);

67 
size_t
 
fûesize
 (*
∑th
);

68 
size_t
 
fdsize
 (
fd
);

70 
timevÆ
 
now_tv
 ();

71 
timevÆ
 
diff_tv
 (timeval *, timeval *);

72 
timevÆ
 
sum_tv
 (timeval *, timeval *);

73 *
fmt_tv
 (
timevÆ
 *);

74 *
sö˚
 (
timevÆ
 *);

75 
timevÆ
 
now_tv
 ();

77 
höãΩ_vec
 (
REAL
 *, , REAL *, );

79 
°©us_mesßge
 (*
msg
);

81 
FILE
 *
föd_rcfûe
 (*
ba£
);

83 
hash
 (*
°r
);

84 
gcd
 (
m
, 
n
);

85 
Àa°_comm⁄_mul
 (
i
, 
j
);

	@bufvec.c

37 
	~<bufvec.h
>

38 
	~<f·w3.h
>

39 
	~<f·w3_fix.h
>

44 
PRIVATE
 
size_t
 
	g_ß„mem_cuºcou¡
 = 0;

47 
	$ß„Æloc
(
cou¡
, 
nbyãs
, *
èg
)

49 *
p
 = 
	`ˇŒoc
(
cou¡
, 
nbyãs
);

50 i‡(!
p
)

52 i‡(
èg
 && *tag)

53 
	`Ârötf
(
°dîr
, "ß„Æloc: %s\n", 
èg
);

55 
	`≥º‹
("safealloc");

56 
	`exô
(1);

59 
_ß„mem_cuºcou¡
 +
cou¡
 * 
nbyãs
;

61  
p
;

62 
	}
}

65 
	$ß„‰ì
(*
p
)

67 i‡(
p
)

68 
	`‰ì
((*Ë
p
);

69 
	}
}

71 
size_t


72 
	$ß„memcuºcou¡
()

74  
_ß„mem_cuºcou¡
;

75 
	}
}

78 
	$ß„memª£t
()

80 
_ß„mem_cuºcou¡
 = 0;

81 
	}
}

86 
REAL
 *

87 
	$√wvec_REAL
(
size
, *
èg
)

89  (
REAL
 *Ë
	`ß„Æloc
(
size
, (REAL), 
èg
);

90 
	}
}

93 
	$dñvec_REAL
(
REAL
 *
vec
)

95 
	`ß„‰ì
((*Ë
vec
);

96 
	}
}

98 
IMAG
 *

99 
	$√wvec_IMAG
(
size
, *
èg
)

101  (
IMAG
 *Ë
	`ß„Æloc
(
size
, (IMAG), 
èg
);

102 
	}
}

105 
	$dñvec_IMAG
(
IMAG
 *
vec
)

107 
	`ß„‰ì
((*Ë
vec
);

108 
	}
}

110 
COMPLEX
 *

111 
	$√wvec_COMPLEX
(
size
, *
èg
)

113  (
COMPLEX
 *Ë
	`ß„Æloc
(
size
, (COMPLEX), 
èg
);

114 
	}
}

117 
	$dñvec_COMPLEX
(
COMPLEX
 *
vec
)

119 
	`ß„‰ì
((*Ë
vec
);

120 
	}
}

122 
COMPLEX
 *

123 
	$√wvec_COMPLEX_f·w
(
size
, *
èg
)

125 
COMPLEX
 *
p
 = 
	`f·wf_mÆloc
(
size
*(COMPLEX));

126 i‡(!
p
)

128 i‡(
èg
 && *tag)

129 
	`Ârötf
(
°dîr
, "f·wf_mŒoc: %s\n", 
èg
);

131 
	`≥º‹
("fftw malloc");

132 
	`exô
(1);

135  
p
;

136 
	}
}

139 
	$dñvec_COMPLEX_f·w
(
COMPLEX
 *
vec
)

141 
	`f·wf_‰ì
((*Ë
vec
);

142 
	}
}

149 
CXB


150 
	$√wCXB
(
size
, 
COMPLEX
 *
ba£
, *
èg
)

152 
CXB
 
p
 = (CXBË
	`ß„Æloc
(1, (
CXBuf„r
), 
èg
);

153 i‡(
ba£
)

155 
	`CXBba£
(
p
Ë
ba£
;

156 
	`CXBmöe
(
p
Ë
FALSE
;

160 
	`CXBba£
(
p
Ë
	`√wvec_COMPLEX
(
size
, "newCXB");

161 
	`CXBmöe
(
p
Ë
TRUE
;

163 
	`CXBsize
(
p
Ë
	`CXBw™t
’Ë
size
;

164 
	`CXBovÕ
(
p
Ë
	`CXBhave
’Ë
	`CXBd⁄e
(p) = 0;

165  
p
;

166 
	}
}

169 
	$dñCXB
(
CXB
 
p
)

171 i‡(
p
)

173 i‡(
	`CXBmöe
(
p
))

174 
	`dñvec_COMPLEX
(
	`CXBba£
(
p
));

175 
	`ß„‰ì
((*Ë
p
);

177 
	}
}

182 
RLB


183 
	$√wRLB
(
size
, 
REAL
 *
ba£
, *
èg
)

185 
RLB
 
p
 = (RLBË
	`ß„Æloc
(1, (
RLBuf„r
), 
èg
);

186 i‡(
ba£
)

188 
	`RLBba£
(
p
Ë
ba£
;

189 
	`RLBmöe
(
p
Ë
FALSE
;

193 
	`RLBba£
(
p
Ë
	`√wvec_REAL
(
size
, "newRLB");

194 
	`RLBmöe
(
p
Ë
TRUE
;

196 
	`RLBsize
(
p
Ë
	`RLBw™t
’Ë
size
;

197 
	`RLBovÕ
(
p
Ë
	`RLBhave
’Ë
	`RLBd⁄e
(p) = 0;

198  
p
;

199 
	}
}

202 
	$dñRLB
(
RLB
 
p
)

204 i‡(
p
)

206 i‡(
p
->
möe
)

207 
	`dñvec_REAL
(
	`RLBba£
(
p
));

208 
	`ß„‰ì
((*Ë
p
);

210 
	}
}

215 
REAL


216 
	$n‹mÆize_vec_REAL
(
REAL
 *
v
, 
n
, REAL 
s˛
)

218 i‡(
v
 && (
n
 > 0))

220 
i
;

221 
REAL
 
big
 = -(REALË
MONDO
;

222 
i
 = 0; i < 
n
; i++)

224 
REAL
 
a
 = 
	`abs
(
v
[
i
]);

225 
big
 = 
	`max
(big, 
a
);

227 i‡(
big
 > 0.0)

229 
REAL
 
s˛
 = (REALË(1.0 / 
big
);

230 
i
 = 0; i < 
n
; i++)

231 
v
[
i
] *
s˛
;

232  
s˛
;

237 
	}
}

239 
REAL


240 
	$n‹mÆize_vec_COMPLEX
(
COMPLEX
 *
z
, 
n
, 
REAL
 
sˇÀ
)

242 i‡(
z
 && (
n
 > 0))

244 
i
;

245 
REAL
 
big
 = -(REALË
MONDO
;

246 
i
 = 0; i < 
n
; i++)

248 
REAL
 
a
 = 
	`Cabs
(
z
[
i
]);

249 
big
 = 
	`max
(big, 
a
);

251 i‡(
big
 > 0.0)

253 
REAL
 
s˛
 = (REALË(
sˇÀ
 / 
big
);

254 
i
 = 0; i < 
n
; i++)

255 
z
[
i
] = 
	`Cs˛
(z[i], 
s˛
);

256  
s˛
;

261 
	}
}

268 
	$dump_REAL
(
FILE
 * 
Â
, *
hód
, 
REAL
 *
±r
, 
beg
, 
fö
)

270 
i
;

271 
FILE
 *
i›
 = 
Â
 ? f∞: 
°dîr
;

272 i‡(
hód
 && *head)

273 
	`Ârötf
(
i›
, "dump_REAL: %s\n", 
hód
);

274 
i
 = 
beg
; i < 
fö
; i++)

275 
	`Ârötf
(
i›
, "%5d %g\n", 
i
, 
±r
[i]);

276 
	}
}

279 
	$dump_IMAG
(
FILE
 * 
Â
, *
hód
, 
IMAG
 *
±r
, 
beg
, 
fö
)

281 
i
;

282 
FILE
 *
i›
 = 
Â
 ? f∞: 
°dîr
;

283 i‡(
hód
 && *head)

284 
	`Ârötf
(
i›
, "dump_REAL: %s\n", 
hód
);

285 
i
 = 
beg
; i < 
fö
; i++)

286 
	`Ârötf
(
i›
, "%5d %g\n", 
i
, 
±r
[i]);

287 
	}
}

290 
	$dump_CX
(
FILE
 * 
Â
, *
hód
, 
COMPLEX
 *
±r
, 
beg
, 
fö
)

292 
i
;

293 
FILE
 *
i›
 = 
Â
 ? f∞: 
°dîr
;

294 i‡(
hód
 && *head)

295 
	`Ârötf
(
i›
, "dump_CX: %s\n", 
hód
);

296 
i
 = 
beg
; i < 
fö
; i++)

297 
	`Ârötf
(
i›
, "%5d %g %g\n", 
i
, 
±r
[i].
ª
,Öå[i].
im
);

298 
	}
}

	@bufvec.h

36 #i‚de‡
_bufvec_h


38 
	#_bufvec_h


	)

40 
	~<‰omsys.h
>

41 
	~<d©©y≥s.h
>

42 
	~<com∂ex.h
>

43 
	~<cx›s.h
>

45 
	s_com∂ex_buf„r_desc
 {

46 
COMPLEX
 *
	md©a
;

47 
	msize
, 
	movÕ
, 
	mw™t
, 
	mhave
, 
	md⁄e
, 
	mmöe
;

48 } 
	tCXBuf„r
, *
	tCXB
;

52 
	#CXBba£
(
p
Ë(’)->
d©a
)

	)

53 
	#CXBd©a
(
p
, 
i
Ë(
	`CXBba£
’)[(i)])

	)

54 
	#CXBªÆ
(
p
, 
i
Ë(
	`CXBba£
’)[(i)].
ª
)

	)

55 
	#CXBimag
(
p
, 
i
Ë(
	`CXBba£
’)[(i)].
im
)

	)

56 
	#CXBsize
(
p
Ë(’)->
size
)

	)

57 
	#CXBovÕ
(
p
Ë(’)->
ovÕ
)

	)

58 
	#CXBw™t
(
p
Ë(’)->
w™t
)

	)

59 
	#CXBhave
(
p
Ë(’)->
have
)

	)

60 
	#CXBd⁄e
(
p
Ë(’)->
d⁄e
)

	)

61 
	#CXBmöe
(
p
Ë(’)->
möe
)

	)

63 
	s_ªÆ_buf„r_desc
 {

64 
REAL
 *
	md©a
;

65 
	msize
, 
	movÕ
, 
	mw™t
, 
	mhave
, 
	md⁄e
, 
	mmöe
;

66 } 
	tRLBuf„r
, *
	tRLB
;

68 
	#RLBba£
(
p
Ë(’)->
d©a
)

	)

69 
	#RLBd©a
(
p
, 
i
Ë(
	`RLBba£
’)[(i)])

	)

70 
	#RLBsize
(
p
Ë(’)->
size
)

	)

71 
	#RLBovÕ
(
p
Ë(’)->
ovÕ
)

	)

72 
	#RLBw™t
(
p
Ë(’)->
w™t
)

	)

73 
	#RLBhave
(
p
Ë(’)->
have
)

	)

74 
	#RLBd⁄e
(
p
Ë(’)->
d⁄e
)

	)

75 
	#RLBmöe
(
p
Ë(’)->
möe
)

	)

77 *
ß„Æloc
(
cou¡
, 
nbyãs
, *
èg
);

78 
ß„‰ì
(*
p
);

79 
size_t
 
ß„memcuºcou¡
();

80 
ß„memª£t
();

82 
REAL
 *
√wvec_REAL
(
size
, *
èg
);

83 
dñvec_REAL
(
REAL
 *
vec
);

84 
IMAG
 *
√wvec_IMAG
(
size
, *
èg
);

85 
dñvec_IMAG
(
IMAG
 *
vec
);

86 
COMPLEX
 *
√wvec_COMPLEX
(
size
, *
èg
);

87 
dñvec_COMPLEX
(
COMPLEX
 * 
buf
);

88 
COMPLEX
 *
√wvec_COMPLEX_f·w
(
size
, *
èg
);

89 
dñvec_COMPLEX_f·w
(
COMPLEX
 * 
buf
);

90 
dump_REAL
(
FILE
 *
Â
, *
hód
, 
REAL
 *
±r
, 
beg
, 
fö
);

91 
dump_IMAG
(
FILE
 *
Â
, *
hód
, 
IMAG
 *
±r
, 
beg
, 
fö
);

92 
dump_CX
(
FILE
 *
Â
, *
hód
, 
COMPLEX
 *
±r
, 
beg
, 
fö
);

94 
CXB
 
√wCXB
(
size
, 
COMPLEX
 *
ba£
, *
èg
);

95 
dñCXB
(
CXB
 
p
);

97 
RLB
 
√wRLB
(
size
, 
REAL
 *
ba£
, *
èg
);

98 
dñRLB
(
RLB
 
p
);

100 
REAL
 
n‹mÆize_vec_REAL
(REAL *, , REAL);

101 
REAL
 
n‹mÆize_vec_COMPLEX
(
COMPLEX
 *, , REAL);

	@common.h

35 #i‚de‡
_comm⁄_h


37 
	#_comm⁄_h


	)

40 
	~<‰omsys.h
>

41 
	~<defs.h
>

42 
	~<b™Æ.h
>

43 
	~<•lôfõlds.h
>

44 
	~<d©©y≥s.h
>

45 
	~<bufvec.h
>

46 
	~<cx›s.h
>

47 
	~<rögb.h
>

48 
	~<lmadf.h
>

49 
	~<f·w3.h
>

50 
	~<f·w3_fix.h
>

51 
	~<ovsv.h
>

52 
	~<fûãr.h
>

53 
	~<oscûœt‹.h
>

54 
	~<dâ•agc.h
>

55 
	~<am_demod.h
>

56 
	~<fm_demod.h
>

57 
	~<ªßm∂e.h
>

58 
	~<ªßm∂eF.h
>

59 
	~<noi£bœnkî.h
>

60 
	~<c‹ª˘IQ.h
>

61 
	~<dcblock.h
>

62 
	~<•ìch¥oc.h
>

63 
	~<wscom∑nd.h
>

64 
	~<•Ÿt⁄e.h
>

65 
	~<upd©e.h
>

66 
	~<mëî.h
>

67 
	~<•e˘rum.h
>

68 
	~<wödow.h
>

69 
	~<isob™d.h
>

70 
	~<gøphi˚q.h
>

73 
	~<±hªad.h
>

74 
	~<sched.h
>

75 
	~<£m≠h‹e.h
>

81 
	~<sdªxp‹t.h
>

82 
	~<loˇl.h
>

	@complex.h

34 #i‚de‡
_com∂ex_h


35 
	#_com∂ex_h


	)

36 
	~<d©©y≥s.h
>

37 
	s_COMPLEX


39 
REAL
 
	mª
, 
	mim
;

40 } 
	tCOMPLEX
;

42 
	#c_ª
(
x
Ë((x).
ª
)

	)

43 
	#c_im
(
x
Ë((x).
im
)

	)

	@correctIQ.c

37 
	~<comm⁄.h
>

41 
IQ


42 
	$√wC‹ª˘IQ
 (
REAL
 
pha£
, REAL 
gaö
, REAL 
mu
)

44 
IQ
 
iq
 = (IQË
	`ß„Æloc
 (1,  (
iq°©e
), "IQ state");

45 
iq
->
pha£
 =Öhase;

46 
iq
->
gaö
 = gain;

47 
iq
->
mu
 = mu;

48 
iq
->
Àakage
 = 0.000000f;

49 
iq
->
MASK
=15;

50 
iq
->
ödex
=0;

51 
iq
->
w
 = (
COMPLEX
 *)
	`ß„Æloc
(16,(COMPLEX),"correctIQ w");

52 
iq
->
y
 = (
COMPLEX
 *)
	`ß„Æloc
(16,(COMPLEX),"correctIQ y");

53 
iq
->
dñ
 = (
COMPLEX
 *)
	`ß„Æloc
(16,(COMPLEX),"correctIQ del");

54 
	`mem£t
((*)
iq
->
w
,0,16*(
COMPLEX
));

55 
iq
->
wbú_tu√d
 = 
TRUE
;

56 
iq
->
wbú_°©e
 = 
Fa°Ad≠t
;

57  
iq
;

58 
	}
}

61 
	$dñC‹ª˘IQ
 (
IQ
 
iq
)

63 
	`ß„‰ì
((*)
iq
->
w
);

64 
	`ß„‰ì
((*)
iq
->
y
);

65 
	`ß„‰ì
((*)
iq
->
dñ
);

66 
	`ß„‰ì
 ((*Ë
iq
);

67 
	}
}

69 
	gIQdoô
 = 1;

72 
	$c‹ª˘IQ
 (
CXB
 
sigbuf
, 
IQ
 
iq
, 
BOOLEAN
 
isTX
, 
subch™
)

74 
i
;

75 
REAL
 
doô
;

76 i‡(
IQdoô
 == 0) ;

77 i‡(
subch™
 =0Ë
doô
 = 
iq
->
mu
;

78 
doô
 = 0;

79 if(!
isTX
)

83 
iq
->
wbú_°©e
) {

84 
Fa°Ad≠t
:

86 
SlowAd≠t
:

88 
NoAd≠t
:

94 
i
 = 0; i < 
	`CXBhave
 (
sigbuf
); i++)

96 
iq
->
dñ
[iq->
ödex
] = 
	`CXBd©a
(
sigbuf
, 
i
);

97 
iq
->
y
[iq->
ödex
] = 
	`Cadd
(iq->
dñ
[iq->ödex], 
	`Cmul
(iq->
w
[0], 
	`C⁄jg
(iq->del[iq->index])));

98 
iq
->
y
[iq->
ödex
] = 
	`Cadd
(iq->y[iq->ödex], 
	`Cmul
(iq->
w
[1], 
	`C⁄jg
(iq->y[iq->index])));

99 
iq
->
w
[1] = 
	`Csub
(iq->w[1], 
	`Cs˛
(
	`Cmul
(iq->
y
[iq->
ödex
], iq->y[iq->ödex]), 
doô
));

101 
	`CXBd©a
(
sigbuf
, 
i
Ë
iq
->
y
[iq->
ödex
];

102 
iq
->
ödex
 = (iq->ödex + iq->
MASK
) & iq->MASK;

108 
i
 = 0; i < 
	`CXBhave
 (
sigbuf
); i++)

110 
	`CXBimag
 (
sigbuf
, 
i
Ë+
iq
->
pha£
 * 
	`CXBªÆ
 (sigbuf, i);

111 
	`CXBªÆ
 (
sigbuf
, 
i
Ë*
iq
->
gaö
;

115 
	}
}

	@correctIQ.h

1 #i‚de‡
_c‹ª˘IQ_h


2 
	#_c‹ª˘IQ_h


	)

4 
	~<bufvec.h
>

6 
	e_wbú_°©e


8 
	mFa°Ad≠t
,

9 
	mSlowAd≠t
,

10 
	mNoAd≠t
,

11 
	mJu°SayNo


12 } 
	tWBIR_STATE
;

14 
	s_iq°©e


16 
REAL
 
	mpha£
, 
	mgaö
,
	mmu
, 
	mÀakage
;

17 
COMPLEX
 *
	mw
;

18 
COMPLEX
 *
	mdñ
;

19 
COMPLEX
 *
	my
;

20 
COMPLEX
 
	mdc
;

21 
	mMASK
;

22 
	mödex
;

23 
WBIR_STATE
 
	mwbú_°©e
;

24 
BOOLEAN
 
	mwbú_tu√d
;

25 } *
	tIQ
, 
	tiq°©e
;

27 
IQ
 
√wC‹ª˘IQ
 (
REAL
 
pha£
, REAL 
gaö
, REAL 
mu
);

28 
dñC‹ª˘IQ
 (
IQ
 
iq
);

29 
c‹ª˘IQ
 (
CXB
 
sigbuf
, 
IQ
 
iq
, 
BOOLEAN
 
isTX
, 
subch™
);

30 
	#IQFIRÀngth
 1

	)

	@cwtones.c

34 
	~<cwt⁄es.h
>

37 
	$CWCom∂exOSC
 (
OSC
 
p
, 
h¨m⁄ic
, 
pha£
, 
am∂ôude
)

39 
i
;

41 if(
	`OSCpha£
 (
p
Ë> 
TWOPI
)

42 
	`OSCpha£
 (
p
Ë-
TWOPI
;

43 i‡(
	`OSCpha£
 (
p
Ë< -
TWOPI
)

44 
	`OSCpha£
 (
p
Ë+
TWOPI
;

46 
i
 = 0; i < 
	`OSCsize
 (
p
); i++)

48 
h¨m_pha£
;

50 
h¨m_pha£
 = 
h¨m⁄ic
*
	`OSCpha£
(
p
);

51 
	`CXBd©a
((
CXB
)
	`OSCba£
(
p
), 
i
Ë
	`Cm∂x
 ((
REAL
Ë(
	`cos
 (
	`OSCpha£
 (p)Ë+ 
am∂ôude
*cos(
h¨m_pha£
+
pha£
)) ,

52 (
IMAG
Ë(
	`sö
 (
	`OSCpha£
 (
p
)Ë+ 
am∂ôude
*sö(
h¨m_pha£
+
pha£
)));

53 
	`OSCpha£
 (
p
Ë+
	`OSC‰eq
 (p);

55 
	}
}

63 
BOOLEAN


64 
	$CWT⁄e
 (
CWT⁄eGí
 
cwt
)

66 
i
, 
n
 = 
cwt
->
size
;

68 
	`CWCom∂exOSC
 (
cwt
->
osc
.
gí
, cwt->
h¨m⁄ic
, cwt->
pha£
, cwt->
am∂ôude
);

70 
i
 = 0; i < 
n
; i++)

73 i‡(
cwt
->
°age
 =
CWT⁄e_RISE
)

76 i‡(
cwt
->
ri£
.
have
++ < cwt->ri£.
w™t
)

78 
cwt
->
cuº
 +cwt->
ri£
.
ö¸
;

79 
cwt
->
mul
 = cwt->
s˛
 * (
REAL
Ë
	`CWSIN
 (cwt->
cuº
 * 
M_PI
 / 2.0);

84 
cwt
->
cuº
 = 1.0;

85 
cwt
->
mul
 = cwt->
s˛
;

86 
cwt
->
°age
 = 
CWT⁄e_STDY
;

91 i‡(
cwt
->
°age
 =
CWT⁄e_FALL
)

94 i‡(
cwt
->
ÁŒ
.
have
++ < cwt->ÁŒ.
w™t
)

96 
cwt
->
cuº
 -cwt->
ÁŒ
.
ö¸
;

97 
cwt
->
mul
 = cwt->
s˛
 * (
REAL
Ë
	`CWSIN
 (cwt->
cuº
 * 
M_PI
 / 2.0);

102 
cwt
->
cuº
 = 0.0;

103 
cwt
->
mul
 = 0.0;

104 
cwt
->
°age
 = 
CWT⁄e_HOLD
;

110 
	`CXBd©a
 (
cwt
->
buf
, 
i
Ë
	`Cs˛
 (CXBd©®(cwt->buf, i), cwt->
mul
);

112 
	`CXBhave
(
cwt
->
buf
Ë
n
;

116  
cwt
->
°age
 !
CWT⁄e_HOLD
;

117 
	}
}

123 
	$CWT⁄eOn
 (
CWT⁄eGí
 
cwt
)

126 
cwt
->
s˛
 = (
REAL
Ë
	`pow
 (10.0, cwt->
gaö
 / 20.0);

127 
cwt
->
cuº
 = cwt->
mul
 = 0.0;

130 
cwt
->
ri£
.
w™t
 = (Ë(0.5 + cwt->
§
 * (cwt->ri£.
dur
 / 1e3));

131 
cwt
->
ri£
.
have
 = 0;

132 i‡(
cwt
->
ri£
.
w™t
 <= 1)

133 
cwt
->
ri£
.
ö¸
 = 1.0;

135 
cwt
->
ri£
.
ö¸
 = 1.0‡/ (cwt->ri£.
w™t
 - 1);

137 
cwt
->
ÁŒ
.
w™t
 = (Ë(0.5 + cwt->
§
 * (cwt->ÁŒ.
dur
 / 1e3));

138 
cwt
->
ÁŒ
.
have
 = 0;

139 i‡(
cwt
->
ÁŒ
.
w™t
 <= 1)

140 
cwt
->
ÁŒ
.
ö¸
 = 1.0;

142 
cwt
->
ÁŒ
.
ö¸
 = 1.0‡/ (cwt->ÁŒ.
w™t
 - 1);

145 
	`OSC‰eq
 (
cwt
->
osc
.
gí
Ë2.0 * 
M_PI
 * cwt->osc.
‰eq
 / cwt->
§
;

146 
	`OSCpha£
 (
cwt
->
osc
.
gí
) = 0.0;

148 
cwt
->
°age
 = 
CWT⁄e_RISE
;

149 
	}
}

155 
	$CWT⁄eOff
 (
CWT⁄eGí
 
cwt
)

157 
cwt
->
°age
 = 
CWT⁄e_FALL
;

158 
	}
}

163 
	$£tCWT⁄eGíVÆs
 (
CWT⁄eGí
 
cwt
, 
REAL
 
gaö
, REAL 
‰eq
, REAL 
ri£
, REAL 
ÁŒ
)

165 
cwt
->
gaö
 = gain;

166 
cwt
->
osc
.
‰eq
 = freq;

167 
cwt
->
ri£
.
dur
 =Ñise;

168 
cwt
->
ÁŒ
.
dur
 = fall;

169 
	}
}

171 
CWT⁄eGí


172 
	$√wCWT⁄eGí
 (

173 
REAL
 
gaö
,

174 
REAL
 
‰eq
,

175 
REAL
 
ri£
,

176 
REAL
 
ÁŒ
,

177 
size
,

178 
REAL
 
ßm∂î©e
)

180 
CWT⁄eGí
 
cwt
 = (CWT⁄eGíË
	`ß„Æloc
 (1,  (
CWT⁄eGíDesc
),

183 
	`£tCWT⁄eGíVÆs
 (
cwt
, 
gaö
, 
‰eq
, 
ri£
, 
ÁŒ
);

184 
cwt
->
size
 = size;

185 
cwt
->
§
 = 
ßm∂î©e
;

187 
cwt
->
osc
.
gí
 = 
	`√wOSC
 (cwt->
size
,

188 
Com∂exT⁄e
,

189 (Ë
cwt
->
osc
.
‰eq
, 0.0, cwt->
§
, "CWTone osc");

192 
cwt
->
buf
 = 
	`√wCXB
 (cwt->
size
, 
	`OSCCba£
 (cwt->
osc
.
gí
), "CWToneGen buf");

194  
cwt
;

195 
	}
}

198 
	$dñCWT⁄eGí
 (
CWT⁄eGí
 
cwt
)

200 i‡(
cwt
)

202 
	`dñCXB
 (
cwt
->
buf
);

203 
	`dñOSC
 (
cwt
->
osc
.
gí
);

204 
	`ß„‰ì
 ((*Ë
cwt
);

206 
	}
}

	@cwtones.h

34 #i‚de‡
_cwt⁄e_h


35 
	#_cwt⁄e_h


	)

37 
	~<‰omsys.h
>

38 
	~<b™Æ.h
>

39 
	~<d©©y≥s.h
>

40 
	~<bufvec.h
>

41 
	~<cx›s.h
>

42 
	~<oscûœt‹.h
>

43 
	~<m©h.h
>

45 
	#CWT⁄e_IDLE
 (0)

	)

46 
	#CWT⁄e_WAIT
 (1)

	)

47 
	#CWT⁄e_RISE
 (2)

	)

48 
	#CWT⁄e_STDY
 (3)

	)

49 
	#CWT⁄e_FALL
 (4)

	)

50 
	#CWT⁄e_HOLD
 (5)

	)

51 
	#CWSIN
 
sö


	)

52 
	s_cw_t⁄e_gí


54 
REAL
 
	mcuº
, 
	mgaö
, 
	mmul
, 
	ms˛
, 
	m§
;

57 
REAL
 
	m‰eq
;

58 
OSC
 
	mgí
;

59 } 
	mosc
;

60 
	mh¨m⁄ic
, 
	mam∂ôude
, 
	mpha£
;

63 
REAL
 
	mdur
, 
	mö¸
;

64 
	mw™t
, 
	mhave
;

65 } 
	mri£
, 
	mÁŒ
;

66 
	msize
, 
	m°age
;

67 
CXB
 
	mbuf
;

68 } 
	tCWT⁄eGíDesc
, *
	tCWT⁄eGí
;

70 
CWT⁄eGí
 
√wCWT⁄eGí
 (
REAL
 
gaö
,

71 
REAL
 
‰eq
,

72 
REAL
 
ri£
,

73 
REAL
 
ÁŒ
,

74 
size
,

75 
REAL
 
ßm∂î©e
);

76 
dñCWT⁄eGí
 (
CWT⁄eGí
 
gí
);

77 
£tCWT⁄eGíVÆs
 (
CWT⁄eGí
 
gí
,

78 
REAL
 
gaö
, REAL 
‰eq
, REAL 
ri£
, REAL 
ÁŒ
);

79 
CWT⁄eOn
 (
CWT⁄eGí
 
gí
);

80 
CWT⁄eOff
 (
CWT⁄eGí
 
gí
);

81 
BOOLEAN
 
CWT⁄e
 (
CWT⁄eGí
 
gí
);

	@cxops.c

33 
	~<cx›s.h
>

37 
COMPLEX
 
	gcxzîo
 = { 0.0, 0.0 };

38 
COMPLEX
 
	gcx⁄e
 = { 1.0, 0.0 };

39 
COMPLEX
 
	gcxJ
 = { 0.0, 1.0 };

40 
COMPLEX
 
	gcxmöus⁄e
 = { -1.0, 0.0 };

41 
COMPLEX
 
	gcxmöusJ
 = { 0.0, -1.0 };

43 #ifde‡
DONT_INCLUDE


44 
__f‹˚ölöe
 
	$vecSq
(
s£vec
 *
a
, s£ve¯*
b
, 
l
)

46 
i
;

47 
s£vec
 *
ös_a
,*
ös_b
;

48 
i
=0;i<
l
;i++)

50 
ös_a
 = 
a
+
i
;

51 
ös_b
 = 
b
+
i
;

52 
_asm


54 
mov
 
ebx
, [
ös_a
]

55 
movups
 
xmm0
, [
ebx
]

56 
muÕs
 
xmm0
,xmm0

57 
mov
 
ebx
, [
ös_b
]

58 
movups
 [
ebx
], 
xmm1


61 
	}
}

	@cxops.h

33 #i‚de‡
_cx›s_h


35 
	#_cx›s_h


	)

37 
	~<com∂ex.h
>

38 
	~<d©©y≥s.h
>

39 
	~<Á°rig.h
>

41 
COMPLEX
 
cxzîo
;

42 
COMPLEX
 
cx⁄e
;

43 
COMPLEX
 
cxJ
;

44 
COMPLEX
 
cxmöus⁄e
;

45 
COMPLEX
 
cxmöusJ
;

50 
INLINE
 
COMPLEX


51 
	$Cs˛
 (
COMPLEX
 
x
, 
REAL
 
a
)

53 
COMPLEX
 
z
;

54 
	`c_ª
 (
z
Ëc_ª (
x
Ë* 
a
;

55 
	`c_im
 (
z
Ëc_im (
x
Ë* 
a
;

56  
z
;

57 
	}
}

59 
INLINE
 
COMPLEX


60 
	$Cadd
 (
COMPLEX
 
x
, COMPLEX 
y
)

62 
COMPLEX
 
z
;

63 
	`c_ª
 (
z
Ëc_ª (
x
Ë+ c_ª (
y
);

64 
	`c_im
 (
z
Ëc_im (
x
Ë+ c_im (
y
);

65  
z
;

66 
	}
}

68 
INLINE
 
COMPLEX


69 
	$Csub
 (
COMPLEX
 
x
, COMPLEX 
y
)

71 
COMPLEX
 
z
;

72 
	`c_ª
 (
z
Ëc_ª (
x
Ë- c_ª (
y
);

73 
	`c_im
 (
z
Ëc_im (
x
Ë- c_im (
y
);

74  
z
;

75 
	}
}

77 
INLINE
 
COMPLEX


78 
	$Cmul
 (
COMPLEX
 
x
, COMPLEX 
y
)

80 
COMPLEX
 
z
;

81 
	`c_ª
 (
z
Ëc_ª (
x
Ë* c_ª (
y
Ë- 
	`c_im
 (x) * c_im (y);

82 
	`c_im
 (
z
Ëc_im (
x
Ë* 
	`c_ª
 (
y
) + c_re (x) * c_im (y);

83  
z
;

84 
	}
}

86 
INLINE
 
COMPLEX


87 
	$Cdiv
 (
COMPLEX
 
x
, COMPLEX 
y
)

89 
REAL
 
d
 = (
	`c_ª
 (
y
)*c_ª (y)Ë+ (
	`c_im
 (y)*c_im (y));

91 
COMPLEX
 
z
;

92 
	`c_ª
 (
z
Ë(c_ª (
x
Ë* c_ª (
y
Ë+ 
	`c_im
 (xË* c_im (y)Ë/ 
d
;

93 
	`c_im
 (
z
Ë(
	`c_ª
 (
y
Ë* c_im (
x
Ë- c_im (yË* c_ª (x)Ë/ 
d
;

94  
z
;

95 
	}
}

97 
INLINE
 
REAL


98 
	$C≠pmag
(
COMPLEX
 
z
)

100 
REAL
 
tm¥
 = (REAL)
	`Ábs
(
z
.
ª
);

101 
REAL
 
tmpi
 = (REAL)
	`Ábs
(
z
.
im
);

102 
REAL
 
tmp
 = (
tm¥
 < 
tmpi
 ? 0.4f*tmpr + 0.7f*tmpi : 0.4f*tmpi + 0.7f*tmpr);

103  
tmp
;

104 
	}
}

106 
INLINE
 
REAL


107 
	$Cmag
 (
COMPLEX
 
z
)

110  (
REAL
Ë
	`sqπ
 ((
z
.
ª
*z.ªË+ (z.
im
*z.im));

113 
	}
}

115 
INLINE
 
REAL


116 
	$Cabs
 (
COMPLEX
 
z
)

118  (
REAL
Ë
	`sqπ
 ((
z
.
ª
*z.ªË+ (z.
im
*z.im));

119 
	}
}

121 
INLINE
 
REAL


122 
	$Csqrmag
 (
COMPLEX
 
z
)

124  (
z
.
ª
*z.ªË+ (z.
im
*z.im);

125 
	}
}

127 
INLINE
 
COMPLEX


128 
	$Cm∂x
 (
REAL
 
x
, 
IMAG
 
y
)

130 
COMPLEX
 
z
;

131 
z
.
ª
 = 
x
, z.
im
 = 
y
;

132  
z
;

133 
	}
}

135 
INLINE
 
COMPLEX


136 
	$C⁄jg
 (
COMPLEX
 
z
)

138  
	`Cm∂x
 (
z
.
ª
, -z.
im
);

139 
	}
}

141 
INLINE
 
COMPLEX


142 
	$Cexp
 (
COMPLEX
 
z
)

144 
REAL
 
r
 = (REALË
	`exp
 (
z
.
ª
);

145  
	`Cm∂x
 ((
REAL
Ë(
r
 * 
	`cos
 (
z
.
im
)), (
IMAG
Ë‘ * 
	`sö
 (z.im)));

146 
	}
}

148 
INLINE
 
COMPLEX


149 
	$Cp2r
 (
COMPLEX
 
z
)

151  
	`Cm∂x
 ((
REAL
Ë(
z
.
ª
 * 
	`cos
 (z.
im
)), (
IMAG
Ë(z.ª * 
	`sö
 (z.im)));

152 
	}
}

154 
INLINE
 
COMPLEX


155 
	$Cr2p
 (
COMPLEX
 
z
)

157  
	`Cm∂x
 (

158 (
REAL
Ë(
	`sqπ
 ((
z
.
ª
*z.ªË+ (z.
im
*z.im))),

160 (
REAL
Ë
	`©™2
 (
z
.
im
, z.
ª
));

161 
	}
}

162 
	sSSEVEC


164 
	ma
,
	mb
,
	mc
,
	md
;

165 } 
	ts£vec
;

	@datatypes.h

34 #i‚de‡
_d©©y≥s_h


36 
	#_d©©y≥s_h


	)

38 
	~<‰omsys.h
>

41 
	tBOOLEAN
;

42 
	tREAL
;

43 
	tIMAG
;

44 
	tSAMPLE_16t
;

45 
	tHANDLE
;

48 
	~<com∂ex.h
>

50 #i‚de‡
PRIVATE


51 
	#PRIVATE
 

	)

54 #i‚de‡
INLINE


56 
	#INLINE


	)

59 
	~<b™Æ.h
>

	@dcblock.c

34 
	~<dcblock.h
>

39 
PRIVATE
 
REAL


40 
buâîw‹th_hùass_100_2
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
),

41 
buâîw‹th_hùass_100_4
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
),

42 
buâîw‹th_hùass_100_6
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
),

43 
buâîw‹th_hùass_100_8
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
);

46 
	$DCBlock
 (
DCBlockî
 
dcb
)

48 
i
;

49 
REAL
 
x
, 
y
;

51 
dcb
->
Àv
)

53 
DCB_LOW
:

54 
i
 = 0; i < 
	`CXBsize
 (
dcb
->
buf
); i++)

56 
x
 = 
	`CXBªÆ
 (
dcb
->
buf
, 
i
);

57 
y
 = 
	`buâîw‹th_hùass_100_2
 (
x
, 
dcb
->
ﬁd
.
öp
, dcb->ﬁd.
out
);

58 
	`CXBd©a
 (
dcb
->
buf
, 
i
Ë
	`Cm∂x
 (
y
, 0.0);

62 
DCB_MED
:

63 
i
 = 0; i < 
	`CXBsize
 (
dcb
->
buf
); i++)

65 
x
 = 
	`CXBªÆ
 (
dcb
->
buf
, 
i
);

66 
y
 = 
	`buâîw‹th_hùass_100_4
 (
x
, 
dcb
->
ﬁd
.
öp
, dcb->ﬁd.
out
);

67 
	`CXBd©a
 (
dcb
->
buf
, 
i
Ë
	`Cm∂x
 (
y
, 0.0);

71 
DCB_HIGH
:

72 
i
 = 0; i < 
	`CXBsize
 (
dcb
->
buf
); i++)

74 
x
 = 
	`CXBªÆ
 (
dcb
->
buf
, 
i
);

75 
y
 = 
	`buâîw‹th_hùass_100_6
 (
x
, 
dcb
->
ﬁd
.
öp
, dcb->ﬁd.
out
);

76 
	`CXBd©a
 (
dcb
->
buf
, 
i
Ë
	`Cm∂x
 (
y
, 0.0);

80 
DCB_SUPER
:

81 
i
 = 0; i < 
	`CXBsize
 (
dcb
->
buf
); i++)

83 
x
 = 
	`CXBªÆ
 (
dcb
->
buf
, 
i
);

84 
y
 = 
	`buâîw‹th_hùass_100_8
 (
x
, 
dcb
->
ﬁd
.
öp
, dcb->ﬁd.
out
);

85 
	`CXBd©a
 (
dcb
->
buf
, 
i
Ë
	`Cm∂x
 (
y
, 0.0);

88 
DCB_SINGLE_POLE
:

89 
i
 = 0; i < 
	`CXBsize
 (
dcb
->
buf
); i++)

91 
COMPLEX
 
x
=
	`CXBd©a
(
dcb
->
buf
,
i
);

92 
dcb
->
sigvÆ
 = 
	`Cadd
(
	`Cs˛
(
x
,.00005f), Cscl(dcb->sigval,0.99995f));

93 
	`CXBd©a
 (
dcb
->
buf
, 
i
Ë
	`Csub
(
x
,dcb->
sigvÆ
);

99 
	}
}

102 
	$ª£tDCBlockî
 (
DCBlockî
 
dcb
, 
Àv
)

104 
	`mem£t
 ((*Ë
dcb
->
ﬁd
.
öp
, 0, 
BLKMEM
 *  (
REAL
));

105 
	`mem£t
 ((*Ë
dcb
->
ﬁd
.
out
, 0, 
BLKMEM
 *  (
REAL
));

106 
dcb
->
Àv
 =Üev;

107 
	}
}

109 
DCBlockî


110 
	$√wDCBlockî
 (
Àv
, 
CXB
 
buf
)

112 
DCBlockî
 
dcb
 =

113 (
DCBlockî
Ë
	`ß„Æloc
 (1,  (
DCBlockîInfo
), "DCBlocker");

114 
dcb
->
buf
 = 
	`√wCXB
 (
	`CXBsize
 (buf), 
	`CXBba£
 (buf), "DCBlocker");

115 
dcb
->
Àv
 =Üev;

116 
dcb
->
sigvÆ
 = 
cxzîo
;

117  
dcb
;

118 
	}
}

121 
	$dñDCBlockî
 (
DCBlockî
 
dcb
)

123 i‡(
dcb
)

125 
	`dñCXB
 (
dcb
->
buf
);

126 
	`ß„‰ì
 ((*Ë
dcb
);

128 
	}
}

132 
PRIVATE
 
REAL


133 
	$buâîw‹th_hùass_100_2
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
)

135 
i
;

137 
i
 = 1; i < 2; i++)

138 
xv
[
i
 - 1] = xv[i], 
yv
[i - 1] = yv[i];

140 
xv
[2] = (
REAL
Ë(
xö
 / 1.009297482);

142 
yv
[2] = (
REAL
Ë((
xv
[0] + xv[2])

143 + -2.0 * 
xv
[1]

144 + -0.9816611902 * 
yv
[0]

145 + 1.9814914708 * 
yv
[1]);

147  
yv
[2];

148 
	}
}

150 
PRIVATE
 
REAL


151 
	$buâîw‹th_hùass_100_4
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
)

153 
i
;

155 
i
 = 1; i < 4; i++)

156 
xv
[
i
 - 1] = xv[i], 
yv
[i - 1] = yv[i];

158 
xv
[4] = (
REAL
Ë(
xö
 / 1.012);

160 
yv
[4] = (
REAL
Ë((
xv
[0] + xv[4])

161 + -4.0 * (
xv
[1] + xv[3])

162 + 6.0 * 
xv
[2]

163 + -0.976340271 * 
yv
[0]

164 + 3.928738552 * 
yv
[1]

165 + -5.928454312 * 
yv
[2]

166 + 3.976056024 * 
yv
[3]);

168  
yv
[4];

169 
	}
}

171 
PRIVATE
 
REAL


172 
	$buâîw‹th_hùass_100_6
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
)

174 
i
;

176 
i
 = 1; i < 6; i++)

177 
xv
[
i
 - 1] = xv[i], 
yv
[i - 1] = yv[i];

179 
xv
[6] = (
REAL
Ë(
xö
 / 1.025606415);

181 
yv
[6] = (
REAL
Ë((
xv
[0] + xv[6])

182 + -6.0 * (
xv
[1] + xv[5])

183 + 15.0 * (
xv
[2] + xv[4])

184 + -20.0 * 
xv
[3]

185 + -0.9506891622 * 
yv
[0]

186 + 5.7522090378 * 
yv
[1]

187 + -14.5019247580 * 
yv
[2]

188 + 19.4994114580 * 
yv
[3]

189 + -14.7484389800 * 
yv
[4]

190 + 5.9494324049 * 
yv
[5]);

192  
yv
[6];

193 
	}
}

195 
PRIVATE
 
REAL


196 
	$buâîw‹th_hùass_100_8
 (
REAL
 
xö
, REAL * 
xv
, REAL * 
yv
)

198 
i
;

200 
i
 = 1; i < 8; i++)

201 
xv
[
i
 - 1] = xv[i], 
yv
[i - 1] = yv[i];

203 
xv
[8] = (
REAL
Ë(
xö
 / 1.034112352);

205 
yv
[8] = (
REAL
Ë((
xv
[0] + xv[8])

206 + -8.0 * (
xv
[1] + xv[7])

207 + 28.0 * (
xv
[2] + xv[6])

208 + -56.0 * (
xv
[3] + xv[5])

209 + 70.0 * 
xv
[4]

210 + -0.9351139781 * 
yv
[0]

211 + 7.5436450525 * 
yv
[1]

212 + -26.6244301320 * 
yv
[2]

213 + 53.6964633920 * 
yv
[3]

214 + -67.6854640540 * 
yv
[4]

215 + 54.6046308830 * 
yv
[5]

216 + -27.5326449810 * 
yv
[6]

217 + 7.9329138172 * 
yv
[7]);

219  
yv
[8];

220 
	}
}

	@dcblock.h

34 #i‚de‡
_dcblock_h


35 
	#_dcblock_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<b™Æ.h
>

40 
	~<•lôfõlds.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

45 
	#BLKMEM
 (9)

	)

46 
	#DCB_LOW
 (0)

	)

47 
	#DCB_MED
 (1)

	)

48 
	#DCB_HIGH
 (2)

	)

49 
	#DCB_SUPER
 (3)

	)

50 
	#DCB_SINGLE_POLE
 (4)

	)

52 
	s_dcblockî


56 
REAL
 
	möp
[
BLKMEM
], 
	mout
[BLKMEM];

57 } 
	mﬁd
;

58 
	mÀv
;

59 
COMPLEX
 
	msigvÆ
;

60 
CXB
 
	mbuf
;

61 
REAL
 
	mgaö
;

62 
BOOLEAN
 
	mÊag
;

63 } 
	tDCBlockîInfo
, *
	tDCBlockî
;

65 
DCBlock
 (
DCBlockî
 
dcb
);

66 
ª£tDCBlockî
 (
DCBlockî
 
dcb
, 
Àv
);

67 
DCBlockî
 
√wDCBlockî
 (
Àv
, 
CXB
 
buf
);

68 
dñDCBlockî
 (
DCBlockî
 
dcb
);

	@defs.h

34 #i‚de‡
_defs_h


35 
	#_defs_h


	)

37 
	#RINGMULT
 (4)

	)

38 
	#METERMULT
 (20)

	)

39 
	#SPECMULT
 (4)

	)

40 
	#DEFRATE
 (48000.0)

	)

41 
	#DEFSIZE
 (4096)

	)

42 
	#DEFMODE
 (
USB
)

	)

43 
	#DEFSPEC
 (4096)

	)

44 
	#DEFCOMP
 (512)

	)

46 
	#MAXRX
 (2)

	)

48 #i‚de‡
MAXPATHLEN


49 
	#MAXPATHLEN
 (2048)

	)

52 
	e_sdrmode


54 
	mLSB
,

55 
	mUSB
,

56 
	mDSB
,

57 
	mCWL
,

58 
	mCWU
,

59 
	mFMN
,

60 
	mAM
,

61 
	mDIGU
,

62 
	mSPEC
,

63 
	mDIGL
,

64 
	mSAM
,

65 
	mDRM


66 } 
	tSDRMODE
;

68 
	e_swch°©e
 {

69 
	mSWCH_FALL
,

70 
	mSWCH_STDY
,

71 
	mSWCH_RISE


72 } 
	tSWCHSTATE
;

74 
	e_åxmode


75 { 
	mRX
, 
	mTX
 } 
	tTRXMODE
;

	@diversity.h

35 #i‚de‡
_divîsôy_h


36 
	#_divîsôy_h


	)

37 
	~<d©©y≥s.h
>

38 
	~<±hªad.h
>

40 
	s_divîsôy_block


42 
BOOLEAN
 
	mÊag
;

43 
COMPLEX
 
	msˇœr
;

44 
REAL
 
	mgaö
;

45 
±hªad_muãx_t
 
	mdivîsôy_osc_muãx
,
	mdivîsôy_sum_muãx
, 
	mdivîsôy_out_muãx
, 
	mdivîsôy_åx_muãx
;

46 
±hªad_c⁄d_t
 
	mdv_osc_c⁄d
,
	mdv_sum_c⁄d
,
	mdv_out_c⁄d
, 
	mdv_åx_c⁄d
;

47 } 
	tDivîsôyC⁄åﬁ
;

51 
b¨rõr_osc
();

52 
b¨rõr_sum
();

53 
b¨rõr_out
();

	@dttspagc.c

35 
	~<comm⁄.h
>

38 
DTTSPAGC


39 
	$√wDâSPAgc
 (
AGCMODE
 
mode
,

40 
COMPLEX
 *
Vec
,

41 
BufSize
,

42 
REAL
 
èrgë
,

43 
REAL
 
©èck
,

44 
REAL
 
deˇy
,

45 
REAL
 
¶›e
,

46 
REAL
 
h™gtime
,

47 
REAL
 
ßm¥©e
,

48 
REAL
 
MaxGaö
,

49 
REAL
 
MöGaö
,

50 
REAL
 
CurGaö
,

51 *
èg
)

53 
DTTSPAGC
 
a
;

55 
a
 = (
DTTSPAGC
Ë
	`ß„Æloc
 (1,  (
dâ•agc
), 
èg
);

56 
a
->
mode
 = mode;

62 
a
->
©èck
 = (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (©èck * 
ßm¥©e
)));

64 
a
->
⁄e_m_©èck
 = (
REAL
Ë(1.0 -á->
©èck
);

67 
a
->
deˇy
 = (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (deˇy * 
ßm¥©e
)));

69 
a
->
⁄e_m_deˇy
 = (
REAL
Ë(1.0 -á->
deˇy
);

77 
a
->
Á°©èck
 = (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (0.2 * 
ßm¥©e
)));

79 
a
->
⁄e_m_Á°©èck
 = (
REAL
Ë(1.0 -á->
Á°©èck
);

82 
a
->
Á°deˇy
 = (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (3.0 * 
ßm¥©e
)));

84 
a
->
⁄e_m_Á°deˇy
 = (
REAL
Ë(1.0 -á->
Á°deˇy
);

87 
	`°r˝y
 (
a
->
èg
,Åag);

90 
a
->
mask
 = 2 * 
BufSize
 - 1;

94 
a
->
h™gödex
 =á->
¶owödx
 = 0;

96 
a
->
h™gtime
 = hangtime * 0.001f;

101 
a
->
out_ödx
 = (Ë(
ßm¥©e
 * 
©èck
 * 0.003f);

104 
a
->
Á°ödx
 = ()(0.0027f*
ßm¥©e
);

105 
a
->
gaö
.
fix
 = 10.0;

109 
a
->
¶›e
 = slope;

112 
a
->
gaö
.
t›
 = 
MaxGaö
;

114 
a
->
h™gthªsh
 =á->
gaö
.
bŸtom
 = 
MöGaö
;

116 
a
->
gaö
.
Á°now
 =á->gaö.
ﬁd
 =á->gaö.
now
 = 
CurGaö
;

119 
a
->
gaö
.
èrgë
 =Åarget;

123 
a
->
buff
 = 
	`√wCXB
 (
BufSize
, 
Vec
, "agc in buffer");

125 
a
->
cúc
 = 
	`√wvec_COMPLEX
 (2 * 
BufSize
, "circularágc buffer");

128 
a
->
Á°h™g
 = 0;

131 
a
->
Á°h™gtime
 = 0.1f*a->
h™gtime
;

133  
a
;

134 
	}
}

137 
	$DâSPAgc_Êushbuf
(
DTTSPAGC
 
a
)

139 
	`mem£t
((*)
a
->
cúc
,0,(
COMPLEX
)*◊->
mask
+1));

140 
	}
}

143 
	$DâSPAgc
 (
DTTSPAGC
 
a
, 
tick
)

145 
i
;

146 
h™gtime
 = (Ë(
uni
[0].
ßm∂î©e
 * 
a
->hangtime);

147 
Á°h™gtime
 = (Ë(
uni
[0].
ßm∂î©e
 * 
a
->fasthangtime);

149 
REAL
 
h™gthªsh
;

152 
h™gthªsh
 =

153 
a
->
gaö
.
t›
 *á->
h™gthªsh
 +á->gaö.
bŸtom
 * (
REAL
) (1.0 -

154 
a
->
h™gthªsh
);

158 i‡(
a
->
mode
 == 0)

160 
i
 = 0; i < 
	`CXBsize
 (
a
->
buff
); i++)

161 
	`CXBd©a
 (
a
->
buff
, 
i
Ë
	`Cs˛
 (CXBd©®◊->buff, i),á->
gaö
.
fix
);

165 
i
 = 0; i < 
	`CXBsize
 (
a
->
buff
); i++)

167 
REAL
 
tmp
;

168 
a
->
cúc
[a->
¶owödx
] = 
	`CXBd©a
 (a->
buff
, 
i
);

171 
tmp
 = 
	`Cmag
 (
a
->
cúc
[a->
¶owödx
]);

172 i‡(
tmp
 > 0.0f)

173 
tmp
 = 
a
->
gaö
.
èrgë
 /Åmp;

177 
tmp
 = 
a
->
gaö
.
now
;

178 i‡(
tmp
 < 
h™gthªsh
)

179 
a
->
h™gödex
 = 
h™gtime
;

181 i‡(
tmp
 >
a
->
gaö
.
now
)

185 i‡(
a
->
h™gödex
++ > 
h™gtime
)

187 
a
->
gaö
.
now
 =

188 
a
->
⁄e_m_deˇy
 *á->
gaö
.
now
 +

189 
a
->
deˇy
 * 
	`mö
 (a->
gaö
.
t›
, 
tmp
);

194 
a
->
h™gödex
 = 0;

196 
a
->
gaö
.
now
 =

197 
a
->
⁄e_m_©èck
 *á->
gaö
.
now
 +á->
©èck
 * 
	`max
 (
tmp
,

198 
a
->
gaö
.
bŸtom
);

203 
tmp
 = 
	`Cmag
 (
a
->
cúc
[a->
Á°ödx
]);

204 i‡(
tmp
 > 0.0f)

205 
tmp
 = 
a
->
gaö
.
èrgë
 /Åmp;

209 
tmp
 = 
a
->
gaö
.
Á°now
;

210 i‡(
tmp
 > 
a
->
gaö
.
Á°now
)

213 i‡(
a
->
Á°h™g
++ > 
Á°h™gtime
)

215 
a
->
gaö
.
Á°now
 =

216 
a
->
⁄e_m_Á°deˇy
 *á->
gaö
.
Á°now
 +

217 
a
->
Á°deˇy
 * 
	`mö
 (a->
gaö
.
t›
, 
tmp
);

222 
a
->
Á°h™g
 = 0;

223 
a
->
gaö
.
Á°now
 =

224 
a
->
⁄e_m_Á°©èck
 *á->
gaö
.
Á°now
 +

225 
a
->
Á°©èck
 * 
	`max
 (
tmp
,á->
gaö
.
bŸtom
);

233 
	`CXBd©a
 (
a
->
buff
, 
i
) =

234 
	`Cs˛
 (
a
->
cúc
[a->
out_ödx
],

235 
	`mö
 (
a
->
gaö
.
Á°now
, (a->
¶›e
 *á->gaö.
now
)));

238 
a
->
¶owödx
 = (a->¶owödx +á->
mask
) &á->mask;

239 
a
->
out_ödx
 = (a->out_ödx +á->
mask
) &á->mask;

240 
a
->
Á°ödx
 = (a->Á°ödx +á->
mask
) &á->mask;

242 
	}
}

245 
	$dñDâSPAgc
 (
DTTSPAGC
 
a
)

247 
	`dñCXB
 (
a
->
buff
);

248 
	`dñvec_COMPLEX
 (
a
->
cúc
);

249 i‡(
a
)

250 
	`ß„‰ì
 ((*Ë
a
);

251 
	}
}

	@dttspagc.h

33 #i‚de‡
_dâ•agc_h


34 
	#_dâ•agc_h


	)

35 
	e_agcmode


36 { 
	magcOFF
, 
	magcLONG
, 
	magcSLOW
, 
	magcMED
, 
	magcFAST
 } 
	tAGCMODE
;

37 
	s_dâ•agc


39 
	mmode
;

40 
	s_gaö


42 
REAL
 
	mt›
, 
	mnow
, 
	mÁ°now
, 
	mbŸtom
, 
	mﬁd
, 
	mèrgë
, 
	møw
, 
	mfix
;

43 } 
	mgaö
, 
	mÁ°gaö
;

44 
REAL
 
	m©èck
;

45 
REAL
 
	m⁄e_m_©èck
;

46 
REAL
 
	mdeˇy
;

47 
REAL
 
	m⁄e_m_deˇy
;

48 
REAL
 
	m¶›e
;

49 
REAL
 
	mÁ°©èck
;

50 
REAL
 
	m⁄e_m_Á°©èck
;

51 
REAL
 
	mÁ°deˇy
;

52 
REAL
 
	m⁄e_m_Á°deˇy
;

53 
REAL
 
	mh™gtime
;

54 
REAL
 
	mh™gthªsh
;

55 
REAL
 
	mÁ°h™gtime
;

56 
COMPLEX
 *
	mcúc
;

57 
REAL
 *
	mmagvec
;

58 
CXB
 
	mbuff
;

59 
	mmask
;

60 
	m¶owödx
;

61 
	mout_ödx
;

62 
	mh™gödex
;

63 
	mÁ°ödx
;

64 
	mÁ°h™g
;

65 
	mèg
[4];

66 } 
	tdâ•agc
, *
	tDTTSPAGC
;

68 
DâSPAgc
 (
DTTSPAGC
 
a
, 
tick
);

69 
DTTSPAGC
 
√wDâSPAgc
 (
AGCMODE
 
mode
, 
COMPLEX
 * 
Vec
, 
BufSize
,

70 
REAL
 
Limô
, REAL 
©èck
, REAL 
deˇy
,

71 
REAL
 
¶›e
, REAL 
h™gtime
, REAL 
ßm¥©e
,

72 
REAL
 
MaxGaö
, REAL 
MöGaö
, REAL 
Curgaö
,

73 *
èg
);

74 
dñDâSPAgc
 (
DTTSPAGC
 
a
);

75 
DâSPAgc_Êushbuf
(
DTTSPAGC
 
a
);

76 
	#FASTLEAD
 200

	)

	@fastrig.c

35 
	~<Á°rig.h
>

37 
REAL


38 
	$pha£mod
 (
REAL
 
™gÀ
)

40 
™gÀ
 >
TWOPI
)

41 
™gÀ
 -(
REAL
Ë
TWOPI
;

42 
™gÀ
 < 0.0)

43 
™gÀ
 +(
REAL
Ë
TWOPI
;

44  
™gÀ
;

45 
	}
}

53 
REAL
 
	gTABLE_FACTOR
;

54 
REAL
 *
	gsöT
, *
	gcosT
;

59 
	#TAN_MAP_RES
 0.003921569

	)

60 
	#RAD_PER_DEG
 0.017453293

	)

61 
	#TAN_MAP_SIZE
 256

	)

64 
REAL
 
	gÁ°_©™_èbÀ
[257] = {

65 (
REAL
)0.000000e+00,(REAL) 3.921549e-03,(REAL) 7.842976e-03,(REAL) 1.176416e-02,

66 (
REAL
)1.568499e-02,(REAL) 1.960533e-02,(REAL) 2.352507e-02,(REAL) 2.744409e-02,

67 (
REAL
)3.136226e-02,(REAL) 3.527947e-02,(REAL) 3.919560e-02,(REAL) 4.311053e-02,

68 (
REAL
)4.702413e-02,(REAL) 5.093629e-02,(REAL) 5.484690e-02,(REAL) 5.875582e-02,

69 (
REAL
)6.266295e-02,(REAL) 6.656816e-02,(REAL) 7.047134e-02,(REAL) 7.437238e-02,

70 (
REAL
)7.827114e-02,(REAL) 8.216752e-02,(REAL) 8.606141e-02,(REAL) 8.995267e-02,

71 (
REAL
)9.384121e-02,(REAL) 9.772691e-02,(REAL) 1.016096e-01,(REAL) 1.054893e-01,

72 (
REAL
)1.093658e-01,(REAL) 1.132390e-01,(REAL) 1.171087e-01,(REAL) 1.209750e-01,

73 (
REAL
)1.248376e-01,(REAL) 1.286965e-01,(REAL) 1.325515e-01,(REAL) 1.364026e-01,

74 (
REAL
)1.402496e-01,(REAL) 1.440924e-01,(REAL) 1.479310e-01,(REAL) 1.517652e-01,

75 (
REAL
)1.555948e-01,(REAL) 1.594199e-01,(REAL) 1.632403e-01,(REAL) 1.670559e-01,

76 (
REAL
)1.708665e-01,(REAL) 1.746722e-01,(REAL) 1.784728e-01,(REAL) 1.822681e-01,

77 (
REAL
)1.860582e-01,(REAL) 1.898428e-01,(REAL) 1.936220e-01,(REAL) 1.973956e-01,

78 (
REAL
)2.011634e-01,(REAL) 2.049255e-01,(REAL) 2.086818e-01,(REAL) 2.124320e-01,

79 (
REAL
)2.161762e-01,(REAL) 2.199143e-01,(REAL) 2.236461e-01,(REAL) 2.273716e-01,

80 (
REAL
)2.310907e-01,(REAL) 2.348033e-01,(REAL) 2.385093e-01,(REAL) 2.422086e-01,

81 (
REAL
)2.459012e-01,(REAL) 2.495869e-01,(REAL) 2.532658e-01,(REAL) 2.569376e-01,

82 (
REAL
)2.606024e-01,(REAL) 2.642600e-01,(REAL) 2.679104e-01,(REAL) 2.715535e-01,

83 (
REAL
)2.751892e-01,(REAL) 2.788175e-01,(REAL) 2.824383e-01,(REAL) 2.860514e-01,

84 (
REAL
)2.896569e-01,(REAL) 2.932547e-01,(REAL) 2.968447e-01,(REAL) 3.004268e-01,

85 (
REAL
)3.040009e-01,(REAL) 3.075671e-01,(REAL) 3.111252e-01,(REAL) 3.146752e-01,

86 (
REAL
)3.182170e-01,(REAL) 3.217506e-01,(REAL) 3.252758e-01,(REAL) 3.287927e-01,

87 (
REAL
)3.323012e-01,(REAL) 3.358012e-01,(REAL) 3.392926e-01,(REAL) 3.427755e-01,

88 (
REAL
)3.462497e-01,(REAL) 3.497153e-01,(REAL) 3.531721e-01,(REAL) 3.566201e-01,

89 (
REAL
)3.600593e-01,(REAL) 3.634896e-01,(REAL) 3.669110e-01,(REAL) 3.703234e-01,

90 (
REAL
)3.737268e-01,(REAL) 3.771211e-01,(REAL) 3.805064e-01,(REAL) 3.838825e-01,

91 (
REAL
)3.872494e-01,(REAL) 3.906070e-01,(REAL) 3.939555e-01,(REAL) 3.972946e-01,

92 (
REAL
)4.006244e-01,(REAL) 4.039448e-01,(REAL) 4.072558e-01,(REAL) 4.105574e-01,

93 (
REAL
)4.138496e-01,(REAL) 4.171322e-01,(REAL) 4.204054e-01,(REAL) 4.236689e-01,

94 (
REAL
)4.269229e-01,(REAL) 4.301673e-01,(REAL) 4.334021e-01,(REAL) 4.366272e-01,

95 (
REAL
)4.398426e-01,(REAL) 4.430483e-01,(REAL) 4.462443e-01,(REAL) 4.494306e-01,

96 (
REAL
)4.526070e-01,(REAL) 4.557738e-01,(REAL) 4.589307e-01,(REAL) 4.620778e-01,

97 (
REAL
)4.652150e-01,(REAL) 4.683424e-01,(REAL) 4.714600e-01,(REAL) 4.745676e-01,

98 (
REAL
)4.776654e-01,(REAL) 4.807532e-01,(REAL) 4.838312e-01,(REAL) 4.868992e-01,

99 (
REAL
)4.899573e-01,(REAL) 4.930055e-01,(REAL) 4.960437e-01,(REAL) 4.990719e-01,

100 (
REAL
)5.020902e-01,(REAL) 5.050985e-01,(REAL) 5.080968e-01,(REAL) 5.110852e-01,

101 (
REAL
)5.140636e-01,(REAL) 5.170320e-01,(REAL) 5.199904e-01,(REAL) 5.229388e-01,

102 (
REAL
)5.258772e-01,(REAL) 5.288056e-01,(REAL) 5.317241e-01,(REAL) 5.346325e-01,

103 (
REAL
)5.375310e-01,(REAL) 5.404195e-01,(REAL) 5.432980e-01,(REAL) 5.461666e-01,

104 (
REAL
)5.490251e-01,(REAL) 5.518738e-01,(REAL) 5.547124e-01,(REAL) 5.575411e-01,

105 (
REAL
)5.603599e-01,(REAL) 5.631687e-01,(REAL) 5.659676e-01,(REAL) 5.687566e-01,

106 (
REAL
)5.715357e-01,(REAL) 5.743048e-01,(REAL) 5.770641e-01,(REAL) 5.798135e-01,

107 (
REAL
)5.825531e-01,(REAL) 5.852828e-01,(REAL) 5.880026e-01,(REAL) 5.907126e-01,

108 (
REAL
)5.934128e-01,(REAL) 5.961032e-01,(REAL) 5.987839e-01,(REAL) 6.014547e-01,

109 (
REAL
)6.041158e-01,(REAL) 6.067672e-01,(REAL) 6.094088e-01,(REAL) 6.120407e-01,

110 (
REAL
)6.146630e-01,(REAL) 6.172755e-01,(REAL) 6.198784e-01,(REAL) 6.224717e-01,

111 (
REAL
)6.250554e-01,(REAL) 6.276294e-01,(REAL) 6.301939e-01,(REAL) 6.327488e-01,

112 (
REAL
)6.352942e-01,(REAL) 6.378301e-01,(REAL) 6.403565e-01,(REAL) 6.428734e-01,

113 (
REAL
)6.453808e-01,(REAL) 6.478788e-01,(REAL) 6.503674e-01,(REAL) 6.528466e-01,

114 (
REAL
)6.553165e-01,(REAL) 6.577770e-01,(REAL) 6.602282e-01,(REAL) 6.626701e-01,

115 (
REAL
)6.651027e-01,(REAL) 6.675261e-01,(REAL) 6.699402e-01,(REAL) 6.723452e-01,

116 (
REAL
)6.747409e-01,(REAL) 6.771276e-01,(REAL) 6.795051e-01,(REAL) 6.818735e-01,

117 (
REAL
)6.842328e-01,(REAL) 6.865831e-01,(REAL) 6.889244e-01,(REAL) 6.912567e-01,

118 (
REAL
)6.935800e-01,(REAL) 6.958943e-01,(REAL) 6.981998e-01,(REAL) 7.004964e-01,

119 (
REAL
)7.027841e-01,(REAL) 7.050630e-01,(REAL) 7.073330e-01,(REAL) 7.095943e-01,

120 (
REAL
)7.118469e-01,(REAL) 7.140907e-01,(REAL) 7.163258e-01,(REAL) 7.185523e-01,

121 (
REAL
)7.207701e-01,(REAL) 7.229794e-01,(REAL) 7.251800e-01,(REAL) 7.273721e-01,

122 (
REAL
)7.295557e-01,(REAL) 7.317307e-01,(REAL) 7.338974e-01,(REAL) 7.360555e-01,

123 (
REAL
)7.382053e-01,(REAL) 7.403467e-01,(REAL) 7.424797e-01,(REAL) 7.446045e-01,

124 (
REAL
)7.467209e-01,(REAL) 7.488291e-01,(REAL) 7.509291e-01,(REAL) 7.530208e-01,

125 (
REAL
)7.551044e-01,(REAL) 7.571798e-01,(REAL) 7.592472e-01,(REAL) 7.613064e-01,

126 (
REAL
)7.633576e-01,(REAL) 7.654008e-01,(REAL) 7.674360e-01,(REAL) 7.694633e-01,

127 (
REAL
)7.714826e-01,(REAL) 7.734940e-01,(REAL) 7.754975e-01,(REAL) 7.774932e-01,

128 (
REAL
)7.794811e-01,(REAL) 7.814612e-01,(REAL) 7.834335e-01,(REAL) 7.853983e-01,

129 (
REAL
) 7.853983e-01

133 
	$InôSPEEDTRIG
 ()

135 
i
, 
SIZE
;

136 
TABLE_FACTOR
 = (
REAL
)(
ONE_OVER_TWOPI
 * 
SIN_TABLE_SIZE
);

137 
SIZE
 =  (
REAL
Ë* (
SIN_TABLE_SIZE
 + 1);

138 
söT
 = (
REAL
 *Ë
	`ß„Æloc
 (
SIZE
 + (SIZE >> 2) + 1,1,"InitSpeedTrig");

140 
i
 = 0; i < 
SIN_TABLE_SIZE
 + (SIN_TABLE_SIZE >> 2) + 1; i++)

142 
söT
[
i
] = (
REAL
Ë
	`sö
 ((REALËò* 
TWOPI
 / (REALË
SIN_TABLE_SIZE
);

145 
cosT
 = 
söT
 + (
SIN_TABLE_SIZE
 >> 2);

146 
	}
}

148 
REAL


149 
	$Á°_sö
 (
REAL
 
x
)

151 #i‡(
TRIG_SPEED
==2)

152 
x
 = (x * 
TABLE_FACTOR
) + 0.5;

153  
söT
[((Ë
x
Ë& (
SIN_TABLE_SIZE_M1
)];

155 
i
, 
ù1
;

156 
REAL
 
‰ac
;

157 
x
 = (x * 
TABLE_FACTOR
);

158 
i
 = (Ë(
‰ac
 = (
REAL
)
	`Êo‹
 (
x
));

159 
ù1
 = 
i
 + 1;

160 
‰ac
 = 
x
 - frac;

161  (
REAL
)((1.0 - 
‰ac
Ë* 
söT
[
i
] + fø¯* söT[
ù1
]);

163 
	}
}

165 
REAL


166 
	$Á°_cos
 (
REAL
 
x
)

168 #i‡(
TRIG_SPEED
==2)

169 
x
 = (x * 
TABLE_FACTOR
) + 0.5;

170  
cosT
[((Ë
x
Ë& (
SIN_TABLE_SIZE
 - 1)];

172 
i
, 
ù1
;

173 
REAL
 
‰ac
;

174 
x
 = (x * 
TABLE_FACTOR
);

175 
i
 = (Ë(
‰ac
 = (
REAL
)
	`Êo‹
 (
x
));

176 
ù1
 = 
i
 + 1;

177 
‰ac
 = 
x
 - frac;

178  (
REAL
)((1.0 - 
‰ac
Ë* 
cosT
[
i
] + fø¯* cosT[
ù1
]);

180 
	}
}

200 
REAL


201 
	$Á°_©™2
 (
REAL
 
y
, REAL 
x
)

203 
REAL
 
x_abs
, 
y_abs
, 
z
;

204 
REAL
 
Æpha
, 
™gÀ
, 
ba£_™gÀ
;

205 
ödex
;

208 i‡((
y
 =0.0Ë&& (
x
 == 0.0))

209 
™gÀ
 = 0.0;

213 
y_abs
 = (
REAL
)
	`Ábs
 (
y
);

214 
x_abs
 = (
REAL
)
	`Ábs
 (
x
);

216 i‡(
y_abs
 < 
x_abs
)

217 
z
 = 
y_abs
 / 
x_abs
;

219 
z
 = 
x_abs
 / 
y_abs
;

222 i‡(
z
 < 
TAN_MAP_RES
)

223 
ba£_™gÀ
 = 
z
;

227 
Æpha
 = 
z
 * (
REAL
Ë(
TAN_MAP_SIZE
 - .5);

228 
ödex
 = (Ë
Æpha
;

229 
Æpha
 -(
REAL
Ë
ödex
;

232 
ba£_™gÀ
 = 
Á°_©™_èbÀ
[
ödex
];

233 
ba£_™gÀ
 +=

234 (
Á°_©™_èbÀ
[
ödex
 + 1] - fa°_©™_èbÀ[ödex]Ë* 
Æpha
;

237 i‡(
x_abs
 > 
y_abs
)

239 i‡(
x
 >= 0.0)

241 i‡(
y
 >= 0.0)

242 
™gÀ
 = 
ba£_™gÀ
;

244 
™gÀ
 = -
ba£_™gÀ
;

248 
™gÀ
 = (
REAL
)3.14159265358979323846;

249 i‡(
y
 >= 0.0)

250 
™gÀ
 -
ba£_™gÀ
;

252 
™gÀ
 = 
ba£_™gÀ
 -ángle;

257 i‡(
y
 >= 0.0)

259 
™gÀ
 = (
REAL
)1.57079632679489661923;

260 i‡(
x
 >= 0.0)

261 
™gÀ
 -
ba£_™gÀ
;

263 
™gÀ
 +
ba£_™gÀ
;

267 
™gÀ
 = (
REAL
)-1.57079632679489661923;

268 i‡(
x
 >= 0.0)

269 
™gÀ
 +
ba£_™gÀ
;

271 
™gÀ
 -
ba£_™gÀ
;

275 #ifde‡
ZERO_TO_TWOPI


276 i‡(
™gÀ
 < 0)

277  (
™gÀ
 + 
TWOPI
);

279  (
™gÀ
);

281  (
™gÀ
);

283 
	}
}

	@fastrig.h

33 #i‚de‡
_Á°rig_h


34 
	#_Á°rig_h


	)

36 
	~<‰omsys.h
>

37 
	~<b™Æ.h
>

38 
	~<•lôfõlds.h
>

39 
	~<d©©y≥s.h
>

40 
	~<bufvec.h
>

41 
	~<m©h.h
>

43 #ifde‡
nŸdef


44 
	~<cx›s.h
>

47 
	#SIN_TABLE_SIZE
 4096

	)

48 
	#SIN_TABLE_SIZE_M1
 4095

	)

60 #i‚de‡
TRIG_SPEED


61 
	#TRIG_SPEED
 0

	)

64 #i‡(
TRIG_SPEED
 == 2)

65 
	#SIN
(
x
Ë
	`Á°_sö
(x)

	)

66 
	#COS
(
x
Ë
	`Á°_cos
(x)

	)

67 
	#ATAN2
(
x
,
y
Ë
	`Á°_©™2
((x),(y))

	)

69 #ñi‡(
TRIG_SPEED
 == 1)

71 
	#SIN
(
x
Ë
	`Á°_sö
(x)

	)

72 
	#COS
(
x
Ë
	`Á°_cos
(x)

	)

73 
	#ATAN2
(
x
,
y
Ë
	`Á°_©™2
((x),(y))

	)

75 #ñi‡(
TRIG_SPEED
 == 0)

77 
	#SIN
(
x
Ë(
REAL
)
	`sö
((REAL)x)

	)

78 
	#COS
(
x
Ë(
REAL
)
	`cos
((REAL)x)

	)

79 
	#ATAN2
(
x
,
y
Ë(
REAL
)
	`©™2
((REAL)(x),(REAL)(y))

	)

83 #i‚de‡
PI


84 
	#PI
 
M_PI


	)

87 #i‚de‡
TWOPI


88 
	#TWOPI
 (2.0 * 
PI
)

	)

91 #i‚de‡
ONE_OVER_TWOPI


92 
	#ONE_OVER_TWOPI
 (0.159154943091895)

	)

96 
InôSPEEDTRIG
 ();

97 
REAL
 
Á°_sö
 (REAL);

98 
REAL
 
Á°_cos
 (REAL);

99 
REAL
 
Á°_©™2
 (REAL, REAL);

	@fftw.h

24 #i‚de‡
FFTW_H


25 
	#FFTW_H


	)

27 
	~<°dlib.h
>

28 
	~<°dio.h
>

30 #ifde‡
__˝lu•lus


43 #ifde‡
FFTW_ENABLE_FLOAT


44 
	tf·w_ªÆ
;

46 
	tf·w_ªÆ
;

54 
f·w_ªÆ
 
	gª
, 
	gim
;

55 } 
	tf·w_com∂ex
;

57 #i‚de‡
c_ª


58 
	#c_ª
(
c
Ë((c).
ª
)

	)

60 #i‚de‡
c_im


61 
	#c_im
(
c
Ë((c).
im
)

	)

66 
	gFFTW_FORWARD
 = -1, 
	gFFTW_BACKWARD
 = 1

67 } 
	tf·w_dúe˘i⁄
;

70 
f·w_com∂ex
 
	tFFTW_COMPLEX
;

71 
f·w_ªÆ
 
	tFFTW_REAL
;

73 #i‚de‡
FFTW_1_0_COMPATIBILITY


74 
	#FFTW_1_0_COMPATIBILITY
 0

	)

77 #i‡
FFTW_1_0_COMPATIBILITY


79 
	#REAL
 
f·w_ªÆ


	)

80 
	#COMPLEX
 
f·w_com∂ex


	)

89 
	gFFTW_SUCCESS
 = 0, 
	gFFTW_FAILURE
 = -1

90 } 
	tf·w_°©us
;

95 (
	gf·w_nŸw_codñë
)

96 (c⁄° 
	tf·w_com∂ex
 *, fftw_complex *, , );

97 (
	gf·w_twiddÀ_codñë
)

98 (
	tf·w_com∂ex
 *, const fftw_complex *, , , );

99 (
	gf·w_gíîic_codñë
)

100 (
	tf·w_com∂ex
 *, const fftw_complex *, , , , );

101 (
	gf·w_ªÆ2hc_codñë
)

102 (c⁄° 
	tf·w_ªÆ
 *, fftw_real *, fftw_real *, , , );

103 (
	gf·w_hc2ªÆ_codñë
)

104 (c⁄° 
	tf·w_ªÆ
 *, const fftw_real *, fftw_real *, , , );

105 (
	gf·w_hc2hc_codñë
)

106 (
	tf·w_ªÆ
 *, c⁄° 
	tf·w_com∂ex
 *, , , );

107 (
	gf·w_rgíîic_codñë
)

108 (
	tf·w_ªÆ
 *, c⁄° 
	tf·w_com∂ex
 *, , , , );

117 
	ef·w_node_ty≥


119 
	gFFTW_NOTW
, 
	gFFTW_TWIDDLE
, 
	gFFTW_GENERIC
, 
	gFFTW_RADER
,

120 
	gFFTW_REAL2HC
, 
	gFFTW_HC2REAL
, 
	gFFTW_HC2HC
, 
	gFFTW_RGENERIC


126 c⁄° *
	g«me
;

127 (*
	gcodñë
) ();

128 
	gsize
;

129 
f·w_dúe˘i⁄
 
	gdú
;

130 
f·w_node_ty≥
 
	gty≥
;

131 
	gsig«tuª
;

132 
	g¡widdÀ
;

133 c⁄° *
	gtwiddÀ_‹dî
;

138 } 
	tf·w_codñë_desc
;

142 #ifde‡
HAVE_WIN32


143 #i‡
deföed
(
BUILD_FFTW_DLL
)

144 
	#DL_IMPORT
(
ty≥
Ë
	`__de˛•ec
(
dŒexp‹t
Ë
	)
type

145 #ñi‡
deföed
(
USE_FFTW_DLL
)

146 
	#DL_IMPORT
(
ty≥
Ë
	`__de˛•ec
(
dŒimp‹t
Ë
	)
type

148 
	#DL_IMPORT
(
ty≥
Ë
	)
type

151 
	#DL_IMPORT
(
ty≥
Ë
	)
type

154 
DL_IMPORT
 (c⁄° *Ë
f·w_vîsi⁄
;

169 
	sf·w_twiddÀ_°ru˘


171 
	gn
;

172 c⁄° 
f·w_codñë_desc
 *
	gcdesc
;

173 
f·w_com∂ex
 *
	gtw¨øy
;

174 
f·w_twiddÀ_°ru˘
 *
	g√xt
;

175 
	gªf˙t
;

176 } 
	tf·w_twiddÀ
;

178 
	sf·w_ødî_d©a_°ru˘


180 
f·w_∂™_°ru˘
 *
	g∂™
;

181 
f·w_com∂ex
 *
	gomega
;

182 
	gg
, 
	ggöv
;

183 
	gp
, 
	gÊags
, 
	gªfcou¡
;

184 
f·w_ødî_d©a_°ru˘
 *
	g√xt
;

185 
f·w_codñë_desc
 *
	gcdesc
;

186 } 
	tf·w_ødî_d©a
;

188 (
	gf·w_ødî_codñë
)

189 (
	tf·w_com∂ex
 *, c⁄° f·w_com∂ex *, , , , 
	tf·w_ødî_d©a
 *);

192 
	sf·w_∂™_node_°ru˘


194 
f·w_node_ty≥
 
	gty≥
;

201 
	gsize
;

202 
f·w_nŸw_codñë
 *
	gcodñë
;

203 c⁄° 
f·w_codñë_desc
 *
	gcodñë_desc
;

204 } 
	gnŸw
;

209 
	gsize
;

210 
f·w_twiddÀ_codñë
 *
	gcodñë
;

211 
f·w_twiddÀ
 *
	gtw
;

212 
f·w_∂™_node_°ru˘
 *
	gªcur£
;

213 c⁄° 
f·w_codñë_desc
 *
	gcodñë_desc
;

214 } 
	gtwiddÀ
;

219 
	gsize
;

220 
f·w_gíîic_codñë
 *
	gcodñë
;

221 
f·w_twiddÀ
 *
	gtw
;

222 
f·w_∂™_node_°ru˘
 *
	gªcur£
;

223 } 
	ggíîic
;

228 
	gsize
;

229 
f·w_ødî_codñë
 *
	gcodñë
;

230 
f·w_ødî_d©a
 *
	gødî_d©a
;

231 
f·w_twiddÀ
 *
	gtw
;

232 
f·w_∂™_node_°ru˘
 *
	gªcur£
;

233 } 
	gødî
;

238 
	gsize
;

239 
f·w_ªÆ2hc_codñë
 *
	gcodñë
;

240 c⁄° 
f·w_codñë_desc
 *
	gcodñë_desc
;

241 } 
	gªÆ2hc
;

246 
	gsize
;

247 
f·w_hc2ªÆ_codñë
 *
	gcodñë
;

248 c⁄° 
f·w_codñë_desc
 *
	gcodñë_desc
;

249 } 
	ghc2ªÆ
;

254 
	gsize
;

255 
f·w_dúe˘i⁄
 
	gdú
;

256 
f·w_hc2hc_codñë
 *
	gcodñë
;

257 
f·w_twiddÀ
 *
	gtw
;

258 
f·w_∂™_node_°ru˘
 *
	gªcur£
;

259 c⁄° 
f·w_codñë_desc
 *
	gcodñë_desc
;

260 } 
	ghc2hc
;

265 
	gsize
;

266 
f·w_dúe˘i⁄
 
	gdú
;

267 
f·w_rgíîic_codñë
 *
	gcodñë
;

268 
f·w_twiddÀ
 *
	gtw
;

269 
f·w_∂™_node_°ru˘
 *
	gªcur£
;

270 } 
	grgíîic
;

271 } 
	gnodeu
;

273 
	gªf˙t
;

274 } 
	tf·w_∂™_node
;

278 
	gFFTW_NORMAL_RECURSE
 = 0,

279 
	gFFTW_VECTOR_RECURSE
 = 1

280 } 
	tf·w_ªcur£_köd
;

282 
	sf·w_∂™_°ru˘


284 
	gn
;

285 
	gªf˙t
;

286 
f·w_dúe˘i⁄
 
	gdú
;

287 
	gÊags
;

288 
	gwisdom_sig«tuª
;

289 
f·w_node_ty≥
 
	gwisdom_ty≥
;

290 
f·w_∂™_°ru˘
 *
	g√xt
;

291 
f·w_∂™_node
 *
	groŸ
;

292 
	gco°
;

293 
f·w_ªcur£_köd
 
	gªcur£_köd
;

294 
	gve˘‹_size
;

297 
f·w_∂™_°ru˘
 *
	tf·w_∂™
;

300 
	#FFTW_ESTIMATE
 (0)

	)

301 
	#FFTW_MEASURE
 (1)

	)

303 
	#FFTW_OUT_OF_PLACE
 (0)

	)

304 
	#FFTW_IN_PLACE
 (8)

	)

305 
	#FFTW_USE_WISDOM
 (16)

	)

307 
	#FFTW_THREADSAFE
 (128Ë

	)

311 
	#FFTWND_FORCE_BUFFERED
 (256Ë

	)

314 
	#FFTW_NO_VECTOR_RECURSE
 (512Ë

	)

317 
f·w_∂™
 
f·w_¸óã_∂™_•ecific
 (
n
, 
f·w_dúe˘i⁄
 
dú
,

318 
Êags
,

319 
f·w_com∂ex
 * 
ö
,

320 
i°ride
,

321 
f·w_com∂ex
 * 
out
,

322 
o°ride
);

323 
	#FFTW_HAS_PLAN_SPECIFIC


	)

324 
f·w_∂™
 
f·w_¸óã_∂™
 (
n
, 
f·w_dúe˘i⁄
 
dú
, 
Êags
);

325 
f·w_¥öt_∂™
 (
f·w_∂™
 
∂™
);

326 
f·w_de°roy_∂™
 (
f·w_∂™
 
∂™
);

327 
f·w
 (
f·w_∂™
 
∂™
, 
howm™y
, 
f·w_com∂ex
 * 
ö
,

328 
i°ride
, 
idi°
, 
f·w_com∂ex
 * 
out
,

329 
o°ride
, 
odi°
);

330 
f·w_⁄e
 (
f·w_∂™
 
∂™
, 
f·w_com∂ex
 * 
ö
,

331 
f·w_com∂ex
 * 
out
);

332 
f·w_dõ
 (c⁄° *
s
);

333 *
f·w_mÆloc
 (
size_t
 
n
);

334 
f·w_‰ì
 (*
p
);

335 
f·w_check_mem‹y_Àaks
 ();

336 
f·w_¥öt_max_mem‹y_ußge
 ();

338 *(*
	tf·w_mÆloc_ty≥_fun˘i⁄
Ë(
	tsize_t
 
	tn
);

339 (*
	gf·w_‰ì_ty≥_fun˘i⁄
Ë(*
	tp
);

340 (*
	gf·w_dõ_ty≥_fun˘i⁄
Ë(c⁄° *
	tîrSåög
);

341 
DL_IMPORT
 (
f·w_mÆloc_ty≥_fun˘i⁄
Ë
f·w_mÆloc_hook
;

342 
DL_IMPORT
 (
f·w_‰ì_ty≥_fun˘i⁄
Ë
f·w_‰ì_hook
;

343 
DL_IMPORT
 (
f·w_dõ_ty≥_fun˘i⁄
Ë
f·w_dõ_hook
;

345 
size_t
 
f·w_sizeof_f·w_ªÆ
 ();

352 
	#FFTW_HAS_WISDOM


	)

353 
f·w_f‹gë_wisdom
 ();

354 
f·w_exp‹t_wisdom
 ((*
emôãr
Ë(
c
, *),

355 *
d©a
);

356 
f·w_°©us
 
f·w_imp‹t_wisdom
 ((*
g
Ë(*), *
d©a
);

357 
f·w_exp‹t_wisdom_to_fûe
 (
FILE
 * 
ouçut_fûe
);

358 
f·w_°©us
 
f·w_imp‹t_wisdom_‰om_fûe
 (
FILE
 * 
öput_fûe
);

359 *
f·w_exp‹t_wisdom_to_°rög
 ();

360 
f·w_°©us
 
f·w_imp‹t_wisdom_‰om_°rög
 (const 

361 *
öput_°rög
);

367 
	#FFTW_HAS_FPRINT_PLAN


	)

368 
f·w_Âröt_∂™
 (
FILE
 * 
f
, 
f·w_∂™
 
∂™
);

375 
	gis_ö_∂a˚
;

377 
	gønk
;

381 *
	gn
;

385 
f·w_dúe˘i⁄
 
	gdú
;

387 *
	gn_bef‹e
;

390 *
	gn_a·î
;

392 
f·w_∂™
 *
	g∂™s
;

394 
	gnbuf„rs
, 
	gnw‹k
;

395 
f·w_com∂ex
 *
	gw‹k
;

400 } 
	tf·wnd_d©a
;

402 
f·wnd_d©a
 *
	tf·wnd_∂™
;

405 
f·wnd_∂™
 
f·w2d_¸óã_∂™
 (
nx
, 
ny
,

406 
f·w_dúe˘i⁄
 
dú
, 
Êags
);

407 
f·wnd_∂™
 
f·w3d_¸óã_∂™
 (
nx
, 
ny
, 
nz
,

408 
f·w_dúe˘i⁄
 
dú
, 
Êags
);

409 
f·wnd_∂™
 
f·wnd_¸óã_∂™
 (
ønk
, c⁄° *
n
,

410 
f·w_dúe˘i⁄
 
dú
, 
Êags
);

412 
f·wnd_∂™
 
f·w2d_¸óã_∂™_•ecific
 (
nx
, 
ny
,

413 
f·w_dúe˘i⁄
 
dú
,

414 
Êags
,

415 
f·w_com∂ex
 * 
ö
,

416 
i°ride
,

417 
f·w_com∂ex
 * 
out
,

418 
o°ride
);

419 
f·wnd_∂™
 
f·w3d_¸óã_∂™_•ecific
 (
nx
, 
ny
, 
nz
,

420 
f·w_dúe˘i⁄
 
dú
,

421 
Êags
,

422 
f·w_com∂ex
 * 
ö
,

423 
i°ride
,

424 
f·w_com∂ex
 * 
out
,

425 
o°ride
);

426 
f·wnd_∂™
 
f·wnd_¸óã_∂™_•ecific
 (
ønk
, c⁄° *
n
,

427 
f·w_dúe˘i⁄
 
dú
,

428 
Êags
,

429 
f·w_com∂ex
 * 
ö
,

430 
i°ride
,

431 
f·w_com∂ex
 * 
out
,

432 
o°ride
);

435 
f·wnd_de°roy_∂™
 (
f·wnd_∂™
 
∂™
);

438 
f·wnd_Âröt_∂™
 (
FILE
 * 
f
, 
f·wnd_∂™
 
p
);

439 
f·wnd_¥öt_∂™
 (
f·wnd_∂™
 
p
);

440 
	#FFTWND_HAS_PRINT_PLAN


	)

443 
f·wnd
 (
f·wnd_∂™
 
∂™
, 
howm™y
,

444 
f·w_com∂ex
 * 
ö
, 
i°ride
, 
idi°
,

445 
f·w_com∂ex
 * 
out
, 
o°ride
, 
odi°
);

446 
f·wnd_⁄e
 (
f·wnd_∂™
 
p
, 
f·w_com∂ex
 * 
ö
,

447 
f·w_com∂ex
 * 
out
);

449 #ifde‡
__˝lu•lus


	@fftw3.h

47 #i‚de‡
FFTW3_H


48 
	#FFTW3_H


	)

50 
	~<°dio.h
>

52 #ifde‡
__˝lu•lus


59 #i‡!
deföed
(
FFTW_NO_Com∂ex
Ë&& deföed(
_Com∂ex_I
Ë&& deföed(
com∂ex
Ë&& deföed(
I
)

60 
	#FFTW_DEFINE_COMPLEX
(
R
, 
C
ËR 
	t_Com∂ex
 
	tC


	)

62 
	tFFTW_DEFINE_COMPLEX
(
	tR
, 
	tC
Ë
R
 C[2]

	)

65 
	#FFTW_CONCAT
(
¥efix
, 
«me
Ë¥efix ## 
	)
name

66 
	#FFTW_MANGLE_DOUBLE
(
«me
Ë
	`FFTW_CONCAT
(
f·w_
,Çame)

	)

67 
	#FFTW_MANGLE_FLOAT
(
«me
Ë
	`FFTW_CONCAT
(
f·wf_
,Çame)

	)

68 
	#FFTW_MANGLE_LONG_DOUBLE
(
«me
Ë
	`FFTW_CONCAT
(
f·wl_
,Çame)

	)

69 
	#FFTW_DLL


	)

77 #i‡
deföed
(
FFTW_DLL
Ë&& (deföed(
_WIN32
Ë|| deföed(
__WIN32__
))

79 #i‡
deföed
(
COMPILING_FFTW
)

80 
	#FFTW_EXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

82 
	#FFTW_EXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

85 
	#FFTW_EXTERN
 

	)

88 
	ef·w_r2r_köd_do_nŸ_u£_me
 {

89 
FFTW_R2HC
=0, 
FFTW_HC2R
=1, 
FFTW_DHT
=2,

90 
FFTW_REDFT00
=3, 
FFTW_REDFT01
=4, 
FFTW_REDFT10
=5, 
FFTW_REDFT11
=6,

91 
FFTW_RODFT00
=7, 
FFTW_RODFT01
=8, 
FFTW_RODFT10
=9, 
FFTW_RODFT11
=10

94 
	sf·w_iodim_do_nŸ_u£_me
 {

95 
	gn
;

96 
	gis
;

97 
	gos
;

100 
	~<°ddef.h
>

101 
	sf·w_iodim64_do_nŸ_u£_me
 {

102 
±rdiff_t
 
	gn
;

103 
±rdiff_t
 
	gis
;

104 
±rdiff_t
 
	gos
;

116 
	#FFTW_DEFINE_API
(
X
, 
R
, 
C
) \

118 
	`FFTW_DEFINE_COMPLEX
(
R
, 
C
); \

120 
	`X
(
	t∂™_s
Ë*
	tX
(
	t∂™
); \

122 
f·w_iodim_do_nŸ_u£_me
 
	tX
(
	tiodim
); \

123 
f·w_iodim64_do_nŸ_u£_me
 
	tX
(
	tiodim64
); \

125 
f·w_r2r_köd_do_nŸ_u£_me
 
	tX
(
	tr2r_köd
); \

127 
FFTW_EXTERN
 
	`X
(
execuã
)(c⁄° X(
∂™
Ë
p
); \

129 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·
)(
ønk
, c⁄° *
n
, \

130 
C
 *
ö
, C *
out
, 
sign
, 
Êags
); \

132 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_1d
)(
n
, 
C
 *
ö
, C *
out
, 
sign
, \

133 
Êags
); \

134 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_2d
)(
n0
, 
n1
, \

135 
C
 *
ö
, C *
out
, 
sign
, 
Êags
); \

136 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_3d
)(
n0
, 
n1
, 
n2
, \

137 
C
 *
ö
, C *
out
, 
sign
, 
Êags
); \

139 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_m™y_d·
)(
ønk
, c⁄° *
n
, \

140 
howm™y
, \

141 
C
 *
ö
, c⁄° *
öembed
, \

142 
i°ride
, 
idi°
, \

143 
C
 *
out
, c⁄° *
⁄embed
, \

144 
o°ride
, 
odi°
, \

145 
sign
, 
Êags
); \

147 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_d·
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

148 
howm™y_ønk
, \

149 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

150 
C
 *
ö
, C *
out
, \

151 
sign
, 
Êags
); \

152 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_•lô_d·
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

153 
howm™y_ønk
, \

154 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

155 
R
 *
ri
, R *
ii
, R *
ro
, R *
io
, \

156 
Êags
); \

158 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_d·
)(
ønk
, \

159 c⁄° 
	`X
(
iodim64
Ë*
dims
, \

160 
howm™y_ønk
, \

161 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

162 
C
 *
ö
, C *
out
, \

163 
sign
, 
Êags
); \

164 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_•lô_d·
)(
ønk
, \

165 c⁄° 
	`X
(
iodim64
Ë*
dims
, \

166 
howm™y_ønk
, \

167 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

168 
R
 *
ri
, R *
ii
, R *
ro
, R *
io
, \

169 
Êags
); \

171 
FFTW_EXTERN
 
	`X
(
execuã_d·
)(c⁄° X(
∂™
Ë
p
, 
C
 *
ö
, C *
out
); \

172 
FFTW_EXTERN
 
	`X
(
execuã_•lô_d·
)(c⁄° X(
∂™
Ë
p
, 
R
 *
ri
, R *
ii
, \

173 
R
 *
ro
, R *
io
); \

175 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_m™y_d·_r2c
)(
ønk
, c⁄° *
n
, \

176 
howm™y
, \

177 
R
 *
ö
, c⁄° *
öembed
, \

178 
i°ride
, 
idi°
, \

179 
C
 *
out
, c⁄° *
⁄embed
, \

180 
o°ride
, 
odi°
, \

181 
Êags
); \

183 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_r2c
)(
ønk
, c⁄° *
n
, \

184 
R
 *
ö
, 
C
 *
out
, 
Êags
); \

186 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_r2c_1d
)(
n
,
R
 *
ö
,
C
 *
out
,
Êags
); \

187 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_r2c_2d
)(
n0
, 
n1
, \

188 
R
 *
ö
, 
C
 *
out
, 
Êags
); \

189 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_r2c_3d
)(
n0
, 
n1
, \

190 
n2
, \

191 
R
 *
ö
, 
C
 *
out
, 
Êags
); \

194 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_m™y_d·_c2r
)(
ønk
, c⁄° *
n
, \

195 
howm™y
, \

196 
C
 *
ö
, c⁄° *
öembed
, \

197 
i°ride
, 
idi°
, \

198 
R
 *
out
, c⁄° *
⁄embed
, \

199 
o°ride
, 
odi°
, \

200 
Êags
); \

202 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_c2r
)(
ønk
, c⁄° *
n
, \

203 
C
 *
ö
, 
R
 *
out
, 
Êags
); \

205 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_c2r_1d
)(
n
,
C
 *
ö
,
R
 *
out
,
Êags
); \

206 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_c2r_2d
)(
n0
, 
n1
, \

207 
C
 *
ö
, 
R
 *
out
, 
Êags
); \

208 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_c2r_3d
)(
n0
, 
n1
, \

209 
n2
, \

210 
C
 *
ö
, 
R
 *
out
, 
Êags
); \

212 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_d·_r2c
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

213 
howm™y_ønk
, \

214 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

215 
R
 *
ö
, 
C
 *
out
, \

216 
Êags
); \

217 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_d·_c2r
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

218 
howm™y_ønk
, \

219 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

220 
C
 *
ö
, 
R
 *
out
, \

221 
Êags
); \

223 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_•lô_d·_r2c
)( \

224 
ønk
, c⁄° 
	`X
(
iodim
Ë*
dims
, \

225 
howm™y_ønk
, \

226 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

227 
R
 *
ö
, R *
ro
, R *
io
, \

228 
Êags
); \

229 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_•lô_d·_c2r
)( \

230 
ønk
, c⁄° 
	`X
(
iodim
Ë*
dims
, \

231 
howm™y_ønk
, \

232 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

233 
R
 *
ri
, R *
ii
, R *
out
, \

234 
Êags
); \

236 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_d·_r2c
)(
ønk
, \

237 c⁄° 
	`X
(
iodim64
Ë*
dims
, \

238 
howm™y_ønk
, \

239 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

240 
R
 *
ö
, 
C
 *
out
, \

241 
Êags
); \

242 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_d·_c2r
)(
ønk
, \

243 c⁄° 
	`X
(
iodim64
Ë*
dims
, \

244 
howm™y_ønk
, \

245 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

246 
C
 *
ö
, 
R
 *
out
, \

247 
Êags
); \

249 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_•lô_d·_r2c
)( \

250 
ønk
, c⁄° 
	`X
(
iodim64
Ë*
dims
, \

251 
howm™y_ønk
, \

252 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

253 
R
 *
ö
, R *
ro
, R *
io
, \

254 
Êags
); \

255 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_•lô_d·_c2r
)( \

256 
ønk
, c⁄° 
	`X
(
iodim64
Ë*
dims
, \

257 
howm™y_ønk
, \

258 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

259 
R
 *
ri
, R *
ii
, R *
out
, \

260 
Êags
); \

262 
FFTW_EXTERN
 
	`X
(
execuã_d·_r2c
)(c⁄° X(
∂™
Ë
p
, 
R
 *
ö
, 
C
 *
out
); \

263 
FFTW_EXTERN
 
	`X
(
execuã_d·_c2r
)(c⁄° X(
∂™
Ë
p
, 
C
 *
ö
, 
R
 *
out
); \

265 
FFTW_EXTERN
 
	`X
(
execuã_•lô_d·_r2c
)(c⁄° X(
∂™
Ë
p
, \

266 
R
 *
ö
, R *
ro
, R *
io
); \

267 
FFTW_EXTERN
 
	`X
(
execuã_•lô_d·_c2r
)(c⁄° X(
∂™
Ë
p
, \

268 
R
 *
ri
, R *
ii
, R *
out
); \

270 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_m™y_r2r
)(
ønk
, c⁄° *
n
, \

271 
howm™y
, \

272 
R
 *
ö
, c⁄° *
öembed
, \

273 
i°ride
, 
idi°
, \

274 
R
 *
out
, c⁄° *
⁄embed
, \

275 
o°ride
, 
odi°
, \

276 c⁄° 
	`X
(
r2r_köd
Ë*
köd
, 
Êags
); \

278 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_r2r
)(
ønk
, c⁄° *
n
, 
R
 *
ö
, R *
out
, \

279 c⁄° 
	`X
(
r2r_köd
Ë*
köd
, 
Êags
); \

281 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_r2r_1d
)(
n
, 
R
 *
ö
, R *
out
, \

282 
	`X
(
r2r_köd
Ë
köd
, 
Êags
); \

283 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_r2r_2d
)(
n0
, 
n1
, 
R
 *
ö
, R *
out
, \

284 
	`X
(
r2r_köd
Ë
köd0
, X‘2r_ködË
köd1
, \

285 
Êags
); \

286 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_r2r_3d
)(
n0
, 
n1
, 
n2
, \

287 
R
 *
ö
, R *
out
, 
	`X
(
r2r_köd
Ë
köd0
, \

288 
	`X
(
r2r_köd
Ë
köd1
, X‘2r_ködË
köd2
, \

289 
Êags
); \

291 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_r2r
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

292 
howm™y_ønk
, \

293 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

294 
R
 *
ö
, R *
out
, \

295 c⁄° 
	`X
(
r2r_köd
Ë*
köd
, 
Êags
); \

297 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_r2r
)(
ønk
, c⁄° X(
iodim64
Ë*
dims
, \

298 
howm™y_ønk
, \

299 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

300 
R
 *
ö
, R *
out
, \

301 c⁄° 
	`X
(
r2r_köd
Ë*
köd
, 
Êags
); \

303 
FFTW_EXTERN
 
	`X
(
execuã_r2r
)(c⁄° X(
∂™
Ë
p
, 
R
 *
ö
, R *
out
); \

305 
FFTW_EXTERN
 
	`X
(
de°roy_∂™
)(X(
∂™
Ë
p
); \

306 
FFTW_EXTERN
 
	`X
(
f‹gë_wisdom
)(); \

307 
FFTW_EXTERN
 
	`X
(
˛ónup
)(); \

309 
FFTW_EXTERN
 
	`X
(
£t_timñimô
)(); \

311 
FFTW_EXTERN
 
	`X
(
∂™_wôh_¡hªads
)(
¡hªads
); \

312 
FFTW_EXTERN
 
	`X
(
öô_thªads
)(); \

313 
FFTW_EXTERN
 
	`X
(
˛ónup_thªads
)(); \

315 
FFTW_EXTERN
 
	`X
(
exp‹t_wisdom_to_fûe
)(
FILE
 *
ouçut_fûe
); \

316 
FFTW_EXTERN
 *
	`X
(
exp‹t_wisdom_to_°rög
)(); \

317 
FFTW_EXTERN
 
	`X
(
exp‹t_wisdom
)((*
wrôe_ch¨
)(
c
, *), \

318 *
d©a
); \

319 
FFTW_EXTERN
 
	`X
(
imp‹t_sy°em_wisdom
)(); \

320 
FFTW_EXTERN
 
	`X
(
imp‹t_wisdom_‰om_fûe
)(
FILE
 *
öput_fûe
); \

321 
FFTW_EXTERN
 
	`X
(
imp‹t_wisdom_‰om_°rög
)(c⁄° *
öput_°rög
); \

322 
FFTW_EXTERN
 
	`X
(
imp‹t_wisdom
)((*
ªad_ch¨
)(*), *
d©a
); \

324 
FFTW_EXTERN
 
	`X
(
Âröt_∂™
)(c⁄° X(
∂™
Ë
p
, 
FILE
 *
ouçut_fûe
); \

325 
FFTW_EXTERN
 
	`X
(
¥öt_∂™
)(c⁄° X(
∂™
Ë
p
); \

327 
FFTW_EXTERN
 *
	`X
(
mÆloc
)(
size_t
 
n
); \

328 
FFTW_EXTERN
 
	`X
(
‰ì
)(*
p
); \

330 
FFTW_EXTERN
 
	`X
(
Ê›s
)(c⁄° X(
∂™
Ë
p
, \

331 *
add
, *
mul
, *
fmas
); \

332 
FFTW_EXTERN
 
	`X
(
e°im©e_co°
)(c⁄° X(
∂™
Ë
p
); \

334 
FFTW_EXTERN
 c⁄° 
	`X
(
vîsi⁄
)[]; \

335 
FFTW_EXTERN
 c⁄° 
	`X
(
cc
)[]; \

336 
FFTW_EXTERN
 c⁄° 
	`X
(
codñë_›tim
)[];

	)

341 
FFTW_DEFINE_API
(
FFTW_MANGLE_DOUBLE
, , 
f·w_com∂ex
)

342 
FFTW_DEFINE_API
(
FFTW_MANGLE_FLOAT
, , 
f·wf_com∂ex
)

343 
FFTW_DEFINE_API
(
FFTW_MANGLE_LONG_DOUBLE
, , 
f·wl_com∂ex
)

345 
	#FFTW_FORWARD
 (-1)

	)

346 
	#FFTW_BACKWARD
 (+1)

	)

348 
	#FFTW_NO_TIMELIMIT
 (-1.0)

	)

351 
	#FFTW_MEASURE
 (0U)

	)

352 
	#FFTW_DESTROY_INPUT
 (1U << 0)

	)

353 
	#FFTW_UNALIGNED
 (1U << 1)

	)

354 
	#FFTW_CONSERVE_MEMORY
 (1U << 2)

	)

355 
	#FFTW_EXHAUSTIVE
 (1U << 3Ë

	)

356 
	#FFTW_PRESERVE_INPUT
 (1U << 4Ë

	)

357 
	#FFTW_PATIENT
 (1U << 5Ë

	)

358 
	#FFTW_ESTIMATE
 (1U << 6)

	)

361 
	#FFTW_ESTIMATE_PATIENT
 (1U << 7)

	)

362 
	#FFTW_BELIEVE_PCOST
 (1U << 8)

	)

363 
	#FFTW_NO_DFT_R2HC
 (1U << 9)

	)

364 
	#FFTW_NO_NONTHREADED
 (1U << 10)

	)

365 
	#FFTW_NO_BUFFERING
 (1U << 11)

	)

366 
	#FFTW_NO_INDIRECT_OP
 (1U << 12)

	)

367 
	#FFTW_ALLOW_LARGE_GENERIC
 (1U << 13Ë

	)

368 
	#FFTW_NO_RANK_SPLITS
 (1U << 14)

	)

369 
	#FFTW_NO_VRANK_SPLITS
 (1U << 15)

	)

370 
	#FFTW_NO_VRECURSE
 (1U << 16)

	)

371 
	#FFTW_NO_SIMD
 (1U << 17)

	)

372 
	#FFTW_NO_SLOW
 (1U << 18)

	)

373 
	#FFTW_NO_FIXED_RADIX_LARGE_N
 (1U << 19)

	)

374 
	#FFTW_ALLOW_PRUNING
 (1U << 20)

	)

375 
	#FFTW_WISDOM_ONLY
 (1U << 21)

	)

377 #ifde‡
__˝lu•lus


	@fftw3_fix.h

1 #i‚de‡
_FFTW3_FIX


2 
	#_FFTW3_FIX


	)

3 
	$my_f·w_wrôe_ch¨
(
c
, *
f
Ë{ 
	`Âutc
(c, (
FILE
 *Ëf); 
	}
}

4 
	#f·w_exp‹t_wisdom_to_fûe
(
f
Ë
	`f·w_exp‹t_wisdom
(
my_f·w_wrôe_ch¨
, (*Ë(f))

	)

5 
	#f·wf_exp‹t_wisdom_to_fûe
(
f
Ë
	`f·wf_exp‹t_wisdom
(
my_f·w_wrôe_ch¨
, (*Ë(f))

	)

6 
	#f·wl_exp‹t_wisdom_to_fûe
(
f
Ë
	`f·wl_exp‹t_wisdom
(
my_f·w_wrôe_ch¨
, (*Ë(f))

	)

8 
	$my_f·w_ªad_ch¨
(*
f
Ë{  
	`fgëc
((
FILE
 *Ëf); 
	}
}

9 
	#f·w_imp‹t_wisdom_‰om_fûe
(
f
Ë
	`f·w_imp‹t_wisdom
(
my_f·w_ªad_ch¨
, (*Ë(f))

	)

10 
	#f·wf_imp‹t_wisdom_‰om_fûe
(
f
Ë
	`f·wf_imp‹t_wisdom
(
my_f·w_ªad_ch¨
, (*Ë(f))

	)

11 
	#f·wl_imp‹t_wisdom_‰om_fûe
(
f
Ë
	`f·wl_imp‹t_wisdom
(
my_f·w_ªad_ch¨
, (*Ë(f))

	)

	@filter.c

33 
	~<fûãr.h
>

36 
	#⁄ïi
 
M_PI


	)

37 
	#tw›i
 (2*
⁄ïi
)

	)

39 
RólFIR


40 
	$√wFIR_REAL
 (
size
, *
èg
)

42 
RólFIR
 
p
 = (
RólFIRDesc
 *Ë
	`ß„Æloc
 (1,  (RólFIRDesc), 
èg
);

43 
	`FIRc€f
 (
p
Ë(
REAL
 *Ë
	`ß„Æloc
 (
size
,  (REAL), 
èg
);

44 
	`FIRsize
 (
p
Ë
size
;

45 
	`FIRty≥
 (
p
Ë
FIR_Undef
;

46 
	`FIRiscom∂ex
 (
p
Ë
FALSE
;

47 
	`FIRfqlo
 (
p
Ë
	`FIRfqhi
 (p) = -1.0;

48  
p
;

49 
	}
}

51 
Com∂exFIR


52 
	$√wFIR_COMPLEX
 (
size
, *
èg
)

54 
Com∂exFIR
 
p
 =

55 (
Com∂exFIRDesc
 *Ë
	`ß„Æloc
 (1,  (Com∂exFIRDesc), 
èg
);

56 
	`FIRc€f
 (
p
Ë(
COMPLEX
 *Ë
	`ß„Æloc
 (
size
,  (COMPLEX), 
èg
);

57 
	`FIRsize
 (
p
Ë
size
;

58 
	`FIRty≥
 (
p
Ë
FIR_Undef
;

59 
	`FIRiscom∂ex
 (
p
Ë
TRUE
;

60 
	`FIRfqlo
 (
p
Ë
	`FIRfqhi
 (p) = -1.0;

61  
p
;

62 
	}
}

65 
	$dñFIR_REAL
 (
RólFIR
 
p
)

67 i‡(
p
)

69 
	`dñvec_REAL
 (
	`FIRc€f
 (
p
));

70 
	`‰ì
 ((*Ë
p
);

72 
	}
}

75 
	$dñFIR_COMPLEX
 (
Com∂exFIR
 
p
)

77 i‡(
p
)

79 
	`dñvec_COMPLEX
 (
	`FIRc€f
 (
p
));

80 
	`‰ì
 ((*Ë
p
);

82 
	}
}

84 
RólFIR


85 
	$√wFIR_Low∑ss_REAL
 (
REAL
 
cutoff
, REAL 
§
, 
size
)

87 i‡((
cutoff
 < 0.0Ë|| (cutof‡> (
§
 / 2.0)))

89 i‡(
size
 < 1)

92 
msize
 = 
size
-1;

93 
RólFIR
 
p
;

94 
REAL
 *
h
, *
w
, 
fc
 = 
cutoff
 / 
§
;

95 
REAL
 
c‹ª˘‹
 = 0.0, 
midpoöt
;

96 
i
;

97 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

98 
p
 = 
	`√wFIR_REAL
 (
size
, "newFIR_Lowpass_REAL");

99 
h
 = 
	`FIRc€f
 (
p
);

100 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Lowpass_REAL window");

101 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

102 
i
 = 0; i < 
size
; i++)

104 i‡((
REAL
)
i
 !
midpoöt
)

105 
h
[
i
] =

106 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

107 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

109 
h
[
i
] = 2.0‡* 
fc
;

113 
	`dñvec_REAL
 (
w
);

114 
	`FIRty≥
 (
p
Ë
FIR_Low∑ss
;

115  
p
;

117 
	}
}

119 
Com∂exFIR


120 
	$√wFIR_Low∑ss_COMPLEX
 (
REAL
 
cutoff
, REAL 
§
, 
size
)

122 i‡((
cutoff
 < 0.0Ë|| (cutof‡> (
§
 / 2.0)))

124 i‡(
size
 < 1)

128 
msize
=
size
-1;

129 
BOOLEAN
 
eví
=
FALSE
;

130 
Com∂exFIR
 
p
;

131 
COMPLEX
 *
h
;

132 
REAL
 *
w
, 
fc
 = 
cutoff
 / 
§
, 
midpoöt
;

133 
i
;

135 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

136 
p
 = 
	`√wFIR_COMPLEX
 (
size
, "newFIR_Lowpass_COMPLEX");

137 
h
 = 
	`FIRc€f
 (
p
);

138 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Lowpass_REAL window");

139 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

141 
i
 = 0; i < 
size
; i++)

143 i‡((
REAL
)
i
 !
midpoöt
)

144 
h
[
i
].
ª
 =

145 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

146 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

148 
h
[
i
].
ª
 = 2.0‡* 
fc
;

151 
	`dñvec_REAL
 (
w
);

152 
	`FIRty≥
 (
p
Ë
FIR_Low∑ss
;

153  
p
;

155 
	}
}

157 
RólFIR


158 
	$√wFIR_B™d∑ss_REAL
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
)

160 i‡((
lo
 < 0.0Ë|| (
hi
 > (
§
 / 2.0)) || (hi <=Üo))

162 i‡(
size
 < 1)

166 
RólFIR
 
p
;

167 
REAL
 *
h
, *
w
, 
fc
, 
ff
, 
midpoöt
;

168 
i
, 
msize
;

170 
msize
 = 
size
-1;

171 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

172 
p
 = 
	`√wFIR_REAL
 (
size
, "newFIR_Bandpass_REAL");

173 
h
 = 
	`FIRc€f
 (
p
);

174 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Bandpass_REAL window");

175 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

177 
lo
 /
§
, 
hi
 /= sr;

178 
fc
 = (
hi
 - 
lo
) / 2.0f;

179 
ff
 = (
REAL
Ë((
lo
 + 
hi
Ë* 
⁄ïi
);

181 
i
 = 0; i < 
size
; i++)

183 i‡((
REAL
)
i
 !
midpoöt
)

184 
h
[
i
] =

185 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

186 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

188 
h
[
i
] = 2.0‡* 
fc
;

189 
h
[
i
] *(
REAL
Ë(2.0 * 
	`cos
 (
ff
 * ((REAL)ò- 
midpoöt
)));

192 
	`dñvec_REAL
 (
w
);

193 
	`FIRty≥
 (
p
Ë
FIR_B™d∑ss
;

194  
p
;

196 
	}
}

198 
Com∂exFIR


199 
	$√wFIR_B™d∑ss_COMPLEX
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
)

201 i‡((
lo
 < -(
§
 / 2.0)Ë|| (
hi
 > (sr / 2.0)) || (hi <=Üo))

203 i‡(
size
 < 1)

207 
Com∂exFIR
 
p
;

208 
COMPLEX
 *
h
;

209 
REAL
 *
w
, 
fc
, 
ff
, 
midpoöt
;

210 
i
,
msize
;

212 
msize
 = 
size
-1;

213 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

214 
p
 = 
	`√wFIR_COMPLEX
 (
size
, "newFIR_Bandpass_COMPLEX");

215 
h
 = 
	`FIRc€f
 (
p
);

216 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Bandpass_COMPLEX window");

217 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

219 
lo
 /
§
, 
hi
 /= sr;

220 
fc
 = (
REAL
Ë((
hi
 - 
lo
) / 2.0);

221 
ff
 = (
REAL
Ë((
lo
 + 
hi
Ë* 
⁄ïi
);

223 
i
 = 0; i < 
size
; i++)

225 
REAL
 
k
 = (REAL)
i
 - 
midpoöt
;

226 
REAL
 
tmp
, 
phs
 = 
ff
 * 
k
;

227 i‡((
REAL
)
i
 !
midpoöt
)

228 
tmp
 = (
REAL
Ë((
	`sö
 (
tw›i
 * 
k
 * 
fc
Ë/ (
⁄ïi
 * k)Ë* 
w
[
i
]);

230 
tmp
 = (
REAL
Ë(2.0 * 
fc
);

231 
tmp
 *= 2.0;

232 
h
[
i
].
ª
 = (
REAL
Ë(
tmp
 * 
	`cos
 (
phs
));

233 
h
[
i
].
im
 = (
IMAG
Ë(
tmp
 * 
	`sö
 (
phs
));

236 
	`dñvec_REAL
 (
w
);

237 
	`FIRty≥
 (
p
Ë
FIR_B™d∑ss
;

238  
p
;

240 
	}
}

242 
RólFIR


243 
	$√wFIR_High∑ss_REAL
 (
REAL
 
cutoff
, REAL 
§
, 
size
)

245 i‡((
cutoff
 < 0.0Ë|| (cutof‡> (
§
 / 2.0)))

247 i‡(
size
 < 1)

251 
RólFIR
 
p
;

252 
REAL
 *
h
, *
w
, 
fc
 = 
cutoff
 / 
§
, 
midpoöt
;

253 
i
, 
msize
;

256 
msize
 = 
size
-1;

257 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

258 
p
 = 
	`√wFIR_REAL
 (
size
, "newFIR_Highpass_REAL");

259 
h
 = 
	`FIRc€f
 (
p
);

260 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Highpass_REAL window");

261 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

263 
i
 = 0; i < 
size
; i++)

265 i‡((
REAL
)
i
 !
midpoöt
)

266 
h
[
i
] =

267 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

268 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

270 
h
[
i
] = (
REAL
Ë(2.0 * 
fc
);

273 
i
 = 0; i < 
size
; i++)

275 i‡((
REAL
)
i
 !
midpoöt
)

276 
h
[
i
] = -h[i];

278 
h
[
i
] = 1.0f - h[i];

281 
	`dñvec_REAL
 (
w
);

282 
	`FIRty≥
 (
p
Ë
FIR_High∑ss
;

283  
p
;

285 
	}
}

287 
Com∂exFIR


288 
	$√wFIR_High∑ss_COMPLEX
 (
REAL
 
cutoff
, REAL 
§
, 
size
)

290 i‡((
cutoff
 < 0.0Ë|| (cutof‡> (
§
 / 2.0)))

292 i‡(
size
 < 1)

296 
Com∂exFIR
 
p
;

297 
COMPLEX
 *
h
;

298 
REAL
 *
w
, 
fc
 = 
cutoff
 / 
§
, 
midpoöt
;

299 
i
,
msize
;

301 
msize
 = 
size
-1;

302 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

303 
p
 = 
	`√wFIR_COMPLEX
 (
size
, "newFIR_Highpass_REAL");

304 
h
 = 
	`FIRc€f
 (
p
);

305 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Highpass_REAL window");

306 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

308 
i
 = 0; i < 
size
; i++)

310 i‡((
REAL
)
i
 !
midpoöt
)

311 
h
[
i
].
ª
 =

312 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

313 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

315 
h
[
i
].
ª
 = (
REAL
Ë(2.0 * 
fc
);

318 
i
 = 0; i < 
size
; i++)

320 i‡((
REAL
)
i
 !
midpoöt
)

321 
h
[
i
].
ª
 = -h[i].re;

323 
h
[
i
].
ª
 = (
REAL
) (1.0 - h[i].re);

326 
	`dñvec_REAL
 (
w
);

327 
	`FIRty≥
 (
p
Ë
FIR_High∑ss
;

328  
p
;

330 
	}
}

332 
RólFIR


333 
	$√wFIR_Hûbît_REAL
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
)

335 i‡((
lo
 < 0.0Ë|| (
hi
 > (
§
 / 2.0)) || (hi <=Üo))

337 i‡(
size
 < 1)

341 
RólFIR
 
p
;

342 
REAL
 *
h
, *
w
, 
fc
, 
ff
, 
midpoöt
;

343 
i
,
msize
;

345 
msize
 = 
size
-1;

346 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

347 
p
 = 
	`√wFIR_REAL
 (
size
, "newFIR_Hilbert_REAL");

348 
h
 = 
	`FIRc€f
 (
p
);

349 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Hilbert_REAL window");

350 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

352 
lo
 /
§
, 
hi
 /= sr;

353 
fc
 = (
REAL
Ë((
hi
 - 
lo
) / 2.0);

354 
ff
 = (
REAL
Ë((
lo
 + 
hi
Ë* 
⁄ïi
);

356 
i
 = 0; i < 
size
; i++)

359 i‡((
REAL
)
i
 !
midpoöt
)

360 
h
[
i
] =

361 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

362 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

364 
h
[
i
] = (
REAL
Ë(2.0 * 
fc
);

365 
h
[
i
] *(
REAL
Ë(2.0 * 
	`sö
 (
ff
 * ((REAL)ò- 
midpoöt
)));

368 
	`dñvec_REAL
 (
w
);

369 
	`FIRty≥
 (
p
Ë
FIR_Hûbît
;

370  
p
;

372 
	}
}

374 
Com∂exFIR


375 
	$√wFIR_Hûbît_COMPLEX
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
)

377 i‡((
lo
 < 0.0Ë|| (
hi
 > (
§
 / 2.0)) || (hi <=Üo))

379 i‡(
size
 < 1)

383 
Com∂exFIR
 
p
;

384 
COMPLEX
 *
h
;

385 
REAL
 *
w
, 
fc
, 
ff
, 
midpoöt
;

386 
i
, 
msize
;

388 
msize
 = 
size
-1;

389 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

390 
p
 = 
	`√wFIR_COMPLEX
 (
size
, "newFIR_Hilbert_COMPLEX");

391 
h
 = 
	`FIRc€f
 (
p
);

392 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Hilbert_COMPLEX window");

393 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

395 
lo
 /
§
, 
hi
 /= sr;

396 
fc
 = (
REAL
Ë((
hi
 - 
lo
) / 2.0);

397 
ff
 = (
REAL
Ë((
lo
 + 
hi
Ë* 
⁄ïi
);

399 
i
 = 0; i < 
size
; i++)

401 
REAL
 
tmp
, 
phs
 = 
ff
 * ((REAL)
i
 - 
midpoöt
),
tm∑ng
 = ((REAL)i - midpoint);

402 i‡(
i
 !
midpoöt
)

403 
tmp
 =

404 (
REAL
Ë((
	`sö
 (
tw›i
 * 
tm∑ng
 * 
fc
) /

405 (
⁄ïi
 * 
tm∑ng
)Ë* 
w
[
i
]);

407 
tmp
 = (
REAL
Ë(2.0 * 
fc
);

408 
tmp
 *= 2.0f;

410 
h
[
i
].
im
 *(
REAL
Ë(
tmp
 * 
	`sö
 (
phs
));

413 
	`dñvec_REAL
 (
w
);

414 
	`FIRty≥
 (
p
Ë
FIR_Hûbît
;

415  
p
;

417 
	}
}

419 
RólFIR


420 
	$√wFIR_B™d°›_REAL
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
)

422 i‡((
lo
 < 0.0Ë|| (
hi
 > (
§
 / 2.0)) || (hi <=Üo))

424 i‡(
size
 < 1)

428 
RólFIR
 
p
;

429 
REAL
 *
h
, *
w
, 
fc
, 
ff
, 
midpoöt
;

430 
i
,
msize
;

432 
msize
 = 
size
-1;

433 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

434 
p
 = 
	`√wFIR_REAL
 (
size
, "newFIR_Bandstop_REAL");

435 
h
 = 
	`FIRc€f
 (
p
);

436 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Bandstop_REAL window");

437 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

439 
lo
 /
§
, 
hi
 /= sr;

440 
fc
 = (
REAL
Ë((
hi
 - 
lo
) / 2.0);

441 
ff
 = (
REAL
Ë((
lo
 + 
hi
Ë* 
⁄ïi
);

443 
i
 = 0; i < 
size
; i++)

445 i‡((
REAL
)
i
 !
midpoöt
)

446 
h
[
i
] =

447 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

448 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

450 
h
[
i
] = (
REAL
Ë(2.0 * 
fc
);

451 
h
[
i
] *(
REAL
Ë(2.0 * 
	`cos
 (
ff
 * ((REAL)ò- 
midpoöt
)));

454 
i
 = 0; i < 
size
; i++)

456 i‡((
REAL
)
i
 !
midpoöt
)

457 
h
[
i
] = -h[i];

459 
h
[
i
] = (
REAL
) (1.0 - h[i]);

462 
	`dñvec_REAL
 (
w
);

463 
	`FIRty≥
 (
p
Ë
FIR_B™d°›
;

464  
p
;

466 
	}
}

468 
Com∂exFIR


469 
	$√wFIR_B™d°›_COMPLEX
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
)

471 i‡((
lo
 < 0.0Ë|| (
hi
 > (
§
 / 2.0)) || (hi <=Üo))

473 i‡(
size
 < 1)

477 
Com∂exFIR
 
p
;

478 
COMPLEX
 *
h
;

479 
REAL
 *
w
, 
fc
, 
ff
, 
midpoöt
;

480 
i
, 
msize
;

482 
msize
 = 
size
 -1;

483 
midpoöt
 = (
REAL
)(0.5*(REAL)
msize
);

484 
p
 = 
	`√wFIR_COMPLEX
 (
size
, "newFIR_Bandstop_REAL");

485 
h
 = 
	`FIRc€f
 (
p
);

486 
w
 = 
	`√wvec_REAL
 (
size
, "newFIR_Bandstop_REAL window");

487 (Ë
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
size
, 
w
);

489 
lo
 /
§
, 
hi
 /= sr;

490 
fc
 = (
REAL
Ë((
hi
 - 
lo
) / 2.0);

491 
ff
 = (
REAL
Ë((
lo
 + 
hi
Ë* 
⁄ïi
);

493 
i
 = 0; i < 
size
; i++)

495 
REAL
 
tmp
, 
phs
 = 
ff
 * ((REAL)
i
 - 
midpoöt
);

496 i‡((
REAL
)
i
 !
midpoöt
)

497 
tmp
 =

498 (
REAL
Ë((
	`sö
 (
tw›i
 * ((REAL)
i
 - 
midpoöt
Ë* 
fc
) /

499 (
⁄ïi
 * ((
REAL
)
i
 - 
midpoöt
))Ë* 
w
[i]);

501 
tmp
 = (
REAL
Ë(2.0 * 
fc
);

502 
tmp
 *= 2.0;

503 
h
[
i
].
ª
 *(
REAL
Ë(
tmp
 * 
	`cos
 (
phs
));

504 
h
[
i
].
im
 *(
REAL
Ë(
tmp
 * 
	`sö
 (
phs
));

507 
i
 = 0; i < 
size
; i++)

509 i‡((
REAL
)
i
 !
midpoöt
)

510 
h
[
i
] = 
	`Cmul
 (h[i], 
cxmöus⁄e
);

512 
h
[
i
] = 
	`Csub
 (
cx⁄e
, h[i]);

515 
	`dñvec_REAL
 (
w
);

516 
	`FIRty≥
 (
p
Ë
FIR_B™d°›
;

517  
p
;

519 
	}
}

521 #ifde‡
nŸdef


523 
	$maö
 (
¨gc
, **
¨gv
)

525 
i
, 
size
 = 101;

526 
RólFIR
 
fût
;

527 #ifde‡
nŸdef


528 
fût
 = 
	`√wFIR_Low∑ss_REAL
 (1000.0, 48000.0, 
size
);

529 
i
 = 0; i < 
	`FIRsize
 (
fût
); i++)

530 
	`¥ötf
 ("%d %f\n", 
i
, 
	`FIRèp
 (
fût
, i));

531 
	`dñFIR_REAL
 (
fût
);

534 #ifde‡
nŸdef


535 
fût
 = 
	`√wFIR_B™d°›_REAL
 (1000.0, 2000.0, 48000.0, 
size
);

536 
i
 = 0; i < 
	`FIRsize
 (
fût
); i++)

537 
	`¥ötf
 ("%d %f\n", 
i
, 
	`FIRèp
 (
fût
, i));

538 
	`dñFIR_REAL
 (
fût
);

541 
fût
 = 
	`√wFIR_B™d∑ss_REAL
 (1000.0, 2000.0, 48000.0, 
size
);

542 
i
 = 0; i < 
	`FIRsize
 (
fût
); i++)

543 
	`¥ötf
 ("%d %f\n", 
i
, 
	`FIRèp
 (
fût
, i));

544 
	`dñFIR_REAL
 (
fût
);

546 #ifde‡
nŸdef


547 
fût
 = 
	`√wFIR_High∑ss_REAL
 (1000.0, 48000.0, 
size
);

548 
i
 = 0; i < 
	`FIRsize
 (
fût
); i++)

549 
	`¥ötf
 ("%d %f\n", 
i
, 
	`FIRèp
 (
fût
, i));

550 
	`dñFIR_REAL
 (
fût
);

553 #ifde‡
nŸdef


554 
fût
 = 
	`√wFIR_Hûbît_REAL
 (1000.0, 2000.0, 48000.0, 
size
);

555 
i
 = 0; i < 
	`FIRsize
 (
fût
); i++)

556 
	`¥ötf
 ("%d %f\n", 
i
, 
	`FIRèp
 (
fût
, i));

557 
	`dñFIR_REAL
 (
fût
);

560 #ifde‡
nŸdef


562 
COMPLEX
 *
z
;

563 
REAL
 *
âbl
;

564 
f·Àn
;

565 
f·Àn
 = 
	`nblock2
 (
size
) * 2;

566 
z
 = 
	`√wvec_COMPLEX
 (
f·Àn
, "z");

567 
âbl
 = 
	`√wvec_REAL
 (
f·Àn
, "ttbl");

568 
	`cf·m
 (
FFT_INIT
, 
f·Àn
, (*Ë
z
, (*Ëz, 
âbl
);

569 
i
 = 0; i < 
	`FIRsize
 (
fût
); i++)

570 
z
[
i
].
ª
 = 
	`FIRèp
 (
fût
, i);

571 
	`cf·m
 (
FFT_FORWARD
, 
f·Àn
, (*Ë
z
, (*Ëz, 
âbl
);

572 
i
 = 0; i < 
size
; i++)

574 
	`¥ötf
 ("%d %f\n", 
i
, 
	`Cabs
 (
z
[i]));

575 
	`dñvec_COMPLEX
 (
z
);

576 
	`dñvec_REAL
 (
âbl
);

580 
	`exô
 (0);

581 
	}
}

	@filter.h

33 #i‚de‡
_fûãr_h


35 
	#_fûãr_h


	)

38 
	~<‰omsys.h
>

39 
	~<b™Æ.h
>

40 
	~<•lôfõlds.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

44 
	~<Á°rig.h
>

45 
	~<upd©e.h
>

46 
	~<lmadf.h
>

47 
	~<f·w3.h
>

48 
	~<f·w3_fix.h
>

49 
	~<wödow.h
>

50 
	~<m©h.h
>

54 
	mFIR_Undef
, 
	mFIR_Low∑ss
, 
	mFIR_B™d∑ss
, 
	mFIR_High∑ss
, 
	mFIR_Hûbît
,

55 
	mFIR_B™d°›


56 } 
	tFIR_ª•⁄£_ty≥
;

59 { 
	mFIR_Eví
, 
	mFIR_Odd
 } 
	tFIR_∑rôy_ty≥
;

61 
	s_ªÆ_FIR


63 
REAL
 *
	mc€f
;

64 
	msize
;

65 
FIR_ª•⁄£_ty≥
 
	mty≥
;

66 
BOOLEAN
 
	m˝lx
;

69 
REAL
 
	mlo
, 
	mhi
;

70 } 
	m‰eq
;

71 } 
	tRólFIRDesc
, *
	tRólFIR
;

73 
	s_com∂ex_FIR


75 
COMPLEX
 *
	mc€f
;

76 
	msize
;

77 
FIR_ª•⁄£_ty≥
 
	mty≥
;

78 
BOOLEAN
 
	m˝lx
;

81 
REAL
 
	mlo
, 
	mhi
;

82 } 
	m‰eq
;

83 } 
	tCom∂exFIRDesc
, *
	tCom∂exFIR
;

85 
	#FIRc€f
(
p
Ë(’)->
c€f
)

	)

86 
	#FIRèp
(
p
, 
i
Ë(
	`FIRc€f
’)[(i)])

	)

87 
	#FIRsize
(
p
Ë(’)->
size
)

	)

88 
	#FIRty≥
(
p
Ë(’)->
ty≥
)

	)

89 
	#FIRiscom∂ex
(
p
Ë(’)->
˝lx
)

	)

90 
	#FIRi§ól
(
p
Ë(!
	`FIRiscom∂ex
’))

	)

91 
	#FIRfqlo
(
p
Ë(’)->
‰eq
.
lo
)

	)

92 
	#FIRfqhi
(
p
Ë(’)->
‰eq
.
hi
)

	)

94 
	#dñFIR_Low∑ss_REAL
(
p
Ë
	`dñFIR_REAL
’)

	)

95 
	#dñFIR_Low∑ss_COMPLEX
(
p
Ë
	`dñFIR_COMPLEX
’)

	)

96 
	#dñFIR_B™d∑ss_REAL
(
p
Ë
	`dñFIR_REAL
’)

	)

97 
	#dñFIR_B™d∑ss_COMPLEX
(
p
Ë
	`dñFIR_COMPLEX
’)

	)

98 
	#dñFIR_High∑ss_REAL
(
p
Ë
	`dñFIR_REAL
’)

	)

99 
	#dñFIR_High∑ss_COMPLEX
(
p
Ë
	`dñFIR_COMPLEX
’)

	)

100 
	#dñFIR_Hûbît_REAL
(
p
Ë
	`dñFIR_REAL
’)

	)

101 
	#dñFIR_Hûbît_COMPLEX
(
p
Ë
	`dñFIR_COMPLEX
’)

	)

102 
	#dñFIR_B™d°›_REAL
(
p
Ë
	`dñFIR_REAL
’)

	)

103 
	#dñFIR_B™d°›_COMPLEX
(
p
Ë
	`dñFIR_COMPLEX
’)

	)

105 
RólFIR
 
√wFIR_REAL
 (
size
, *
èg
);

106 
Com∂exFIR
 
√wFIR_COMPLEX
 (
size
, *
èg
);

107 
dñFIR_REAL
 (
RólFIR
 
p
);

108 
dñFIR_COMPLEX
 (
Com∂exFIR
 
p
);

109 
RólFIR
 
√wFIR_Low∑ss_REAL
 (
REAL
 
cutoff
, REAL 
§
, 
size
);

110 
Com∂exFIR
 
√wFIR_Low∑ss_COMPLEX
 (
REAL
 
cutoff
, REAL 
§
, 
size
);

111 
RólFIR
 
√wFIR_B™d∑ss_REAL
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
);

112 
Com∂exFIR
 
√wFIR_B™d∑ss_COMPLEX
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
,

113 
size
);

114 
RólFIR
 
√wFIR_High∑ss_REAL
 (
REAL
 
cutoff
, REAL 
§
, 
size
);

115 
Com∂exFIR
 
√wFIR_High∑ss_COMPLEX
 (
REAL
 
cutoff
, REAL 
§
, 
size
);

116 
RólFIR
 
√wFIR_Hûbît_REAL
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
);

117 
Com∂exFIR
 
√wFIR_Hûbît_COMPLEX
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
,

118 
size
);

119 
RólFIR
 
√wFIR_B™d°›_REAL
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
, 
size
);

120 
Com∂exFIR
 
√wFIR_B™d°›_COMPLEX
 (
REAL
 
lo
, REAL 
hi
, REAL 
§
,

121 
size
);

	@filterbank.c

38 
	~<fûãrb™k.h
>

41 
FIRDownßm∂î


42 
	$√wFIRPDownßm∂î
(
RólFIR
 
fûãr
, 
downßm∂e
, 
ch™√l
, 
COMPLEX
 *
sigö
, COMPLEX *
sigout
)

44 
FIRDownßm∂î
 
tmp
;

45 
i
,
j
;

47 
tmp
 = (
FIRDownßm∂î
Ë
	`mÆloc
((
fúdownßm∂î
));

48 
tmp
->
downßm∂e
 = downsample;

49 
tmp
->
dïth
 = ()
	`˚û
(()
fûãr
->
size
/()
downßm∂e
);

52 
tmp
->
fûãr_∑πôi⁄


53 (
REAL
 **)
	`ß„Æloc
(
downßm∂e
,(REAL *),"fbÖartitionÖointers");

54 
tmp
->
fûãr_dñaylöe


55 (
COMPLEX
 **)
	`ß„Æloc
(
downßm∂e
,(COMPLEX *),"fbÖartitionÖointers");

56 
i
=0;i<
tmp
->
downßm∂e
;i++) {

57 
tmp
->
fûãr_∑πôi⁄
[
i
]

58 (
REAL
 *)
	`ß„Æloc
(
tmp
->
dïth
,(REAL),"fbÖartition delayÜine");

59 
tmp
->
fûãr_dñaylöe
[
i
]

60 (
COMPLEX
 *)
	`ß„Æloc
(
tmp
->
dïth
,(COMPLEX),"fbÖartition delayÜine");

62 
i
=0;i<
downßm∂e
;i++) {

63 
	`mem£t
(
tmp
->
fûãr_∑πôi⁄
[
i
],0,(
REAL
 ) *Åmp->
dïth
);

64 
	`mem£t
(
tmp
->
fûãr_dñaylöe
[
i
],0,(
COMPLEX
Ë*Åmp->
dïth
);

69 
i
=0; i<
tmp
->
downßm∂e
; i++)

70 
j
=0; j<
tmp
->
dïth
; j++)

71 
tmp
->
fûãr_∑πôi⁄
[
i
][
j
] = 
	`FIRèp
(
fûãr
,ò+ j*—mp->
downßm∂e
));

74 
tmp
->
sigö
 = sigin;

75 
tmp
->
sigout
 = sigout;

76 
tmp
->
rŸ©‹
 = (
COMPLEX
 *)
	`ß„Æloc
—mp->
downßm∂e
,(COMPLEX),"newFIRDownsampler: downsampleÑotator");

77 
i
=0;i<
tmp
->
downßm∂e
;i++Ëtmp->
rŸ©‹
[i] = 
	`Cm∂x
((
REAL
)
	`cos
(i*
ch™√l
*2.0*
M_PI
/tmp->downßm∂e),(
IMAG
)
	`sö
(i*channel*2.0*M_PI/tmp->downsample));

79  
tmp
;

80 
	}
}

82 
FIRUpßm∂î


83 
	$√wFIRPUpßm∂î
(
RólFIR
 
fûãr
, 
upßm∂e
, 
ch™√l
, 
COMPLEX
 *
sigö
, COMPLEX *
sigout
)

85 
FIRUpßm∂î
 
tmp
;

86 
i
,
j
;

88 
tmp
 = (
FIRUpßm∂î
Ë
	`mÆloc
((
fúpfb
));

89 
tmp
->
upßm∂e
 = upsample;

90 
tmp
->
dïth
 = ()
	`˚û
(()
fûãr
->
size
/()
upßm∂e
);

93 
tmp
->
fûãr_∑πôi⁄


94 (
REAL
 **)
	`ß„Æloc
(
upßm∂e
,(REAL *),"fbÖartitionÖointers");

95 
tmp
->
fûãr_dñaylöe


96 (
COMPLEX
 **)
	`ß„Æloc
(
upßm∂e
,(COMPLEX *),"fbÖartitionÖointers");

97 
i
=0;i<
tmp
->
upßm∂e
;i++) {

98 
tmp
->
fûãr_∑πôi⁄
[
i
]

99 (
REAL
 *)
	`ß„Æloc
(
tmp
->
dïth
,(REAL),"fbÖartition delayÜine");

100 
tmp
->
fûãr_dñaylöe
[
i
]

101 (
COMPLEX
 *)
	`ß„Æloc
(
tmp
->
dïth
,(COMPLEX),"fbÖartition delayÜine");

103 
i
=0;i<
upßm∂e
;i++) {

104 
	`mem£t
(
tmp
->
fûãr_∑πôi⁄
[
i
],0,(
REAL
 ) *Åmp->
dïth
);

105 
	`mem£t
(
tmp
->
fûãr_dñaylöe
[
i
],0,(
COMPLEX
Ë*Åmp->
dïth
);

110 
i
=0; i<
tmp
->
upßm∂e
; i++)

111 
j
=0; j<
tmp
->
dïth
; j++)

112 
tmp
->
fûãr_∑πôi⁄
[
i
][
j
] = 
	`FIRèp
(
fûãr
,ò+ j*—mp->
upßm∂e
));

115 
tmp
->
sigö
 = sigin;

116 
tmp
->
sigout
 = sigout;

117 
tmp
->
rŸ©‹
 = (
COMPLEX
 *)
	`ß„Æloc
—mp->
upßm∂e
,(COMPLEX),"newFIRUpsampler: upsampleÑotator");

118 
i
=0;i<
tmp
->
upßm∂e
;i++Ëtmp->
rŸ©‹
[i] = 
	`Cm∂x
((
REAL
)
	`cos
(i*
ch™√l
*2.0*
M_PI
/tmp->upßm∂e),(
IMAG
)
	`sö
(i*channel*2.0*M_PI/tmp->upsample));

120  
tmp
;

121 
	}
}

123 
FIRPFB


124 
	$√wFIRHBPFBCh™√lizî
(
RólFIR
 
fûãr
, 
COMPLEX
 *
sigö
, COMPLEX *
sigout
)

126 
FIRPFB
 
tmp
;

127 
i
,
j
;

129 
tmp
 = (
FIRPFB
Ë
	`mÆloc
((
fúpfb
));

130 
tmp
->
numch™s
 = 2;

131 
tmp
->
dïth
 = ()
	`˚û
((()
fûãr
->
size
-1)/2.0);

134 
tmp
->
fûãr_∑πôi⁄


135 (
REAL
 **)
	`ß„Æloc
(2,(REAL *),"fbÖartitionÖointers");

136 
tmp
->
fûãr_dñaylöe


137 (
COMPLEX
 **)
	`ß„Æloc
(2,(COMPLEX *),"fbÖartitionÖointers");

138 
i
=0;i<
tmp
->
numch™s
;i++) {

139 
tmp
->
fûãr_∑πôi⁄
[
i
]

140 (
REAL
 *)
	`ß„Æloc
(
tmp
->
dïth
,(REAL),"fbÖartition delayÜine");

141 
tmp
->
fûãr_dñaylöe
[
i
]

142 (
COMPLEX
 *)
	`ß„Æloc
(
tmp
->
dïth
,(COMPLEX),"fbÖartition delayÜine");

144 
i
=0;i<
tmp
->
numch™s
;i++) {

145 
	`mem£t
(
tmp
->
fûãr_∑πôi⁄
[
i
],0,(
REAL
 ) *Åmp->
dïth
);

146 
	`mem£t
(
tmp
->
fûãr_dñaylöe
[
i
],0,(
COMPLEX
Ë*Åmp->
dïth
);

151 
i
=0; i<
tmp
->
numch™s
; i++)

152 
j
=0; j<
tmp
->
dïth
; j++)

153 
tmp
->
fûãr_∑πôi⁄
[
i
][
j
] = 
	`FIRèp
(
fûãr
,ò+ j*—mp->
numch™s
));

156 
tmp
->
sigö
 = sigin;

157 
tmp
->
sigout
 = sigout;

159  
tmp
;

160 
	}
}

161 
FIRPFB


162 
	$√wFIRPFBCh™√lizî
(
RólFIR
 
fûãr
, 
numch™s
, 
COMPLEX
 *
sigö
, COMPLEX *
sigout
, 
pbôs
)

164 
FIRPFB
 
tmp
;

165 
i
,
j
;

167 
tmp
 = (
FIRPFB
Ë
	`mÆloc
((
fúpfb
));

168 
tmp
->
numch™s
 =Çumchans;

169 
tmp
->
dïth
 = ()
	`˚û
(()
fûãr
->
size
/()
numch™s
);

172 
tmp
->
fûãr_∑πôi⁄


173 (
REAL
 **)
	`ß„Æloc
(
numch™s
,(REAL *),"fbÖartitionÖointers");

174 
tmp
->
fûãr_dñaylöe


175 (
COMPLEX
 **)
	`ß„Æloc
(
numch™s
,(COMPLEX *),"fbÖartitionÖointers");

176 
i
=0;i<
tmp
->
numch™s
;i++) {

177 
tmp
->
fûãr_∑πôi⁄
[
i
]

178 (
REAL
 *)
	`ß„Æloc
(
tmp
->
dïth
,(REAL),"fbÖartition delayÜine");

179 
tmp
->
fûãr_dñaylöe
[
i
]

180 (
COMPLEX
 *)
	`ß„Æloc
(
tmp
->
dïth
,(COMPLEX),"fbÖartition delayÜine");

182 
i
=0;i<
numch™s
;i++) {

183 
	`mem£t
(
tmp
->
fûãr_∑πôi⁄
[
i
],0,(
REAL
 ) *Åmp->
dïth
);

184 
	`mem£t
(
tmp
->
fûãr_dñaylöe
[
i
],0,(
COMPLEX
Ë*Åmp->
dïth
);

189 
i
=0; i<
tmp
->
numch™s
; i++)

190 
j
=0; j<
tmp
->
dïth
; j++)

191 
tmp
->
fûãr_∑πôi⁄
[
i
][
j
] = 
	`FIRèp
(
fûãr
,ò+ j*—mp->
numch™s
));

194 
tmp
->
sigö
 = sigin;

195 
tmp
->
sigout
 = sigout;

196 
tmp
->
f·buf„r
 = (
COMPLEX
 *)
	`ß„Æloc
—mp->
numch™s
,(COMPLEX),"fft input buffer");

198 
tmp
->
pch™
 = 
	`f·wf_∂™_d·_1d
—mp->
numch™s
,

199 (
f·wf_com∂ex
 *)
tmp
->
f·buf„r
,

200 (
f·wf_com∂ex
 *)
tmp
->
sigout
,

201 
FFTW_FORWARD
,

202 
pbôs
);

204  
tmp
;

205 
	}
}

207 
	$dñFIRPB
(
FIRPFB
 
p
)

209 
i
;

210 
	`f·wf_de°roy_∂™
(
p
->
pch™
);

211 
	`ß„‰ì
((*)
p
->
f·buf„r
);

212 
i
=0;i<
p
->
numch™s
;i++)

213 
	`ß„‰ì
((*)
p
->
fûãr_∑πôi⁄
[
i
]),

214 
	`ß„‰ì
((*)
p
->
fûãr_dñaylöe
[
i
]);

215 
	`ß„‰ì
((*)
p
->
fûãr_∑πôi⁄
);

216 
	`ß„‰ì
((*)
p
->
fûãr_dñaylöe
);

217 
	`ß„‰ì
((*)
p
);

218 
	}
}

220 
	$doFIRPFBCh™√lizî
(
FIRPFB
 
p
)

222 
i
,
j
;

223 
k
 = 
p
->
numch™s
 - 1;

224 
i
=0;i<
p
->
numch™s
;i++) {

225 
p
->
fûãr_dñaylöe
[
i
][0] =Ö->
sigö
[
k
-i];

227 
p
->
f·buf„r
[
i
]
	`Cs˛
’->
sigö
[i],p->
fûãr_∑πôi⁄
[i][0]);

229 
j
=1;j<
p
->
dïth
;j++)

230 
p
->
f·buf„r
[
i
] = 
	`Cadd
(
	`Cs˛
’->
fûãr_dñaylöe
[i][
j
],p->
fûãr_∑πôi⁄
[i][j]),p->fftbuffer[i]);

232 
j
=
p
->
dïth
-1;j>0;j--)

233 
p
->
fûãr_dñaylöe
[
i
][
j
] =Ö->filter_delayline[i][j-1];

235 
	`f·wf_execuã
(
p
->
pch™
);

236 
	}
}

238 
	$doFIRPFBUpßm∂î
(
FIRUpßm∂î
 
p
)

240 
i
,
j
;

242 
i
=0;i<
p
->
upßm∂e
;i++) {

243 
p
->
fûãr_dñaylöe
[
i
][0] = 
	`Cmul
’->
sigö
[i],p->
rŸ©‹
[i]);

244 
p
->
sigout
[
i
]=
cxzîo
;

246 
j
=0;j<
p
->
dïth
;j++)

247 
p
->
sigout
[
i
] = 
	`Cadd
(
	`Cs˛
’->
fûãr_dñaylöe
[i][
j
],p->
fûãr_∑πôi⁄
[i][j]),p->sigout[i]);

249 
j
=
p
->
dïth
-1;j>0;j--)

250 
p
->
fûãr_dñaylöe
[
i
][
j
] =Ö->filter_delayline[i][j-1];

253 
	}
}

255 
	$doFIRPFBdownßm∂î
(
FIRDownßm∂î
 
p
)

257 
i
,
j
;

258 
COMPLEX
 
accum
 = 
cxzîo
;

259 
k
 = 
p
->
downßm∂e
 - 1;

261 *
p
->
sigout
=
cxzîo
;

263 
i
=0;i<
p
->
downßm∂e
;i++) {

264 
p
->
fûãr_dñaylöe
[
i
][0] =Ö->
sigö
[
k
-i];

266 
j
=0;j<
p
->
dïth
;j++)

267 
accum
 = 
	`Cadd
(
	`Cs˛
(
p
->
fûãr_dñaylöe
[
i
][
j
],p->
fûãr_∑πôi⁄
[i][j]),accum);

268 *
p
->
sigout
 = 
	`Cadd
(
	`Cmul
(
accum
,p->
rŸ©‹
[
i
]),*p->sigout);

271 
j
=
p
->
dïth
-1;j>0;j--)

272 
p
->
fûãr_dñaylöe
[
i
][
j
] =Ö->filter_delayline[i][j-1];

275 
	}
}

277 
	$dñFIRDownßm∂î
(
FIRDownßm∂î
 
p
)

279 
i
;

281 
i
=0;i<
p
->
downßm∂e
;i++){

282 
	`ß„‰ì
((*)
p
->
fûãr_dñaylöe
[
i
]);

283 
	`ß„‰ì
((*)
p
->
fûãr_∑πôi⁄
[
i
]);

285 
	`ß„‰ì
((*)
p
->
fûãr_dñaylöe
);

286 
	`ß„‰ì
((*)
p
->
fûãr_∑πôi⁄
);

287 
	`ß„‰ì
((*)
p
);

288 
	}
}

290 
	$dñFIRUpßm∂e
(
FIRUpßm∂î
 
p
)

292 
i
;

294 
i
=0;i<
p
->
upßm∂e
;i++){

295 
	`ß„‰ì
((*)
p
->
fûãr_dñaylöe
[
i
]);

296 
	`ß„‰ì
((*)
p
->
fûãr_∑πôi⁄
[
i
]);

298 
	`ß„‰ì
((*)
p
->
fûãr_dñaylöe
);

299 
	`ß„‰ì
((*)
p
->
fûãr_∑πôi⁄
);

300 
	`ß„‰ì
((*)
p
);

301 
	}
}

	@filterbank.h

38 #i‚de‡
_FILTERBANK_H


39 
	#_FILTERBANK_H


	)

40 
	~<fûãr.h
>

42 
	s_fúpfb
 {

43 
COMPLEX
 *
	msigö
;

44 
COMPLEX
 *
	msigout
;

45 
COMPLEX
 *
	mf·buf„r
;

46 
REAL
 **
	mfûãr_∑πôi⁄
;

47 
COMPLEX
 **
	mfûãr_dñaylöe
;

48 
	mnumch™s
;

49 
	mdïth
;

50 
f·wf_∂™
 
	mpch™
;

51 } 
	tfúpfb
,*
	tFIRPFB
;

53 
	s_fúdownßm∂î
 {

54 
COMPLEX
 *
	msigö
;

55 
COMPLEX
 *
	msigout
;

56 
REAL
 **
	mfûãr_∑πôi⁄
;

57 
COMPLEX
 **
	mfûãr_dñaylöe
;

58 
	mdownßm∂e
;

59 
	mdïth
;

60 
COMPLEX
 *
	mrŸ©‹
;

61 } 
	tfúdownßm∂î
, *
	tFIRDownßm∂î
;

63 
	s_fúupßm∂î
 {

64 
COMPLEX
 *
	msigö
;

65 
COMPLEX
 *
	msigout
;

66 
REAL
 **
	mfûãr_∑πôi⁄
;

67 
COMPLEX
 **
	mfûãr_dñaylöe
;

68 
	mupßm∂e
;

69 
	mdïth
;

70 
COMPLEX
 *
	mrŸ©‹
;

71 } 
	tfúupßm∂î
, *
	tFIRUpßm∂î
;

73 
FIRDownßm∂î


74 
√wFIRDownßm∂î
(
RólFIR
 
fûãr
,
downßm∂e
, 
ch™√l
, 
COMPLEX
 *
ö
, COMPLEX *
out
);

76 
FIRUpßm∂î


77 
√wFIRUpßm∂î
(
RólFIR
 
fûãr
,
upßm∂e
, 
ch™√l
, 
COMPLEX
 *
ö
, COMPLEX *
out
);

79 
FIRPFB


80 
√wFIRPFBCh™√lizî
(
RólFIR
 
fûãr
,
numch™s
, 
COMPLEX
 *
ö
, COMPLEX *
out
, 
pbôs
);

82 
FIRPFB


83 
√wFIRHBPFBCh™√lizî
(
RólFIR
 
fûãr
, 
COMPLEX
 *
sigö
, COMPLEX *
sigout
);

85 
dñFIRPFBCh™√lizî
(
FIRPFB
 
p
);

86 
dñFIRDownßm∂î
(
FIRDownßm∂î
 
p
);

87 
doFIRPFBCh™√lizî
(
FIRPFB
 
p
);

88 
doFIRDownßm∂î
(
FIRDownßm∂î
 
p
);

89 
doFIRUpßm∂î
(
FIRUpßm∂î
 
p
);

	@fm_demod.c

34 
	~<fm_demod.h
>

40 
PRIVATE
 

41 
	$öô_∂l
 (
FMD
 
fm
,

42 
REAL
 
ßm¥©e
, REAL 
‰eq
, REAL 
lo‰eq
, REAL 
hi‰eq
, REAL 
b™dwidth
)

44 
REAL
 
Ác
 = (REALË(
TWOPI
 / 
ßm¥©e
);

46 
fm
->
∂l
.
‰eq
.
f
 = fªq * 
Ác
;

47 
fm
->
∂l
.
‰eq
.
l
 = 
lo‰eq
 * 
Ác
;

48 
fm
->
∂l
.
‰eq
.
h
 = 
hi‰eq
 * 
Ác
;

49 
fm
->
∂l
.
phs
 = 0.0;

50 
fm
->
∂l
.
dñay
 = 
cxJ
;

52 
fm
->
∂l
.
iú
.
Æpha
 = 
b™dwidth
 * 
Ác
;

53 
fm
->
∂l
.
Æpha
 = fm->∂l.
iú
.alpha * 0.3f;

54 
fm
->
∂l
.
bëa
 = fm->∂l.
Æpha
 * fm->pll.alpha * 0.25f;

55 
	}
}

57 
PRIVATE
 

58 
	$∂l
 (
FMD
 
fm
, 
COMPLEX
 
sig
)

60 
COMPLEX
 
z
 = 
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
fm
->
∂l
.
phs
), (
IMAG
Ë
	`sö
 (fm->pll.phs));

61 
REAL
 
diff
;

63 
fm
->
∂l
.
dñay
.
ª
 = 
z
.ª * 
sig
.ª + z.
im
 * sig.im;

64 
fm
->
∂l
.
dñay
.
im
 = -
z
.im * 
sig
.
ª
 + z.re * sig.im;

65 
diff
 = 
	`Á°_©™2
 (
fm
->
∂l
.
dñay
.
im
, fm->∂l.dñay.
ª
);

67 
fm
->
∂l
.
‰eq
.
f
 +fm->∂l.
bëa
 * 
diff
;

69 i‡(
fm
->
∂l
.
‰eq
.
f
 < fm->∂l.‰eq.
l
)

70 
fm
->
∂l
.
‰eq
.
f
 = fm->∂l.‰eq.
l
;

71 i‡(
fm
->
∂l
.
‰eq
.
f
 > fm->∂l.‰eq.
h
)

72 
fm
->
∂l
.
‰eq
.
f
 = fm->∂l.‰eq.
h
;

74 
fm
->
∂l
.
phs
 +fm->∂l.
‰eq
.
f
 + fm->∂l.
Æpha
 * 
diff
;

76 
fm
->
∂l
.
phs
 >
TWOPI
)

77 
fm
->
∂l
.
phs
 -(
REAL
Ë
TWOPI
;

78 
fm
->
∂l
.
phs
 < 0)

79 
fm
->
∂l
.
phs
 +(
REAL
Ë
TWOPI
;

80 
	}
}

87 
	$FMDemod
 (
FMD
 
fm
)

89 
i
;

90 
i
 = 0; i < 
	`CXBsize
 (
fm
->
ibuf
); i++)

92 
	`∂l
 (
fm
, 
	`CXBd©a
 (fm->
ibuf
, 
i
));

93 
fm
->
afc
 = (
REAL
Ë(0.9999 * fm->af¯+ 0.0001 * fm->
∂l
.
‰eq
.
f
);

94 
	`CXBªÆ
 (
fm
->
obuf
, 
i
) =

95 
	`CXBimag
 (
fm
->
obuf
, 
i
Ë(fm->
∂l
.
‰eq
.
f
 - fm->
afc
Ë* fm->
cvt
;

97 
	}
}

99 
FMD


100 
	$√wFMD
 (
REAL
 
ßm¥©e
,

101 
REAL
 
f_öôül
,

102 
REAL
 
f_lobound
,

103 
REAL
 
f_hibound
,

104 
REAL
 
f_b™dwid
, 
size
, 
COMPLEX
 * 
ivec
, COMPLEX * 
ovec
, *
èg
)

106 
FMD
 
fm
 = (FMDË
	`ß„Æloc
 (1,  (
FMDDesc
), 
èg
);

108 
fm
->
size
 = size;

109 
fm
->
ibuf
 = 
	`√wCXB
 (
size
, 
ivec
, 
èg
);

110 
fm
->
obuf
 = 
	`√wCXB
 (
size
, 
ovec
, 
èg
);

112 
	`öô_∂l
 (
fm
, 
ßm¥©e
, 
f_öôül
, 
f_lobound
, 
f_hibound
, 
f_b™dwid
);

114 
fm
->
lock
 = 0.5;

115 
fm
->
afc
 = 0.0;

116 
fm
->
cvt
 = (
REAL
Ë(0.45 * 
ßm¥©e
 / (
M_PI
 * 
f_b™dwid
));

118  
fm
;

119 
	}
}

122 
	$dñFMD
 (
FMD
 
fm
)

124 i‡(
fm
)

126 
	`dñCXB
 (
fm
->
ibuf
);

127 
	`dñCXB
 (
fm
->
obuf
);

128 
	`ß„‰ì
 ((*Ë
fm
);

130 
	}
}

	@fm_demod.h

3 #i‚de‡
_fm_demod_h


4 
	#_fm_demod_h


	)

6 
	~<‰omsys.h
>

7 
	~<b™Æ.h
>

8 
	~<•lôfõlds.h
>

9 
	~<d©©y≥s.h
>

10 
	~<bufvec.h
>

11 
	~<cx›s.h
>

12 
	~<Á°rig.h
>

13 
	~<upd©e.h
>

14 
	~<lmadf.h
>

15 
	~<f·w3.h
>

16 
	~<f·w3_fix.h
>

17 
	~<ovsv.h
>

18 
	~<fûãr.h
>

19 
	~<oscûœt‹.h
>

21 
	s_fm_demod


23 
	msize
;

24 
CXB
 
	mibuf
, 
	mobuf
;

27 
REAL
 
	mÆpha
, 
	mbëa
;

30 
REAL
 
	mf
, 
	ml
, 
	mh
;

31 } 
	m‰eq
;

32 
REAL
 
	mphs
;

35 
REAL
 
	mÆpha
;

36 } 
	miú
;

37 
COMPLEX
 
	mdñay
;

38 } 
	m∂l
;

40 
REAL
 
	mlock
, 
	mafc
, 
	mcvt
;

41 } 
	tFMDDesc
, *
	tFMD
;

43 
FMDemod
 (
FMD
 
fm
);

44 
FMD
 
√wFMD
 (
REAL
 
ßm¥©e
,

45 
REAL
 
f_öôül
,

46 
REAL
 
f_lobound
,

47 
REAL
 
f_hibound
,

48 
REAL
 
f_b™dwid
,

49 
size
, 
COMPLEX
 * 
ivec
, COMPLEX * 
ovec
, *
èg
);

50 
dñFMD
 (
FMD
 
fm
);

52 #i‚de‡
TWOPI


53 
	#TWOPI
 (2.0*
M_PI
)

	)

	@fromsys.h

34 #i‚de‡
_‰omsys_h


35 
	#_‰omsys_h


	)

37 
	~<sys/ty≥s.h
>

38 
	~<sys/°©.h
>

39 
	~<time.h
>

40 
	~<f˙é.h
>

41 
	~<°dlib.h
>

44 
	~<°dio.h
>

45 
	~<˘y≥.h
>

46 
	~<°rög.h
>

47 
	~<m©h.h
>

48 #i‚de‡
M_PI


49 
	#M_PI
 3.14159265358928

	)

51 
	~<as£π.h
>

54 
	#DâSP_EXP


	)

55 
	#DâSP_IMP


	)

56 #i‚de‡
__GNUC__


57 
	#EPOCHFILETIME
 (116444736000000000
i64
)

	)

59 
	#EPOCHFILETIME
 (116444736000000000LL)

	)

62 #i‚de‡
MAXPATHLEN


63 
	#MAXPATHLEN
 (2048)

	)

66 
	~<iosdr.h
>

73 #ifde‡
DONT_INCLUDE


74 
__ölöe
 

75 
	$gëtimeofday
 (
timevÆ
 *
tv
, 
timez⁄e
 *
tz
)

77 
FILETIME
 
·
;

78 
LARGE_INTEGER
 
li
;

79 
__öt64
 
t
;

80 
tzÊag
;

82 i‡(
tv
)

84 
	`GëSy°emTimeAsFûeTime
 (&
·
);

85 
li
.
LowP¨t
 = 
·
.
dwLowD©eTime
;

86 
li
.
HighP¨t
 = 
·
.
dwHighD©eTime
;

87 
t
 = 
li
.
QuadP¨t
;

88 
t
 -
EPOCHFILETIME
;

89 
t
 /= 10;

90 
tv
->
tv_£c
 = (Ë(
t
 / 1000000);

91 
tv
->
tv_u£c
 = (Ë(
t
 % 1000000);

94 i‡(
tz
)

96 i‡(!
tzÊag
)

98 
	`_tz£t
 ();

99 
tzÊag
++;

101 
tz
->
tz_möuãswe°
 = 
_timez⁄e
 / 60;

102 
tz
->
tz_d°time
 = 
_daylight
;

106 
	}
}

	@graphiceq.c

37 
	~<gøphi˚q.h
>

40 
REAL
 
	gEQ_Num
[3];

41 
REAL
 
	gEQ_Dí
[3];

43 
REAL
 
	gEQ_Num_48000
[] = {0.99220706371f, -1.98392450292f, 0.99220706371f};

44 
REAL
 
	gEQ_Dí_48000
[] = {1.98392450292f, -0.98441412742f};

45 
REAL
 
	gEQ_Num_96000
[] = {0.99608835009f, -1.99205381333f, 0.99608835009f};

46 
REAL
 
	gEQ_Dí_96000
[] = {1.99205381333f, -0.99217670018f};

47 
REAL
 
	gEQ_Num_192000
[] = {0.99804034984f, -1.99604991764f, 0.99804034984f};

48 
REAL
 
	gEQ_Dí_192000
[] = {1.99604991764f, -0.99608069967f};

50 
EQ


51 
	$√w_EQ
 (
CXB
 
d
, 
REAL
 
ßm∂î©e
, 
pbôs
) {

52 
Com∂exFIR
 
BP
;

53 
EQ
 
a
 = (EQË
	`ß„Æloc
(1,  (
eq
), "newÉq state");

55 
BP
 = 
	`√wFIR_B™d∑ss_COMPLEX
(-6000.0, 6000.0, 
ßm∂î©e
, 257);

56 
a
->
p
 = 
	`√wFûtOvSv
(
BP
->
c€f
, 257, 
pbôs
);

57 
	`n‹mÆize_vec_COMPLEX
(
a
->
p
->
zfvec
,a->p->
f·Àn
,a->p->
sˇÀ
);

58 
a
->
ö
 = 
	`√wCXB
(256, 
	`FûtOvSv_„tchpoöt
◊->
p
), "EQ input CXB");

59 
a
->
out
 = 
	`√wCXB
(256, 
	`FûtOvSv_°‹ïoöt
◊->
p
), "EQ output CXB");

60 
a
->
d©a
 = 
d
;

61 
	`dñFIR_B™d∑ss_COMPLEX
(
BP
);

62 
	`mem£t
(
a
->
num
, 0, 9 *  (
COMPLEX
));

63 
	`mem£t
(
a
->
dí
, 0, 6 *  (
COMPLEX
));

64 
a
->
nŸchÊag
 = 
FALSE
;

65 i‡(
ßm∂î©e
 == 48000.0) {

66 
EQ_Num
[0]=
EQ_Num_48000
[0];

67 
EQ_Num
[1]=
EQ_Num_48000
[1];

68 
EQ_Num
[2]=
EQ_Num_48000
[2];

69 
EQ_Dí
[0]=
EQ_Dí_48000
[0];

70 
EQ_Dí
[1]=
EQ_Dí_48000
[1];

72 i‡(
ßm∂î©e
 == 96000.0) {

73 
EQ_Num
[0]=
EQ_Num_96000
[0];

74 
EQ_Num
[1]=
EQ_Num_96000
[1];

75 
EQ_Num
[2]=
EQ_Num_96000
[2];

76 
EQ_Dí
[0]=
EQ_Dí_96000
[0];

77 
EQ_Dí
[1]=
EQ_Dí_96000
[1];

79 i‡(
ßm∂î©e
 == 192000.0) {

80 
EQ_Num
[0]=
EQ_Num_192000
[0];

81 
EQ_Num
[1]=
EQ_Num_192000
[1];

82 
EQ_Num
[2]=
EQ_Num_192000
[2];

83 
EQ_Dí
[0]=
EQ_Dí_192000
[0];

84 
EQ_Dí
[1]=
EQ_Dí_192000
[1];

86  
a
;

87 
	}
}

90 
	$dñEQ
 (
EQ
 
a
) {

91 i‡(
a
) {

92 
	`dñCXB
(
a
->
ö
);

93 
	`dñCXB
(
a
->
out
);

94 
	`dñFûtOvSv
 (
a
->
p
);

95 
	`ß„‰ì
 ((*Ë
a
);

97 
	}
}

100 
	$gøphi˚q
 (
EQ
 
a
) {

101 
sigsize
 = 
	`CXBhave
 (
a
->
d©a
), 
sigidx
 = 0;

104 
	`mem˝y
(
	`CXBba£
(
a
->
ö
),

105 &
	`CXBd©a
(
a
->
d©a
, 
sigidx
),

106 256 *  (
COMPLEX
));

107 
	`fûãr_OvSv
(
a
->
p
);

108 
	`mem˝y
(&
	`CXBd©a
 (
a
->
d©a
, 
sigidx
),

109 
	`CXBba£
 (
a
->
out
),

110 256 *  (
COMPLEX
));

111 
sigidx
 += 256;

112 } 
sigidx
 < 
sigsize
);

113 i‡(
a
->
nŸchÊag
) {

114 
i
;

115 
i
 = 0; i < 
sigsize
; i++) {

116 
j
;

117 
j
 = 0; j < 3; j++) {

118 
COMPLEX
 
numfût
;

119 
k
 = 3 * 
j
,

120 
l
 = 2 * 
j
;

121 
a
->
num
[
k
] = 
	`CXBd©a
◊->
d©a
, 
i
);

122 
numfût
.
ª
 =

123 
a
->
num
[
k
].
ª
 * 
EQ_Num
[0] +

124 
a
->
num
[
k
 + 1].
ª
 * 
EQ_Num
[1] +

125 
a
->
num
[
k
 + 2].
ª
 * 
EQ_Num
[2];

126 
numfût
.
im
 =

127 
a
->
num
[
k
].
im
 * 
EQ_Num
[0] +

128 
a
->
num
[
k
 + 1].
im
 * 
EQ_Num
[1] +

129 
a
->
num
[
k
 + 2].
im
 * 
EQ_Num
[2];

130 
a
->
num
[
k
 + 2] =á->num[k + 1];

131 
a
->
num
[
k
 + 1] =á->num[k];

132 
	`CXBd©a
(
a
->
d©a
, 
i
) =

133 
	`Cm∂x
(
numfût
.
ª
 + 
a
->
dí
[
l
].ª * 
EQ_Dí
[0] +á->den[l + 1].re * EQ_Den[1],

134 
numfût
.
im
 + 
a
->
dí
[
l
].im * 
EQ_Dí
[0] +á->den[l + 1].im * EQ_Den[1]);

135 
a
->
dí
[
l
 + 1] =á->den[l];

136 
a
->
dí
[
l
] = 
	`CXBd©a
◊->
d©a
, 
i
);

140 
	}
}

	@graphiceq.h

55 #i‚de‡
_gøphi˚q_h


56 
	#_gøphi˚q_h


	)

58 
	~<d©©y≥s.h
>

59 
	~<bufvec.h
>

60 
	~<ovsv.h
>

61 
	~<fûãr.h
>

62 
	~<f·w3.h
>

63 
	~<f·w3_fix.h
>

65 
	s_eq
 {

66 
CXB
 
	md©a
;

67 
FûtOvSv
 
	mp
;

68 
CXB
 
	mö
, 
	mout
;

69 
COMPLEX
 
	mnum
[9], 
	mdí
[6];

70 
BOOLEAN
 
	mnŸchÊag
;

71 } 
	teq
, *
	tEQ
;

73 
EQ
 
√w_EQ
 (
CXB
 
d
, 
REAL
 
ßm∂î©e
, 
pbôs
);

74 
gøphi˚q
 (
EQ
 
a
);

	@hilbert.c

34 
	~<hûbît.h
>

38 
PRIVATE
 
REAL


39 
	gpﬁe
[12] = {

44 
Hûbît


45 
	$√wHûbît
(
CXB
 
ibuf
, CXB 
obuf
, 
REAL
 
øã
) {

46 
Hûbît
 
h
 = (HûbîtË
	`ß„Æloc
(1, (
HûbîtInfo
), "Hilbert Transformer");

47 
h
->
size
 = 
	`CXBsize
(
ibuf
);

48 
h
->
c
 = 
	`√wvec_REAL
(12, "Hilbert Transformer c vector");

49 
h
->
x1
 = 
	`√wvec_REAL
(12, "Hilbert Transformer x1 vector");

50 
h
->
y1
 = 
	`√wvec_REAL
(12, "Hilbert Transformer y1 vector");

52 
i
;

53 
i
 = 0; i < 12; i++) {

54 
REAL
 
u
 = (REAL)(
pﬁe
[
i
] * 
M_PI
 * 15.0 * 
øã
);

55 
h
->
c
[
i
] = (
REAL
)((
u
 - 1.0) / (u + 1.0));

56 
h
->
x1
[
i
] = h->
y1
[i] = 0.0;

59 
h
->
buf
.
i
 = 
	`√wCXB
(h->
size
, 
	`CXBba£
(
ibuf
), "Hilbert Transformer input buffer");

60 
h
->
buf
.
o
 = 
	`√wCXB
(h->
size
, 
	`CXBba£
(
obuf
), "Hilbert Transformer output buffer");

61  
h
;

62 
	}
}

64 
Hûsim


65 
	$√wHûbîtsim
(
CXB
 
ibuf
, CXB 
obuf
)

67 
Hûsim
 
h
;

68 
h
 = (
Hûsim
Ë
	`ß„Æloc
(1, (
HûsimInfo
), "Hilbert Transformer");

69 
h
->
size
 = 
	`CXBsize
(
ibuf
);

70 
h
->
buf
.
i
 = 
	`√wCXB
(h->
size
, 
	`CXBba£
(
ibuf
), "Hilbert Transformer input buffer");

71 
h
->
buf
.
o
 = 
	`√wCXB
(h->
size
, 
	`CXBba£
(
obuf
), "Hilbert Transformer output buffer");

72 
	`mem£t
(
h
->
d
,0,(
REAL
)*6);

73 
	`mem£t
(
h
->
y
,0,(
REAL
)*6);

74 
	`mem£t
(
h
->
x
,0,(
REAL
)*4);

75 
h
->
övît
 = 
TRUE
;

76  
h
;

77 
	}
}

79 
	$dñHûbît
(
Hûbît
 
h
) {

80 i‡(
h
) {

81 
	`dñvec_REAL
(
h
->
c
);

82 
	`dñvec_REAL
(
h
->
x1
);

83 
	`dñvec_REAL
(
h
->
y1
);

84 
	`dñCXB
(
h
->
buf
.
i
);

85 
	`dñCXB
(
h
->
buf
.
o
);

86 
	`ß„‰ì
((*Ë
h
);

88 
	}
}

90 
	$dñHûsim
(
Hûsim
 
h
)

92 i‡(
h
) {

93 
	`dñCXB
(
h
->
buf
.
i
);

94 
	`dñCXB
(
h
->
buf
.
o
);

95 
	`ß„‰ì
((*)
h
);

97 
	}
}

100 
	$hûbît_å™sf‹m
(
Hûbît
 
h
) {

101 
REAL
 
xn1
, 
xn2
, 
yn1
, 
yn2
;

102 
i
;

104 
i
 = 0; i < 
h
->
size
; i++) {

105 
j
;

107 
xn1
 = 
xn2
 = 
	`CXBªÆ
(
h
->
buf
.
i
, i);

109 
j
 = 0; j < 6; j++) {

110 
yn1
 = 
h
->
c
[
j
] * (
xn1
 - h->
y1
[j]Ë+ h->
x1
[j];

111 
h
->
x1
[
j
] = 
xn1
;

112 
h
->
y1
[
j
] = 
yn1
;

113 
xn1
 = 
yn1
;

116 
j
 = 6; j < 12; j++) {

117 
yn2
 = 
h
->
c
[
j
] * (
xn2
 - h->
y1
[j]Ë+ h->
x1
[j];

118 
h
->
x1
[
j
] = 
xn2
;

119 
h
->
y1
[
j
] = 
yn2
;

120 
xn2
 = 
yn2
;

123 
	`CXBd©a
(
h
->
buf
.
o
, 
i
Ë
	`Cm∂x
(
yn2
, 
yn1
);

125 
	}
}

128 
	$hûsim_å™sf‹m
(
Hûsim
 
h
) {

129 
REAL
 *
x
 = 
h
->x,

130 *
y
 = 
h
->y,

131 *
d
 = 
h
->d;

132 
i
;

134 
i
 = 0; i < 
h
->
size
; i++)

136 
REAL
 
xö
 = 
	`CXBªÆ
(
h
->
buf
.
i
, i);

138 
x
[0] = 
d
[1] - 
xö
;

139 
x
[1] = 
d
[0] - x[0] * 0.00196f;

140 
x
[2] = 
d
[3] - x[1];

141 
x
[3] = 
d
[1] + x[2] * 0.737f;

143 
d
[1] = 
x
[1];

144 
d
[3] = 
x
[3];

146 
y
[0] = 
d
[2] - 
xö
;

147 
y
[1] = 
d
[0] + y[0] * 0.924f;

148 
y
[2] = 
d
[4] - y[1];

149 
y
[3] = 
d
[2] + y[2] * 0.439f;

150 
y
[4] = 
d
[5] - y[3];

151 
y
[5] = 
d
[4] - y[4] * 0.586f;

153 
d
[2] = 
y
[1];

154 
d
[4] = 
y
[3];

155 
d
[5] = 
y
[5];

157 
d
[0] = 
xö
;

159 
	`CXBd©a
(
h
->
buf
.
o
, 
i
Ë
	`Cm∂x
(
x
[3], 
y
[5]);

161 
	}
}

	@hilbert.h

34 #i‚de‡
_hûbît_h


35 
	#_hûbît_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<d©©y≥s.h
>

40 
	~<bufvec.h
>

41 
	~<cx›s.h
>

44 
	s_hûbît
 {

45 
	msize
;

46 
REAL
 *
	mc
, *
	mx1
, *
	my1
;

48 
CXB
 
	mi
, 
	mo
;

49 } 
	mbuf
;

50 
BOOLEAN
 
	mövît
;

51 } 
	tHûbîtInfo
, *
	tHûbît
;

54 
	s_hûsim
 {

55 
	msize
;

57 
CXB
 
	mi
, 
	mo
;

58 } 
	mbuf
;

59 
REAL
 
	mx
[4], 
	my
[6], 
	md
[6];

60 
BOOLEAN
 
	mövît
;

61 } 
	tHûsimInfo
, *
	tHûsim
;

63 
Hûbît
 
√wHûbît
(
CXB
 
ibuf
, CXB 
obuf
, 
REAL
 
øã
);

64 
Hûsim
 
√wHûbîtsim
(
CXB
 
ibuf
, CXB 
obuf
);

65 
dñHûbît
(
Hûbît
 
h
);

66 
dñHûsim
(
Hûsim
 
h
);

67 
hûbît_å™sf‹m
(
Hûbît
 
h
);

71 
hûsim_å™sf‹m
(
Hûsim
 
h
);

	@iosdr.h

1 
wrôe
 (, *, );

	@isoband.c

36 
	~<isob™d.h
>

39 
	s_ISOb™d_t
 {

40 
REAL
 
	mnomöÆ
, 
	mexa˘
, 
	mlow
, 
	mhigh
;

41 } 
	tISOb™d_t
;

44 
ISOb™d_t
 
	g_ISOb™d_öfo
[] = {

90 
PRIVATE
 
INLINE
 
ISOb™d_t
 *

91 
	$ISOb™d_gë_öfo
(
b™d
) {

92 i‡(
b™d
 < 1 || band > 43) {

93 
	`Ârötf
(
°dîr
, "ISO: b™d index ouào‡øngê(%d)\n", 
b™d
);

94 
	`exô
(1);

96  &
_ISOb™d_öfo
[
b™d
 - 1];

97 
	}
}

99 
REAL


100 
	$ISOb™d_gë_nomöÆ
(
b™d
) {

101  
	`ISOb™d_gë_öfo
(
b™d
)->
nomöÆ
;

102 
	}
}

104 
REAL


105 
	$ISOb™d_gë_exa˘
(
b™d
) {

106  
	`ISOb™d_gë_öfo
(
b™d
)->
exa˘
;

107 
	}
}

109 
REAL


110 
	$ISOb™d_gë_low
(
b™d
) {

111  
	`ISOb™d_gë_öfo
(
b™d
)->
low
;

112 
	}
}

114 
REAL


115 
	$ISOb™d_gë_high
(
b™d
) {

116  
	`ISOb™d_gë_öfo
(
b™d
)->
high
;

117 
	}
}

	@isoband.h

34 #i‚de‡
_isob™d_h


35 
	#_isob™d_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<d©©y≥s.h
>

40 
	~<b™Æ.h
>

42 
REAL
 
ISOb™d_gë_nomöÆ
(
b™d
),

43 
ISOb™d_gë_exa˘
(
b™d
),

44 
ISOb™d_gë_low
(
b™d
),

45 
ISOb™d_gë_high
(
b™d
);

	@keyd.c

35 
	~<‰omsys.h
>

36 
	~<b™Æ.h
>

37 
	~<•lôfõlds.h
>

38 
	~<d©©y≥s.h
>

39 
	~<bufvec.h
>

40 
	~<cx›s.h
>

41 
	~<rögb.h
>

42 
	~<oscûœt‹.h
>

43 
	~<cwt⁄es.h
>

44 
	~<±hªad.h
>

45 
	~<£m≠h‹e.h
>

46 
	~<keyî.h
>

49 
	~<•Ÿt⁄e.h
>

50 
	~<sdªxp‹t.h
>

52 
	#MMRESULT
 

	)

53 
	#UINT
 

	)

54 
	#BOOL
 

	)

55 
	#PRIVATE


	)

56 
	#CRITICAL_SECTION
 
±hªad_muãx_t


	)

57 
	#LPCRITICAL_SECTION
 
±hªad_muãx_t


	)

58 
	#E¡îCrôiˇlSe˘i⁄
(
t
Ë
	`±hªad_muãx_lock
—)

	)

59 
	#LóveCrôiˇlSe˘i⁄
(
t
Ë
	`±hªad_muãx_u∆ock
—)

	)

60 
	#InôülizeCrôiˇlSe˘i⁄AndSpöCou¡
(
t
,
c
Ë
	`±hªad_muãx©å_£ây≥
(&
muãx©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

61 
	`±hªad_muãx_öô
(
t
, &
muãx©å
); \

62 
	`±hªad_muãx©å_de°roy
(&
muãx©å
)

	)

63 
	#DñëeCrôiˇlSe˘i⁄
(
t
Ë
	`±hªad_muãx_de°roy
 (t);

	)

66 
	#timeKûlEvít
(
e
)

	)

68 
±hªad_muãx©å_t
 
	gmuãx©å
;

70 
±hªad_t
 
	gtimîid
;

73 
PRIVATE
 
CRITICAL_SECTION
 
	gCS_CW
,
	gUPDATE_OK
;

74 
PRIVATE
 
LPCRITICAL_SECTION
 *
	gcs_cw
, *
	gupd©e_ok
;

76 
REAL
 
	gSAMP_RATE
 = 48000.0;

79 
	gkey_pﬁl_≥riod
 = 1;

81 
BOOLEAN
 
	gHiPîf‹m™˚
 = 
FALSE
;

85 
	gTONE_SIZE
 = 48;

86 
	gSIZEBUF
 = 768;

90 
	#RING_SIZE
 8192

	)

93 
KeyîSèã
 
	gks
;

94 
KeyîLogic
 
	gkl
;

96 
±hªad_t
 
	g∂ay
, 
	gkey
, 
	gtimî
;

97 
£m_t
 
	g˛ock_fúed
, 
	gkeyî_°¨ãd
, 
	gpﬁl_fúed
;

99 
rögb_Êﬂt_t
 *
	gÃög
, *
	gºög
;

102 
CWT⁄eGí
 
	ggí
;

103 
BOOLEAN
 
	g∂ayög
 = 
FALSE
, 
	gümbic
 = FALSE, 
	gbug
 = FALSE,

104 
	gcw_rög_ª£t
 = 
FALSE
;

105 
REAL
 
	gwpm
 = 18.0, 
	g‰eq
 = 600.0, 
	gømp
 = 5.0, 
	ggaö
 = 0.0;

111 * 
	$timî_thªad
(* 
¨g
) {

113 
	`¶ìp
(
key_pﬁl_≥riod
);

114 
	`timî_ˇŒback
();

116 
	}
}

121 
DâSP_EXP
 

122 
	$CWt⁄eExch™ge
 (*
buÊ
, *
bu‰
, 
n‰ames
)

124 
size_t
 
numßmps
, 
byãsize
 =  (Ë* 
n‰ames
;

126 i‡(
cw_rög_ª£t
)

129 
size_t
 
ª£t_size
 = ()
n‰ames
;

130 
cw_rög_ª£t
 = 
FALSE
;

131 
	`E¡îCrôiˇlSe˘i⁄
 (
cs_cw
);

132 
	`rögb_Êﬂt_ª°¨t
 (
Ãög
, 
ª£t_size
);

133 
	`rögb_Êﬂt_ª°¨t
 (
ºög
, 
ª£t_size
);

136 
	`mem£t
 (
buÊ
, 0, 
byãsize
);

137 
	`mem£t
 (
bu‰
, 0, 
byãsize
);

138 
	`LóveCrôiˇlSe˘i⁄
 (
cs_cw
);

141 i‡((
numßmps
 = 
	`rögb_Êﬂt_ªad_•a˚
 (
Ãög
)Ë< (
size_t
Ë
n‰ames
)

144 
	`mem£t
 (
buÊ
, 0, 
byãsize
);

145 
	`mem£t
 (
bu‰
, 0, 
byãsize
);

146 
cw_rög_ª£t
 = 
TRUE
;

151 
	`E¡îCrôiˇlSe˘i⁄
 (
cs_cw
);

152 
	`rögb_Êﬂt_ªad
 (
Ãög
, 
buÊ
, 
n‰ames
);

153 
	`rögb_Êﬂt_ªad
 (
ºög
, 
bu‰
, 
n‰ames
);

154 
	`LóveCrôiˇlSe˘i⁄
 (
cs_cw
);

156 
	}
}

160 
	$£nd_t⁄e
 ()

163 i‡(
	`rögb_Êﬂt_wrôe_•a˚
 (
Ãög
Ë< 
TONE_SIZE
)

165 
cw_rög_ª£t
 = 
TRUE
;

170 
i
;

171 
	`E¡îCrôiˇlSe˘i⁄
 (
cs_cw
);

172 
	`c‹ª˘IQ
(
gí
->
buf
, 
tx
[1].
iqfix
, 
TRUE
, 0);

173 
i
 = 0; i < 
gí
->
size
; i++)

175 
r
 = (Ë
	`CXBªÆ
 (
gí
->
buf
, 
i
),

176 
l
 = (Ë
	`CXBimag
 (
gí
->
buf
, 
i
);

177 
	`rögb_Êﬂt_wrôe
 (
Ãög
, (*Ë&
l
, 1);

178 
	`rögb_Êﬂt_wrôe
 (
ºög
, (*Ë&
r
, 1);

180 
	`LóveCrôiˇlSe˘i⁄
 (
cs_cw
);

182 
	}
}

186 
	$£nd_sûí˚
 ()

189 i‡(
	`rögb_Êﬂt_wrôe_•a˚
 (
Ãög
Ë< 
TONE_SIZE
)

191 
cw_rög_ª£t
 = 
TRUE
;

196 
i
;

197 
	`E¡îCrôiˇlSe˘i⁄
 (
cs_cw
);

198 
i
 = 0; i < 
gí
->
size
; i++)

200 
zîo
 = 0.0;

201 
	`rögb_Êﬂt_wrôe
 (
Ãög
, &
zîo
, 1);

202 
	`rögb_Êﬂt_wrôe
 (
ºög
, &
zîo
, 1);

204 
	`LóveCrôiˇlSe˘i⁄
 (
cs_cw
);

206 
	}
}

214 
	$timî_ˇŒback
 ()

216 
	`£m_po°
 (&
pﬁl_fúed
);

217 
	}
}

221 
DâSP_EXP
 

222 
	$sound_thªad_keyd
 ()

226 
	`£m_waô
 (&
˛ock_fúed
);

228 i‡(
∂ayög
)

233 
∂ayög
 = 
	`CWT⁄e
 (
gí
);

234 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

235 
	`£nd_t⁄e
 ();

236 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

240 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

241 
	`£nd_sûí˚
 ();

243 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

247 
	`±hªad_exô
 (0);

248 
	}
}

251 
BOOLEAN


252 
	$ªad_key
 (
REAL
 
dñ
, 
BOOLEAN
 
dŸ
, BOOLEAN 
dash
)

254 
BOOLEAN
 
	`ªad_°øight_key
 (
KeyîSèã
 
ks
, BOOLEAN 
keyed
);

255 
BOOLEAN
 
	`ªad_ümbic_key
 (
KeyîSèã
 
ks
, BOOLEAN 
dŸ
,

256 
BOOLEAN
 
dash
, 
KeyîLogic
 
kl
, 
REAL
 
tickÀn
);

258 i‡(
bug
)

260 i‡(
dash
)

261  
	`ªad_°øight_key
 (
ks
, 
dash
);

263  
	`ªad_ümbic_key
 (
ks
, 
dŸ
, 
FALSE
, 
kl
, 
dñ
);

265 i‡(
ümbic
)

266  
	`ªad_ümbic_key
 (
ks
, 
dŸ
, 
dash
, 
kl
, 
dñ
);

267  
	`ªad_°øight_key
 (
ks
, 
dŸ
 | 
dash
);

268 
	}
}

271 
BOOLEAN
 
	gdŸkey
 = 
FALSE
;

272 
PRIVATE
 
BOOLEAN
 
INLINE


273 
	$whichkey
 (
BOOLEAN
 
dŸ
, BOOLEAN 
dash
)

275 i‡(
dŸkey
)

276  
dŸ
;

277  
dash
;

278 
	}
}

280 
DâSP_EXP
 

281 
	$SëWhichKey
 (
BOOLEAN
 
isdŸ
)

283 i‡(
isdŸ
)

284 
dŸkey
 = 
TRUE
;

286 
dŸkey
 = 
FALSE
;

287 
	}
}

289 
DâSP_EXP
 

290 
	$key_thªad_¥o˚ss
 (
REAL
 
dñ
, 
BOOLEAN
 
dash
, BOOLEAN 
dŸ
, BOOLEAN 
key¥og
)

292 
BOOLEAN
 
keydown
;

293 
BOOLEAN
 
	`ªad_°øight_key
 (
KeyîSèã
 
ks
, BOOLEAN 
keyed
);

296 i‡(!
key¥og
)

297 
keydown
 = 
	`ªad_key
 (
dñ
, 
dŸ
, 
dash
);

299 
keydown
 = 
	`ªad_°øight_key
 (
ks
, 
	`whichkey
 (
dŸ
, 
dash
));

301 i‡(!
∂ayög
 && 
keydown
)

302 
	`CWT⁄eOn
 (
gí
), 
∂ayög
 = 
TRUE
;

303 i‡(
∂ayög
 && !
keydown
)

304 
	`CWT⁄eOff
 (
gí
);

306 
	`£m_po°
 (&
˛ock_fúed
);

307 
	}
}

309 
DâSP_EXP
 
BOOLEAN


310 
	$KeyîPœyög
 ()

312  
∂ayög
;

313 
	}
}

318 
DâSP_EXP
 

319 
	$SëKeyîBug
 (
BOOLEAN
 
bg
)

321 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

322 i‡(
bg
)

324 
ümbic
 = 
FALSE
;

325 
ks
->
Êag
.
mdlmdB
 = 
FALSE
;

326 
ks
->
Êag
.
mem‹y
.
dah
 = 
FALSE
;

327 
ks
->
Êag
.
mem‹y
.
dô
 = 
FALSE
;

328 
bug
 = 
TRUE
;

331 
bug
 = 
FALSE
;

332 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

333 
	}
}

335 
DâSP_EXP
 

336 
	$SëKeyîS≥ed
 (
REAL
 
•ìd
)

338 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

339 
wpm
 = 
ks
->wpm = 
•ìd
;

340 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

341 
	}
}

343 
DâSP_EXP
 

344 
	$SëKeyîWeight
 (
√wweight
)

346 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

347 
ks
->
weight
 = 
√wweight
;

348 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

349 
	}
}

351 
DâSP_EXP
 

352 
	$SëKeyîIambic
 (
BOOLEAN
 
£tô
)

354 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

355 i‡(
£tô
)

357 
ümbic
 = 
TRUE
;

358 
ks
->
Êag
.
mdlmdB
 = 
TRUE
;

359 
ks
->
Êag
.
mem‹y
.
dah
 = 
TRUE
;

360 
ks
->
Êag
.
mem‹y
.
dô
 = 
TRUE
;

364 
ümbic
 = 
FALSE
;

365 
ks
->
Êag
.
mdlmdB
 = 
FALSE
;

366 
ks
->
Êag
.
mem‹y
.
dah
 = 
FALSE
;

367 
ks
->
Êag
.
mem‹y
.
dô
 = 
FALSE
;

369 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

370 
	}
}

372 
DâSP_EXP
 

373 
	$SëKeyîFªq
 (
REAL
 
√w‰eq
)

375 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

376 
‰eq
 = -
√w‰eq
;

377 
	`£tCWT⁄eGíVÆs
 (
gí
, 
gaö
, 
‰eq
, 
ømp
,Ñamp);

378 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

379 
	}
}

381 
DâSP_EXP
 

382 
	$SëKeyîGaö
 (
REAL
 
√wgaö
)

384 i‡((
√wgaö
 >= 0.0) && (newgain <= 1.0))

386 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

387 
gaö
 = (
REAL
Ë(20.0 * 
	`log10
 (
√wgaö
));

388 
	`£tCWT⁄eGíVÆs
 (
gí
, 
gaö
, 
‰eq
, 
ømp
,Ñamp);

389 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

391 
	}
}

393 
DâSP_EXP
 

394 
	$SëKeyîRamp
 (
REAL
 
√wømp
)

396 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

397 
ømp
 = 
√wømp
;

398 
	`£tCWT⁄eGíVÆs
 (
gí
, 
gaö
, 
‰eq
, 
ømp
,Ñamp);

399 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

400 
	}
}

402 
DâSP_EXP
 

403 
	$SëKeyîMode
 (
√wmode
)

405 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

406 
√wmode
)

409 
ks
->
mode
 = 
MODE_A
;

410 
ks
->
Êag
.
mdlmdB
 = 
FALSE
;

413 
ks
->
mode
 = 
MODE_B
;

414 
ks
->
Êag
.
mdlmdB
 = 
TRUE
;

417 
ümbic
 = 
FALSE
;

420 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

421 
	}
}

423 
DâSP_EXP
 

424 
	$SëKeyîDeBoun˚
 (
db
)

426 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

427 
ks
->
deboun˚
 = 
db
;

428 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

429 
	}
}

431 
DâSP_EXP
 

432 
	$SëKeyîRevPdl
 (
BOOLEAN
 
rvp
)

434 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

435 
ks
->
Êag
.
ªvpdl
 = !
rvp
;

436 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

437 
	}
}

452 
DâSP_EXP
 

453 
	$SëKeyîPîf
 (
BOOLEAN
 
hùîf
)

455 
rc
;

456 
±hªad_t
 
tmp_timî
;

458 
tmp_timî
 = 
timîid
;

459 i‡(
timîid
 != 0)

461 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

462 
	`timeKûlEvít
 ((
UINT
Ë
timîid
);

463 
timîid
 = 0;

464 
	`¶ìp
 (11);

465 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

467 
	`dñCWT⁄eGí
 (
gí
);

468 i‡(
hùîf
)

470 
HiPîf‹m™˚
 = 
TRUE
;

471 
key_pﬁl_≥riod
 = 1;

472 
TONE_SIZE
 = 48;

476 
HiPîf‹m™˚
 = 
FALSE
;

477 
key_pﬁl_≥riod
 = 5;

478 
TONE_SIZE
 = 240;

480 
gí
 = 
	`√wCWT⁄eGí
 (
gaö
, 
‰eq
, 
ømp
,Ñamp, 
TONE_SIZE
, 
SAMP_RATE
);

481 i‡(
tmp_timî
 != 0)

483 #i‚de‡
INTERLEAVED


484 
	`E¡îCrôiˇlSe˘i⁄
(
cs_cw
);

485 
	`rögb_Êﬂt_ª°¨t
 (
Ãög
, 
SIZEBUF
);

486 
	`rögb_Êﬂt_ª°¨t
 (
ºög
, 
SIZEBUF
);

487 
	`LóveCrôiˇlSe˘i⁄
(
cs_cw
);

489 
	`rögb_Êﬂt_ª°¨t
 (
Ãög
, 
SIZEBUF
);

491 
rc
=
	`±hªad_¸óã
(&
timîid
,
NULL
,
timî_thªad
,NULL);

496 if(
rc
!=0)

497 
	`Ârötf
 (
°dîr
, "Timî faûed\n"), 
	`fÊush
 (stderr);

499 
	}
}

501 
DâSP_EXP
 

502 
	$NewKeyî
 (
REAL
 
‰eq
, 
BOOLEAN
 
nümbic
, REAL 
gaö
, REAL 
ømp
, REAL 
wpm
,

503 
REAL
 
Sam∂eR©e
)

505 
BOOL
 
out
;

507 
kl
 = 
	`√wKeyîLogic
 ();

508 
ks
 = 
	`√wKeyîSèã
 ();

509 
ks
->
Êag
.
ümbic
 = 
nümbic
;

510 
ks
->
Êag
.
ªvpdl
 = 
TRUE
;

511 
ks
->
Êag
.
auto•a˚
.
kh¨
 = ks->Êag.auto•a˚.
w‹d
 = 
FALSE
;

512 
ks
->
Êag
.
mdlmdB
 = 
TRUE
;

513 
ks
->
Êag
.
mem‹y
.
dah
 = 
TRUE
;

514 
ks
->
Êag
.
mem‹y
.
dô
 = 
TRUE
;

515 
ks
->
deboun˚
 = 1;

516 
ks
->
mode
 = 
MODE_B
;

517 
ks
->
weight
 = 50;

518 
ks
->
wpm
 = wpm;

519 
ümbic
 = 
nümbic
;

520 
cs_cw
 = &
CS_CW
;

521 
out
 = 
	`InôülizeCrôiˇlSe˘i⁄AndSpöCou¡
 (
cs_cw
, 0x00000080);

522 
upd©e_ok
 = &
UPDATE_OK
;

523 
out
 = 
	`InôülizeCrôiˇlSe˘i⁄AndSpöCou¡
 (
upd©e_ok
, 0x00000080);

524 #i‚de‡
INTERLEAVED


525 
Ãög
 = 
	`rögb_Êﬂt_¸óã
 (
RING_SIZE
);

526 
ºög
 = 
	`rögb_Êﬂt_¸óã
 (
RING_SIZE
);

528 
Ãög
 = 
	`rögb_Êﬂt_¸óã
 (2 * 
RING_SIZE
);

530 
	`£m_öô
 (&
˛ock_fúed
, 0, 0);

531 
	`£m_öô
 (&
pﬁl_fúed
, 0, 0);

532 
	`£m_öô
 (&
keyî_°¨ãd
, 0, 0);

533 i‡(
HiPîf‹m™˚
)

535 
key_pﬁl_≥riod
 = 1;

536 
TONE_SIZE
 = 48 * (Ë(
uni
[0].
ßm∂î©e
 / 48000.0);

540 
key_pﬁl_≥riod
 = 5;

541 
TONE_SIZE
 = 240 * (Ë(
uni
[0].
ßm∂î©e
 / 48000.0);

544 
SAMP_RATE
 = 
Sam∂eR©e
;

545 
	`dñCWT⁄eGí
(
gí
);

546 
gí
 = 
	`√wCWT⁄eGí
 (
gaö
, 
‰eq
, 
ømp
,Ñamp, 
TONE_SIZE
, 
Sam∂eR©e
);

552 
	}
}

571 
DâSP_EXP
 

572 
	$CWRögRe°¨t
 ()

574 
cw_rög_ª£t
 = 
TRUE
;

576 
	}
}

578 
DâSP_EXP
 

579 
	$SèπKeyî
 ()

581 
rc
;

583 
	`CWRögRe°¨t
();

584 
rc
=
	`±hªad_¸óã
(&
timîid
,
NULL
,
timî_thªad
,NULL);

585 if(
rc
!=0)

590 
	`Ârötf
 (
°dîr
, "Timî faûed\n"), 
	`fÊush
 (stderr);

591 } 
	`£m_po°
 (&
keyî_°¨ãd
);

592 
	}
}

594 
DâSP_EXP
 

595 
	$St›Keyî
 ()

598 
	`E¡îCrôiˇlSe˘i⁄
(
upd©e_ok
);

599 i‡(
timîid
)

600 
	`timeKûlEvít
 ((
UINT
Ë
timîid
);

601 
	`LóveCrôiˇlSe˘i⁄
(
upd©e_ok
);

602 
timîid
 = 0;

603 
	}
}

605 
DâSP_EXP
 
BOOLEAN


606 
	$KeyîRu¬ög
 ()

608  (
timîid
 != 0);

609 
	}
}

611 
DâSP_EXP
 

612 
	$DñëeKeyî
 ()

614 
	`St›Keyî
();

617 
	`£m_de°roy
 (&
˛ock_fúed
);

622 
	`£m_de°roy
 (&
pﬁl_fúed
);

627 
	`£m_de°roy
 (&
keyî_°¨ãd
);

630 
	`dñCWT⁄eGí
 (
gí
);

631 
	`dñKeyîSèã
 (
ks
);

632 
	`dñKeyîLogic
 (
kl
);

633 #i‚de‡
INTERLEAVED


634 
	`rögb_Êﬂt_‰ì
 (
Ãög
);

635 
	`rögb_Êﬂt_‰ì
 (
ºög
);

637 
	`rögb_Êﬂt_‰ì
 (
Ãög
);

639 i‡(
cs_cw
)

641 
	`DñëeCrôiˇlSe˘i⁄
 (
cs_cw
);

642 
cs_cw
 = 
NULL
;

644 
	}
}

646 
DâSP_EXP
 

647 
	$KeyîClockFúeWaô
 ()

649 
	`£m_waô
 (&
˛ock_fúed
);

650 
	}
}

652 
DâSP_EXP
 

653 
	$KeyîClockFúeRñó£
 ()

655 
	`£m_po°
 (&
˛ock_fúed
);

656 
	}
}

658 
DâSP_EXP
 

659 
	$KeyîSèπedWaô
 ()

661 
	`£m_waô
 (&
keyî_°¨ãd
);

662 
	}
}

664 
DâSP_EXP
 

665 
	$KeyîSèπedRñó£
 ()

667 
	`£m_po°
 (&
keyî_°¨ãd
);

668 
	}
}

670 
DâSP_EXP
 

671 
	$PﬁlTimîWaô
 ()

673 
	`£m_waô
 (&
pﬁl_fúed
);

674 
	}
}

676 
DâSP_EXP
 

677 
	$PﬁlTimîRñó£
 ()

679 
	`£m_po°
 (&
pﬁl_fúed
);

680 
	}
}

682 
DâSP_EXP
 

683 
	$SëKeyîRe£tSize
 (
sizî
)

685 
SIZEBUF
 = 
sizî
;

686 
cw_rög_ª£t
 = 
TRUE
;

688 
	}
}

690 
DâSP_EXP
 

691 
	$SëKeyîSam∂eR©e
 (
REAL
 
§
)

693 
Á˘‹
 = (Ë(
§
 / 48000.0f);

695 i‡(
HiPîf‹m™˚
)

697 
key_pﬁl_≥riod
 = 1;

698 
TONE_SIZE
 = 48 * 
Á˘‹
;

702 
key_pﬁl_≥riod
 = 5;

703 
TONE_SIZE
 = 240 * 
Á˘‹
;

705 
SIZEBUF
 = 768 * 
Á˘‹
;

707 
	`dñCWT⁄eGí
 (
gí
);

708 
gí
 = 
	`√wCWT⁄eGí
 (
gaö
, 
‰eq
, 
ømp
,Ñamp, 
TONE_SIZE
, 
§
);

709 
	}
}

	@keyer.c

43 
	~<keyî.h
>

48 
BOOLEAN


49 
	$klogic
 (
KeyîLogic
 
kl
,

50 
BOOLEAN
 
dô
,

51 
BOOLEAN
 
dah
,

52 
REAL
 
wpm
,

53 
ümbicmode
,

54 
BOOLEAN
 
midñemítmodeB
,

55 
BOOLEAN
 
dômem‹y
,

56 
BOOLEAN
 
dahmem‹y
,

57 
BOOLEAN
 
autoch¨•acög
,

58 
BOOLEAN
 
autow‹d•acög
, 
weight
, 
REAL
 
tickÀn
)

60 
REAL
 
dôÀn
 = 1200 / 
wpm
;

61 
£t_ñemít_timeouts
 = 
NO_TIMEOUTS_SCHED
;

64 i‡(!
kl
->
Êag
.
öô
)

66 
kl
->
Êag
.
¥ev
.
dô
 = dit;

67 
kl
->
Êag
.
¥ev
.
dah
 = dah;

68 
kl
->
ñemít
.
œ°
 = kl->ñemít.
cuº
 = 
NO_ELEMENT
;

69 
kl
->
ñemít
.
ümb
 = 
NO_PADDLE_SQUEEZE
;

70 
kl
->
ñemít
.
psqam
 = 0;

71 
kl
->
ñemít
.
övtd
 = 0;

72 
kl
->
timeout
.
midl
 = kl->timeout.
bìp
 = kl->timeout.
ñem
 = 0;

73 
kl
->
timeout
.
dœy
 = 0;

74 
kl
->
dœy_ty≥
 = 
NO_DELAY
;

75 
kl
->
Êag
.
öô
 = 1;

79 
kl
->
timeout
.
dœy
 -(kl->timeout.dœy > 0 ? 
tickÀn
 : 0);

80 i‡(
kl
->
timeout
.
dœy
 <= 0)

86 i‡(
kl
->
timeout
.
ñem
 <= 0 &&

87 
kl
->
dœy_ty≥
 =
CHAR_SPACING_DELAY
 && 
autow‹d•acög
)

89 
kl
->
timeout
.
dœy
 = 
dôÀn
 * 4;

90 
kl
->
dœy_ty≥
 = 
WORD_SPACING_DELAY
;

94 
kl
->
dœy_ty≥
 = 
NO_DELAY
;

95 
kl
->
timeout
.
midl
 -kl->timeout.mid»> 0 ? 
tickÀn
 : 0;

96 
kl
->
timeout
.
bìp
 -kl->timeout.bì∞> 0 ? 
tickÀn
 : 0;

97 
kl
->
timeout
.
ñem
 -kl->timeout.ñem > 0 ? 
tickÀn
 : 0;

102 i‡(
dô
 && 
dah
)

104 
kl
->
ñemít
.
ümb
 = 
PADDLES_SQUEEZED
;

107 i‡(
kl
->
timeout
.
midl
 <= 0)

108 
kl
->
ñemít
.
psqam
 = 1;

112 i‡(!
dô
 && !
dah
 && 
kl
->
ñemít
.
ümb
 =
PADDLES_SQUEEZED
)

113 
kl
->
ñemít
.
ümb
 = 
PADDLES_RELEASED
;

116 i‡(
kl
->
timeout
.
ñem
 <0 && kl->
ñemít
.
cuº
 !
NO_ELEMENT
)

118 
kl
->
ñemít
.
œ°
 = kl->ñemít.
cuº
;

121 i‡((
dô
 && 
dah
) ||

122 (
kl
->
ñemít
.
övtd
 && kl->ñemít.
ümb
 !
PADDLES_RELEASED
) ||

123 (
kl
->
ñemít
.
ümb
 =
PADDLES_RELEASED
 && 
ümbicmode
 =
MODE_B
 && (!
midñemítmodeB
 || kl->ñemít.
psqam
)))

125 i‡(
kl
->
ñemít
.
œ°
 =
DAH
)

126 
£t_ñemít_timeouts
 = 
kl
->
ñemít
.
cuº
 = 
DIT
;

128 
£t_ñemít_timeouts
 = 
kl
->
ñemít
.
cuº
 = 
DAH
;

133 
kl
->
ñemít
.
cuº
 = 
NO_ELEMENT
;

136 i‡(
autoch¨•acög
 && !
dô
 && !
dah
)

138 
kl
->
timeout
.
dœy
 = 
dôÀn
 * 2;

139 
kl
->
dœy_ty≥
 = 
CHAR_SPACING_DELAY
;

143 
kl
->
ñemít
.
övtd
 = 0;

144 
kl
->
ñemít
.
ümb
 = 
NO_PADDLE_SQUEEZE
;

145 
kl
->
ñemít
.
psqam
 = 0;

149 i‡(
kl
->
ñemít
.
cuº
 =
NO_ELEMENT
)

151 i‡(
dah
)

152 
£t_ñemít_timeouts
 = 
kl
->
ñemít
.
cuº
 = 
DAH
;

153 i‡(
dô
)

154 
£t_ñemít_timeouts
 = 
kl
->
ñemít
.
cuº
 = 
DIT
;

158 i‡(
kl
->
ñemít
.
cuº
 =
DIT
 && !kl->
Êag
.
¥ev
.
dah
 && dah && 
dahmem‹y
)

159 
kl
->
ñemít
.
övtd
 = 1;

162 i‡(
kl
->
ñemít
.
cuº
 =
DAH
 && !kl->
Êag
.
¥ev
.
dô
 && dô && 
dômem‹y
)

163 
kl
->
ñemít
.
övtd
 = 1;

169 i‡(
kl
->
timeout
.
dœy
 > 0 &&

170 !
dô
 &&

171 !
dah
 &&

172 ((
kl
->
ñemít
.
cuº
 =
DIT
 &&

173 !
dômem‹y
Ë|| (
kl
->
ñemít
.
cuº
 =
DAH
 && !
dahmem‹y
)))

174 
£t_ñemít_timeouts
 = 
kl
->
ñemít
.
cuº
 = 
NO_ELEMENT
;

177 
£t_ñemít_timeouts
)

179 
NO_ELEMENT
:

180 
kl
->
timeout
.
bìp
 = 0;

181 
kl
->
timeout
.
midl
 = 0;

182 
kl
->
timeout
.
ñem
 = 0;

185 
DIT
:

186 
kl
->
timeout
.
bìp
 = (
dôÀn
 * (
REAL
Ë
weight
) / 50;

187 
kl
->
timeout
.
midl
 = kl->timeout.
bìp
 / 2;

188 
kl
->
timeout
.
ñem
 = 
dôÀn
 * 2;

191 
DAH
:

192 
kl
->
timeout
.
bìp
 = (
dôÀn
 * (
REAL
Ë
weight
) / 50 + ditlen * 2;

193 
kl
->
timeout
.
midl
 = kl->timeout.
bìp
 / 2;

194 
kl
->
timeout
.
ñem
 = 
dôÀn
 * 4;

198 
kl
->
Êag
.
¥ev
.
dô
 = dit;

199 
kl
->
Êag
.
¥ev
.
dah
 = dah;

201  
kl
->
timeout
.
bìp
 > 0 && kl->timeout.
dœy
 <= 0;

202 
	}
}

204 
KeyîSèã


205 
	$√wKeyîSèã
 ()

207  (
KeyîSèã
Ë
	`ß„Æloc
 (1,  (
KeyîSèãInfo
), "newKeyerState");

208 
	}
}

211 
	$dñKeyîSèã
 (
KeyîSèã
 
ks
)

213 
	`ß„‰ì
 ((*Ë
ks
);

214 
	}
}

216 
KeyîLogic


217 
	$√wKeyîLogic
 ()

219  (
KeyîLogic
Ë
	`ß„Æloc
 (1,  (
KeyîLogicInfo
), "newKeyerLogic");

220 
	}
}

223 
	$dñKeyîLogic
 (
KeyîLogic
 
kl
)

225 
	`ß„‰ì
 ((*Ë
kl
);

226 
	}
}

	@keyer.h

40 #i‚de‡
_keyî_h


41 
	#_keyî_h


	)

43 
	~<‰omsys.h
>

44 
	~<b™Æ.h
>

45 
	~<•lôfõlds.h
>

46 
	~<d©©y≥s.h
>

50 
	#DSR_LINE_CLOSED_KEY
 (1)

	)

51 
	#CTS_LINE_CLOSED_KEY
 (1)

	)

52 
	#DTR_LINE_SET
 (0)

	)

53 
	#RTS_LINE_SET
 (0)

	)

55 
	#NO_TIMEOUTS_SCHED
 (-2)

	)

56 
	#NO_ELEMENT
 (-1)

	)

57 
	#DIT
 (0)

	)

58 
	#DAH
 (1)

	)

59 
	#MODE_A
 (0)

	)

60 
	#MODE_B
 (1)

	)

61 
	#NO_PADDLE_SQUEEZE
 (0)

	)

62 
	#PADDLES_SQUEEZED
 (1)

	)

63 
	#PADDLES_RELEASED
 (2)

	)

64 
	#NO_DELAY
 (0)

	)

65 
	#CHAR_SPACING_DELAY
 (1)

	)

66 
	#WORD_SPACING_DELAY
 (2)

	)

67 
	#DEBOUNCE_BUF_MAX_SIZE
 (30)

	)

71 
	s_keyî_°©e


75 
BOOLEAN
 
	mümbic
,

76 
	mmdlmdB
, 
	mªvpdl
;

80 
BOOLEAN
 
	mdô
, 
	mdah
;

81 } 
	mmem‹y
;

85 
BOOLEAN
 
	mkh¨
, 
	mw‹d
;

86 } 
	mauto•a˚
;

88 } 
	mÊag
;

90 
	mdeboun˚
,

91 
	mmode
,

92 
	mweight
;

94 
REAL
 
	mwpm
;

96 } 
	tKeyîSèãInfo
, *
	tKeyîSèã
;

98 
KeyîSèã
 
√wKeyîSèã
 ();

99 
dñKeyîSèã
 (
KeyîSèã
 
ks
);

103 
	s_keyî_logic


107 
BOOLEAN
 
	möô
;

111 
BOOLEAN
 
	mdô
, 
	mdah
;

112 } 
	m¥ev
;

114 } 
	mÊag
;

118 
BOOLEAN
 
	mövtd
,

119 
	mpsqam
;

120 
	mcuº
,

121 
	mümb
,

122 
	mœ°
;

123 } 
	mñemít
;

127 
REAL
 
	mbìp
, 
	mdœy
, 
	mñem
, 
	mmidl
;

128 } 
	mtimeout
;

130 
	mdœy_ty≥
;

132 } 
	tKeyîLogicInfo
, *
	tKeyîLogic
;

134 
KeyîLogic
 
√wKeyîLogic
 ();

135 
dñKeyîLogic
 (
KeyîLogic
 
kl
);

139 
BOOLEAN
 
klogic
 (
KeyîLogic
 
kl
,

140 
BOOLEAN
 
dô
,

141 
BOOLEAN
 
dah
,

142 
REAL
 
wpm
,

143 
ümbicmode
,

144 
BOOLEAN
 
midñemítmodeB
,

145 
BOOLEAN
 
dômem‹y
,

146 
BOOLEAN
 
dahmem‹y
,

147 
BOOLEAN
 
autoch¨•acög
,

148 
BOOLEAN
 
autow‹d•acög
, 
weight
, 
REAL
 
tickÀn
);

150 
BOOLEAN
 
ªad_°øight_key_£rül
 (
KeyîSèã
 
ks
, 
fd
);

151 
BOOLEAN
 
ªad_ümbic_key_£rül
 (
KeyîSèã
 
ks
, 
fd
, 
KeyîLogic
 
kl
,

152 
REAL
 
tickÀn
);

	@keyerio.c

37 
	~<keyî.h
>

44 
BOOLEAN


45 
	$ªad_°øight_key
 (
KeyîSèã
 
ks
, 
BOOLEAN
 
keyed
)

47 
i
, 
j
;

48 
BOOLEAN
 
key°©e
 = 0;

49 
deboun˚_buf_i
 = 0, 
deboun˚_buf
[
DEBOUNCE_BUF_MAX_SIZE
];

50 
deboun˚_buf
[
deboun˚_buf_i
] = 
keyed
;

51 
deboun˚_buf_i
++;

58 i‡(
deboun˚_buf_i
 >
ks
->
deboun˚
)

60 
deboun˚_buf_i
 = 0;

62 
j
 = 0;

63 
i
 = 0; i < 
ks
->
deboun˚
; i++)

64 i‡(
deboun˚_buf
[
i
])

65 
j
++;

66 
key°©e
 = (
j
 > 
ks
->
deboun˚
 / 2) ? 1 : 0;

69  
key°©e
;

70 
	}
}

77 
BOOLEAN


78 
	$ªad_ümbic_key
 (
KeyîSèã
 
ks
, 
BOOLEAN
 
dash
, BOOLEAN 
dŸ
, 
KeyîLogic
 
kl
,

79 
REAL
 
tickÀn
)

81 
i
, 
j
;

82 
BOOLEAN
 
dah_deboun˚_buf
[
DEBOUNCE_BUF_MAX_SIZE
],

83 
dô_deboun˚_buf
[
DEBOUNCE_BUF_MAX_SIZE
];

84 
dah
 = 0, 
deboun˚_buf_i
 = 0, 
dô
 = 0;

86 i‡(
ks
->
Êag
.
ªvpdl
)

88 
dah_deboun˚_buf
[
deboun˚_buf_i
] = 
dŸ
;

89 
dô_deboun˚_buf
[
deboun˚_buf_i
] = 
dash
;

93 
dah_deboun˚_buf
[
deboun˚_buf_i
] = 
dash
;

94 
dô_deboun˚_buf
[
deboun˚_buf_i
] = 
dŸ
;

96 
deboun˚_buf_i
++;

103 i‡(
deboun˚_buf_i
 >
ks
->
deboun˚
)

105 
deboun˚_buf_i
 = 0;

107 
j
 = 0;

108 
i
 = 0; i < 
ks
->
deboun˚
; i++)

110 i‡(
dah_deboun˚_buf
[
i
])

111 
j
++;

113 
dah
 = (
j
 > 
ks
->
deboun˚
 / 2) ? 1 : 0;

115 
j
 = 0;

116 
i
 = 0; i < 
ks
->
deboun˚
; i++)

118 i‡(
dô_deboun˚_buf
[
i
])

119 
j
++;

121 
dô
 = (
j
 > 
ks
->
deboun˚
 / 2) ? 1 : 0;

124  
	`klogic
 (
kl
,

125 
dô
,

126 
dah
,

127 
ks
->
wpm
,

128 
ks
->
mode
,

129 
ks
->
Êag
.
mdlmdB
,

130 
ks
->
Êag
.
mem‹y
.
dô
,

131 
ks
->
Êag
.
mem‹y
.
dah
,

132 
ks
->
Êag
.
auto•a˚
.
kh¨
,

133 
ks
->
Êag
.
auto•a˚
.
w‹d
, ks->
weight
, 
tickÀn
);

134 
	}
}

	@lmadf.c

34 
	~<lmadf.h
>

39 
	#ssiz
 (
lms
->
sig«l_size
)

	)

40 
	#asiz
 (
lms
->
ad≠tive_fûãr_size
)

	)

41 
	#d±r
 (
lms
->
dñay_löe_±r
)

	)

42 
	#øã
 (
lms
->
ad≠èti⁄_øã
)

	)

43 
	#Àak
 (
lms
->
Àakage
)

	)

45 
	#ssig
(
n
Ë(
	`CXBªÆ
(
lms
->
sig«l
,“)))

	)

46 
	#ssig_i
(
n
Ë(
	`CXBimag
(
lms
->
sig«l
,“)))

	)

47 
	#cssig
(
n
Ë(
	`CXBd©a
(
lms
->
sig«l
,“)))

	)

49 
	#dœy
(
n
Ë(
lms
->
dñay_löe
[“)])

	)

51 
	#afû
(
n
Ë(
lms
->
ad≠tive_fûãr
[“)])

	)

52 
	#wøp
(
n
Ë((“Ë+ (
lms
->
dñay
Ë+ (lms->
dñay_löe_±r
)Ë& (lms->
mask
))

	)

53 
	#bump
(
n
Ë((“Ë+ (
lms
->
mask
)Ë& (lms->mask))

	)

55 #ifde‡
REALLMS


56 
LMSR


57 
	$√w_lm§
 (
CXB
 
sig«l
,

58 
dñay
,

59 
REAL
 
ad≠èti⁄_øã
,

60 
REAL
 
Àakage
, 
ad≠tive_fûãr_size
, 
fûãr_ty≥
)

62 
LMSR
 
lms
 = (LMSRË
	`ß„Æloc
 (1,  (
_lms°©e
), "new_lmsr state");

64 
lms
->
sig«l
 = signal;

65 
lms
->
sig«l_size
 = 
	`CXBsize
 (lms->
sig«l
);

66 
lms
->
dñay
 = delay;

67 
lms
->
size
 = 512;

68 
lms
->
mask
 =Üms->
size
 - 1;

69 
lms
->
dñay_löe
 = 
	`√wvec_REAL
 (lms->
size
, "lmsr delay");

70 
lms
->
ad≠èti⁄_øã
 =ádaptation_rate;

71 
lms
->
Àakage
 =Üeakage;

72 
lms
->
ad≠tive_fûãr_size
 =ádaptive_filter_size;

73 
lms
->
ad≠tive_fûãr
 = 
	`√wvec_REAL
 (128, "lmsr filter");

74 
lms
->
fûãr_ty≥
 = filter_type;

75 
lms
->
dñay_löe_±r
 = 0;

77  
lms
;

78 
	}
}

81 
	$dñ_lm§
 (
LMSR
 
lms
)

83 i‡(
lms
)

85 
	`dñvec_REAL
 (
lms
->
dñay_löe
);

86 
	`dñvec_REAL
 (
lms
->
ad≠tive_fûãr
);

87 
	`ß„‰ì
 ((*Ë
lms
);

89 
	}
}

94 
	$lm§_ad≠t_i
 (
LMSR
 
lms
)

96 
i
, 
j
, 
k
;

97 
REAL
 
sum_sq
, 
s˛1
, 
s˛2
;

98 
REAL
 
accum
, 
îr‹
;

100 
s˛1
 = (
REAL
Ë(1.0 - 
øã
 * 
Àak
);

102 
i
 = 0; i < 
ssiz
; i++)

105 
	`dœy
 (
d±r
Ë
	`ssig
 (
i
);

106 
accum
 = 0.0;

107 
sum_sq
 = 0.0;

109 
j
 = 0; j < 
asiz
; j++)

111 
k
 = 
	`wøp
 (
j
);

112 
sum_sq
 +
	`sqr
 (
	`dœy
 (
k
));

113 
accum
 +
	`afû
 (
j
Ë* 
	`dœy
 (
k
);

116 
îr‹
 = 
	`ssig
 (
i
Ë- 
accum
;

117 
	`ssig_i
 (
i
Ë
	`ssig
 (iË
îr‹
;

119 
s˛2
 = (
REAL
Ë(
øã
 / (
sum_sq
 + 1.19e-6));

120 
îr‹
 *
s˛2
;

121 
j
 = 0; j < 
asiz
; j++)

123 
k
 = 
	`wøp
 (
j
);

124 
	`afû
 (
j
Ëafû (jË* 
s˛1
 + 
îr‹
 * 
	`dœy
 (
k
);

127 
d±r
 = 
	`bump
 (dptr);

129 
	}
}

132 
	$lm§_ad≠t_n
 (
LMSR
 
lms
)

134 
i
, 
j
, 
k
;

135 
REAL
 
sum_sq
, 
s˛1
, 
s˛2
;

136 
REAL
 
accum
, 
îr‹
;

138 
s˛1
 = (
REAL
Ë(1.0 - 
øã
 * 
Àak
);

140 
i
 = 0; i < 
ssiz
; i++)

143 
	`dœy
 (
d±r
Ë
	`ssig
 (
i
);

144 
accum
 = 0.0;

145 
sum_sq
 = 0.0;

147 
j
 = 0; j < 
asiz
; j++)

149 
k
 = 
	`wøp
 (
j
);

150 
sum_sq
 +
	`sqr
 (
	`dœy
 (
k
));

151 
accum
 +
	`afû
 (
j
Ë* 
	`dœy
 (
k
);

154 
îr‹
 = 
	`ssig
 (
i
Ë- 
accum
;

155 
	`ssig_i
 (
i
Ë
	`ssig
 (iË
accum
;

157 
s˛2
 = (
REAL
Ë(
øã
 / (
sum_sq
 + 1.19e-6));

158 
îr‹
 *
s˛2
;

159 
j
 = 0; j < 
asiz
; j++)

161 
k
 = 
	`wøp
 (
j
);

162 
	`afû
 (
j
Ëafû (jË* 
s˛1
 + 
îr‹
 * 
	`dœy
 (
k
);

165 
d±r
 = 
	`bump
 (dptr);

167 
	}
}

170 
LMSR


171 
	$√w_lm§
 (
CXB
 
sig«l
,

172 
dñay
,

173 
REAL
 
ad≠èti⁄_øã
,

174 
REAL
 
Àakage
, 
ad≠tive_fûãr_size
, 
fûãr_ty≥
)

176 
LMSR
 
lms
 = (LMSRË
	`ß„Æloc
 (1,  (
_lms°©e
), "new_lmsr state");

178 
lms
->
sig«l
 = 
	`√wCXB
(sig«l->
size
,
	`CXBba£
(signal),"lmadf CXB");

179 
lms
->
sig«l_size
 = 
	`CXBsize
 (lms->
sig«l
);

180 
lms
->
dñay
 = delay;

181 
lms
->
size
 = 4096;

182 
lms
->
mask
 =Üms->
size
 - 1;

183 
lms
->
dñay_löe
 = 
	`√wvec_COMPLEX
 (lms->
size
, "lmsr delay");

184 
lms
->
ad≠èti⁄_øã
 =ádaptation_rate;

185 
lms
->
Àakage
 =Üeakage;

186 
lms
->
ad≠tive_fûãr_size
 =ádaptive_filter_size;

187 
lms
->
ad≠tive_fûãr
 = 
	`√wvec_COMPLEX
 (128, "lmsr filter");

188 
lms
->
fûãr_ty≥
 = filter_type;

189 
lms
->
dñay_löe_±r
 = 0;

191  
lms
;

192 
	}
}

195 
	$dñ_lm§
 (
LMSR
 
lms
)

197 i‡(
lms
)

199 
	`dñCXB
(
lms
->
sig«l
);

200 
	`dñvec_COMPLEX
 (
lms
->
dñay_löe
);

201 
	`dñvec_COMPLEX
 (
lms
->
ad≠tive_fûãr
);

202 
	`ß„‰ì
 ((*Ë
lms
);

204 
	}
}

209 
	$lm§_ad≠t_i
 (
LMSR
 
lms
)

211 
i
, 
j
, 
k
;

212 
REAL
 
sum_sq
, 
s˛1
, 
s˛2
;

213 
COMPLEX
 
accum
, 
îr‹
;

215 
s˛1
 = (
REAL
Ë(1.0 - 
øã
 * 
Àak
);

217 
i
 = 0; i < 
ssiz
; i++)

220 
	`dœy
 (
d±r
Ë
	`CXBd©a
 (
lms
->
sig«l
, 
i
);

221 
accum
 = 
cxzîo
;

222 
sum_sq
 = 0;

224 
j
 = 0; j < 
asiz
; j+=2)

226 
k
 = 
	`wøp
 (
j
);

227 
sum_sq
 +
	`Csqrmag
 (
	`dœy
 (
k
));

228 
accum
.
ª
 +
	`afû
 (
j
).ª * 
	`dœy
 (
k
).re;

229 
accum
.
im
 +
	`afû
 (
j
).im * 
	`dœy
 (
k
).im;

231 
k
 = 
	`wøp
 (
j
+1);

232 
sum_sq
 +
	`Csqrmag
 (
	`dœy
 (
k
));

233 
accum
.
ª
 +
	`afû
 (
j
+1).ª * 
	`dœy
 (
k
).re;

234 
accum
.
im
 +
	`afû
 (
j
+1).im * 
	`dœy
 (
k
).im;

237 
îr‹
 = 
	`Csub
(
	`cssig
(
i
),
accum
);

238 
	`cssig
(
i
Ë
îr‹
;

242 
s˛2
 = (
REAL
Ë(
øã
 / (
sum_sq
 + 1.19e-7));

243 
îr‹
 = 
	`Cs˛
”º‹,
s˛2
);

244 
j
 = 0; j < 
asiz
; j+=2)

246 
k
 = 
	`wøp
 (
j
);

247 
	`afû
 (
j
).
ª
 =áfû (j).ª * 
s˛1
 + 
îr‹
.ª * 
	`dœy
 (
k
).re;

248 
	`afû
 (
j
).
im
 =áfû (j).im * 
s˛1
 + 
îr‹
.im * 
	`dœy
 (
k
).im;

250 
k
 = 
	`wøp
 (
j
+1);

251 
	`afû
 (
j
+1).
ª
 =áfû (j+1).ª * 
s˛1
 + 
îr‹
.ª * 
	`dœy
 (
k
).re;

252 
	`afû
 (
j
+1).
im
 =áfû (j+1).im * 
s˛1
 + 
îr‹
.im * 
	`dœy
 (
k
).im;

255 
d±r
 = 
	`bump
 (dptr);

257 
	}
}

260 
	$lm§_ad≠t_n
 (
LMSR
 
lms
)

262 
i
, 
j
, 
k
;

263 
REAL
 
sum_sq
, 
s˛1
, 
s˛2
;

264 
COMPLEX
 
accum
, 
îr‹
;

266 
s˛1
 = (
REAL
Ë(1.0 - 
øã
 * 
Àak
);

268 
i
 = 0; i < 
ssiz
; i++)

271 
	`dœy
 (
d±r
Ë
	`cssig
 (
i
);

272 
accum
 = 
cxzîo
;

273 
sum_sq
 = 0.0;

275 
j
 = 0; j < 
asiz
; j+=2)

277 
k
 = 
	`wøp
 (
j
);

278 
sum_sq
 +
	`Csqrmag
 (
	`dœy
 (
k
));

279 
accum
.
ª
 +
	`afû
 (
j
).ª * 
	`dœy
 (
k
).re;

280 
accum
.
im
 +
	`afû
 (
j
).im * 
	`dœy
 (
k
).im;

282 
k
 = 
	`wøp
 (
j
+1);

283 
sum_sq
 +
	`Csqrmag
 (
	`dœy
 (
k
));

284 
accum
.
ª
 +
	`afû
 (
j
+1).ª * 
	`dœy
 (
k
).re;

285 
accum
.
im
 +
	`afû
 (
j
+1).im * 
	`dœy
 (
k
).im;

288 
îr‹
 = 
	`Csub
(
	`cssig
 (
i
),
accum
);

289 
	`cssig
(
i
)
accum
;

291 
s˛2
 = (
REAL
Ë(
øã
 / (
sum_sq
 + 1.19e-7));

292 
îr‹
 = 
	`Cs˛
”º‹,
s˛2
);

293 
j
 = 0; j < 
asiz
; j+=2)

295 
k
 = 
	`wøp
 (
j
);

296 
	`afû
 (
j
).
ª
 =áfû (j).ª * 
s˛1
 + 
îr‹
.ª * 
	`dœy
 (
k
).re;

297 
	`afû
 (
j
).
im
 =áfû (j).im * 
s˛1
 + 
îr‹
.im * 
	`dœy
 (
k
).im;

299 
k
 = 
	`wøp
 (
j
+1);

300 
	`afû
 (
j
+1).
ª
 =áfû (j+1).ª * 
s˛1
 + 
îr‹
.ª * 
	`dœy
 (
k
).re;

301 
	`afû
 (
j
+1).
im
 =áfû (j+1).im * 
s˛1
 + 
îr‹
.im * 
	`dœy
 (
k
).im;

304 
d±r
 = 
	`bump
 (dptr);

306 
	}
}

310 
	$lm§_ad≠t
 (
LMSR
 
lms
)

312 
lms
->
fûãr_ty≥
)

314 
LMADF_NOISE
:

315 
	`lm§_ad≠t_n
 (
lms
);

317 
LMADF_INTERFERENCE
:

318 
	`lm§_ad≠t_i
 (
lms
);

321 
	}
}

324 
	$dñ_blms
 (
BLMS
 
blms
)

326 i‡(
blms
)

328 
	`f·wf_de°roy_∂™
 (
blms
->
X∂™
);

329 
	`f·wf_de°roy_∂™
 (
blms
->
Y∂™
);

330 
	`f·wf_de°roy_∂™
 (
blms
->
Eºh©∂™
);

331 
	`f·wf_de°roy_∂™
 (
blms
->
UPD∂™
);

332 
	`f·wf_de°roy_∂™
 (
blms
->
W∂™
);

333 
	`dñvec_COMPLEX
 (
blms
->
upd©e
);

334 
	`dñvec_COMPLEX
 (
blms
->
Upd©e
);

335 
	`dñvec_COMPLEX
 (
blms
->
Wh©
);

336 
	`dñvec_COMPLEX
 (
blms
->
Xh©
);

337 
	`dñvec_COMPLEX
 (
blms
->
îr‹
);

338 
	`dñvec_COMPLEX
 (
blms
->
Eºh©
);

339 
	`dñvec_COMPLEX
 (
blms
->
Yh©
);

340 
	`dñvec_COMPLEX
 (
blms
->
y
);

341 
	`dñvec_COMPLEX
 (
blms
->
dñay_löe
);

342 
	`ß„‰ì
 ((*Ë
blms
);

344 
	}
}

346 
BLMS


347 
	$√w_blms
 (
CXB
 
sig«l
, 
REAL
 
ad≠èti⁄_øã
, REAL 
Àak_øã
, 
fûãr_ty≥
,

348 
pbôs
)

350 
BLMS
 
tmp
;

351 
tmp
 = (
BLMS
Ë
	`ß„Æloc
 (1,  (
_blocklms
), "blockÜms");

352 
tmp
->
dñay_löe
 = 
	`√wvec_COMPLEX
 (256, "blockÜms delayÜine");

353 
tmp
->
y
 = 
	`√wvec_COMPLEX
 (256, "blockÜms output signal");

354 
tmp
->
Yh©
 = 
	`√wvec_COMPLEX
 (256, "blockÜms outputÅransform");

355 
tmp
->
Eºh©
 = 
	`√wvec_COMPLEX
 (256, "blockÜms ErrorÅransform");

356 
tmp
->
îr‹
 = 
	`√wvec_COMPLEX
 (256, "blockÜms Error signal");

357 
tmp
->
Xh©
 = 
	`√wvec_COMPLEX
 (256, "blockÜms signalÅransform");

358 
tmp
->
Wh©
 = 
	`√wvec_COMPLEX
 (256, "blockÜms filterÅransform");

359 
tmp
->
Upd©e
 = 
	`√wvec_COMPLEX
 (256, "blockÜms updateÅransform");

360 
tmp
->
upd©e
 = 
	`√wvec_COMPLEX
 (256, "blockÜms update signal");

361 
tmp
->
ad≠èti⁄_øã
 =ádaptation_rate;

362 
tmp
->
Àak_øã
 = 1.0f -Üeak_rate;

363 
tmp
->
sig«l
 = signal;

364 
tmp
->
fûãr_ty≥
 = filter_type;

365 
tmp
->
X∂™
 = 
	`f·wf_∂™_d·_1d
 (256,

366 (
f·wf_com∂ex
 *Ë
tmp
->
dñay_löe
,

367 (
f·wf_com∂ex
 *Ë
tmp
->
Xh©
,

368 
FFTW_FORWARD
, 
pbôs
);

370 
tmp
->
Y∂™
 = 
	`f·wf_∂™_d·_1d
 (256,

371 (
f·wf_com∂ex
 *Ë
tmp
->
Yh©
,

372 (
f·wf_com∂ex
 *Ë
tmp
->
y
,

373 
FFTW_BACKWARD
, 
pbôs
);

375 
tmp
->
Eºh©∂™
 = 
	`f·wf_∂™_d·_1d
 (256,

376 (
f·wf_com∂ex
 *Ë
tmp
->
îr‹
,

377 (
f·wf_com∂ex
 *Ë
tmp
->
Eºh©
,

378 
FFTW_FORWARD
, 
pbôs
);

379 
tmp
->
UPD∂™
 = 
	`f·wf_∂™_d·_1d
 (256,

380 (
f·wf_com∂ex
 *Ë
tmp
->
Eºh©
,

381 (
f·wf_com∂ex
 *Ë
tmp
->
upd©e
,

382 
FFTW_BACKWARD
, 
pbôs
);

383 
tmp
->
W∂™
 = 
	`f·wf_∂™_d·_1d
 (256,

384 (
f·wf_com∂ex
 *Ë
tmp
->
upd©e
,

385 (
f·wf_com∂ex
 *Ë
tmp
->
Upd©e
,

386 
FFTW_FORWARD
, 
pbôs
);

387  
tmp
;

388 
	}
}

390 
	#BLKSCL
 (
REAL
)(3.90625e-3)

	)

392 
	$blms_ad≠t
 (
BLMS
 
blms
)

394 
sigsize
 = 
	`CXBhave
 (
blms
->
sig«l
);

395 
sigidx
 = 0;

399 
j
;

400 
	`mem˝y
 (
blms
->
dñay_löe
, &blms->dñay_löe[128],  (
COMPLEX
) * 128);

401 
	`mem˝y
 (&
blms
->
dñay_löe
[128], &
	`CXBd©a
 (blms->
sig«l
, 
sigidx
),  (
COMPLEX
) * 128);

402 
	`f·wf_execuã
 (
blms
->
X∂™
);

403 
j
 = 0; j < 256; j++) {

404 
blms
->
Yh©
[
j
] = 
	`Cmul
 (blms->
Wh©
[j], blms->
Xh©
[j]);

405 
blms
->
Xh©
[
j
] = 
	`C⁄jg
 (blms->Xhat[j]);

407 
	`f·wf_execuã
 (
blms
->
Y∂™
);

408 
j
 = 128; j < 256; j++)

409 
blms
->
y
[
j
] = 
	`Cs˛
 (blms->y[j], 
BLKSCL
);

410 
	`mem£t
 (
blms
->
y
, 0, 128 *  (
COMPLEX
));

411 
j
 = 128; j < 256; j++)

412 
blms
->
îr‹
[
j
] = 
	`Csub
 (blms->
dñay_löe
[j], blms->
y
[j]);

414 i‡(
blms
->
fûãr_ty≥
)

415 
	`mem˝y
 (&
	`CXBd©a
 (
blms
->
sig«l
, 
sigidx
), &blms->
y
[128], 128 *  (
COMPLEX
));

417 
	`mem˝y
 (&
	`CXBd©a
 (
blms
->
sig«l
, 
sigidx
), &blms->
îr‹
[128], 128 *  (
COMPLEX
));

419 
	`f·wf_execuã
 (
blms
->
Eºh©∂™
);

420 
j
 = 0; j < 256; j++)

421 
blms
->
Eºh©
[
j
] = 
	`Cmul
 (blms->Eºh©[j], blms->
Xh©
[j]);

422 
	`f·wf_execuã
 (
blms
->
UPD∂™
);

423 
j
 = 0; j < 128; j++)

424 
blms
->
upd©e
[
j
] = 
	`Cs˛
 (blms->upd©e[j], 
BLKSCL
);

425 
	`mem£t
 (&
blms
->
upd©e
[128], 0,  (
COMPLEX
) * 128);

427 
	`f·wf_execuã
 (
blms
->
W∂™
);

428 
j
 = 0; j < 256; j++)

430 
blms
->
Wh©
[
j
] = 
	`Cadd
 (
	`Cs˛
 (blms->Wh©[j], blms->
Àak_øã
),

431 
	`Cs˛
 (
blms
->
Upd©e
[
j
], blms->
ad≠èti⁄_øã
));

433 
sigidx
 += 128;

434 } 
sigidx
 < 
sigsize
);

435 
	}
}

	@lmadf.h

34 #i‚de‡
_lmadf_h


36 
	#_lmadf_h


	)

37 
	~<f·w3.h
>

38 
	~<f·w3_fix.h
>

39 
	~<‰omsys.h
>

40 
	~<b™Æ.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

46 
	#LMADF_INTERFERENCE
 0

	)

47 
	#LMADF_NOISE
 1

	)

48 
	#LMADF_NOSIG
 (-1)

	)

49 
	#LMADF_NOLINE
 (-2)

	)

50 
	#LMADF_NOFILT
 (-3)

	)

52 
lmadf_îr
;

55 
	s_BlockLMS


57 
CXB
 
	msig«l
;

58 
COMPLEX
 *
	mdñay_löe
;

59 
COMPLEX
 *
	my
;

60 
COMPLEX
 *
	mXh©
;

61 
COMPLEX
 *
	mWh©
;

62 
COMPLEX
 *
	mY
;

63 
COMPLEX
 *
	mYh©
;

64 
COMPLEX
 *
	mîr‹
;

65 
COMPLEX
 *
	mEºh©
;

66 
COMPLEX
 *
	mUpd©e
;

67 
COMPLEX
 *
	mupd©e
;

68 
REAL
 
	mad≠èti⁄_øã
;

69 
REAL
 
	mÀak_øã
;

70 
	mfûãr_ty≥
;

71 
f·wf_∂™
 
	mX∂™
, 
	mY∂™
, 
	mW∂™
, 
	mEºh©∂™
, 
	mUPD∂™
;

72 } 
	t_blocklms
, *
	tBLMS
;

74 #ifde‡
REALLMS


76 
	s_LMSR


78 
CXB
 
	msig«l
;

79 
	msig«l_size
;

80 
REAL
 *
	mdñay_löe
;

81 
REAL
 *
	mad≠tive_fûãr
;

82 
REAL
 
	mad≠èti⁄_øã
;

83 
REAL
 
	mÀakage
;

84 
	mad≠tive_fûãr_size
;

85 
	mfûãr_ty≥
;

86 
	mdñay
;

87 
	mdñay_löe_±r
;

88 
	msize
;

89 
	mmask
;

90 } *
	tLMSR
, 
	t_lms°©e
;

94 
	s_LMSR


96 
CXB
 
	msig«l
;

97 
	msig«l_size
;

98 
COMPLEX
 *
	mdñay_löe
;

99 
COMPLEX
 *
	mad≠tive_fûãr
;

100 
REAL
 
	mad≠èti⁄_øã
;

101 
REAL
 
	mÀakage
;

102 
	mad≠tive_fûãr_size
;

103 
	mfûãr_ty≥
;

104 
	mdñay
;

105 
	mdñay_löe_±r
;

106 
	msize
;

107 
	mmask
;

108 } *
	tLMSR
, 
	t_lms°©e
;

112 
LMSR
 
√w_lm§
 (
CXB
 
sig«l
,

113 
dñay
,

114 
REAL
 
ad≠èti⁄_øã
,

115 
REAL
 
Àakage
,

116 
ad≠tive_fûãr_size
, 
fûãr_ty≥
);

119 
dñ_lm§
 (
LMSR
 
lms
);

121 
lm§_ad≠t
 (
LMSR
 
lms
);

123 
BLMS
 
√w_blms
 (
CXB
 
sig«l
, 
REAL
 
ad≠èti⁄_øã
, REAL 
Àak_øã
,

124 
fûãr_ty≥
, 
pbôs
);

126 
blms_ad≠t
 (
BLMS
 
blms
);

128 
dñ_blms
 (
BLMS
 
blms
);

	@local.h

42 #i‚de‡
_loˇl_h


43 
	#_loˇl_h


	)

45 
	~<comm⁄.h
>

47 
	#RCBASE
 ".DâSPrc"

	)

48 
	#PARMPATH
 "\\\\.\\pùe\\SDRcomm™ds"

	)

49 
	#METERPATH
 "\\\\.\\pùe\\SDRmëî"

	)

50 
	#SPECPATH
 "\\\\.\\pùe\\SDR•e˘rum"

	)

51 
	#WISDOMPATH
 ".\\wisdom"

	)

54 
	s_loc


56 
«me
[
MAXPATHLEN
];

59 
rcfûe
[
MAXPATHLEN
],

60 
∑rm
[
MAXPATHLEN
],

61 
mëî
[
MAXPATHLEN
], 
•ec
[MAXPATHLEN], 
wisdom
[MAXPATHLEN];

62 } 
∑th
;

65 
REAL
 
øã
;

66 
size
, 
ƒx
, 
•ec
, 
comp
;

67 
SDRMODE
 
mode
;

68 } 
def
;

71 
rög
;

72 } 
mu…
;

73 } 
loc
[3];

	@malloc16.c

8 
	~<mÆloc16.h
>

9 
	~<°rög.h
>

10 
	tUötPå
;

12 * 
	$mÆloc16Align
(
BlockSize
)

17 
UötPå
 
Ba£På
=(UötPå)
	`mÆloc
(
BlockSize
+32);

18 
UötPå
 
Alig√dPå
=(
Ba£På
+31)&-16;

24 i‡(
Alig√dPå
==
Ba£På
) AlignedPtr+=16;

27 *((*)
Alig√dPå
-1)=()(Alig√dPå-
Ba£På
);

29  (*)
Alig√dPå
;

30 
	}
}

33 *
	$mÆloc16Align
(
size
){

34 *
p
;

35 **
p1
;

37 if((
p
 = 
	`mÆloc
(
size
+31)Ë=
NULL
)

38  
NULL
;

41 
p1
 = (**)((()
p
 + 31) & (~15));

44 
p1
[-1] = 
p
;

47  (*)
p1
;

48 
	}
}

50 *
	$ˇŒoc16Align
(
size_t
 
nmemb
,size_à
size
){

51 
nbyãs
;

52 *
p
;

54 
nbyãs
 = 
nmemb
*
size
;

55 if((
p
 = 
	`mÆloc16Align
(
nbyãs
)Ë=
NULL
)

56  
NULL
;

58 
	`mem£t
(
p
,0,
nbyãs
);

59  
p
;

60 
	}
}

61 
	$‰ì16Align
(* 
p
)

63 * 
pAlig√d
=(*)
p
;

68 
	`‰ì
(
pAlig√d
 - *(pAligned-1));

69 
	}
}

71 
	$‰ì16Align
(*
p
){

73 if(
p
 !
NULL
){

75 
	`‰ì
(((**)
p
)[-1]);

77 
	}
}

	@malloc16.h

23 #i‚de‡
MALLOC16_H


24 
	#MALLOC16_H


	)

25 #ifde‡
__˝lu•lus


29 
	~<°dlib.h
>

32 *
mÆloc16Align
(
size
);

33 *
ˇŒoc16Align
(
size_t
 
nmemb
,size_à
size
);

34 
‰ì16Align
(*
p
);

36 #ifde‡
__˝lu•lus


	@meter.c

34 
	~<mëî.h
>

	@meter.h

34 #i‚de‡
_mëî_h


35 
	#_mëî_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<b™Æ.h
>

40 
	~<•lôfõlds.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

44 
	~<rögb.h
>

45 
	~<lmadf.h
>

46 
	~<f·w3.h
>

47 
	~<f·w3_fix.h
>

48 
	~<ovsv.h
>

49 
	~<fûãr.h
>

50 
	~<oscûœt‹.h
>

51 
	~<dâ•agc.h
>

52 
	~<am_demod.h
>

53 
	~<fm_demod.h
>

54 
	~<noi£bœnkî.h
>

55 
	~<c‹ª˘IQ.h
>

56 
	~<•ìch¥oc.h
>

57 
	~<•Ÿt⁄e.h
>

58 
	~<upd©e.h
>

62 
	mSIGNAL_STRENGTH
,

63 
	mAVG_SIGNAL_STRENGTH
,

64 
	mADC_REAL
,

65 
	mADC_IMAG
,

66 
	mAGC_GAIN
,

67 
	mMIC
,

68 
	mPWR
,

69 
	mALC
,

70 
	mEQèp
,

71 
	mLEVELER
,

72 
	mCOMP
,

73 
	mCPDR
,

74 
	mALC_G
,

75 
	mLVL_G
,

76 
	mMIC_PK
,

77 
	mALC_PK
,

78 
	mEQ_PK
,

79 
	mLEVELER_PK
,

80 
	mCOMP_PK
,

81 
	mCPDR_PK
,

82 } 
	tMETERTYPE
;

84 
	#RXMETERPTS
 (5)

	)

85 
	#RXMETER_PRE_CONV
 (0)

	)

86 
	#RXMETER_POST_FILT
 (1)

	)

87 
	#RXMETER_POST_AGC
 (2)

	)

88 
	#TXMETERPTS
 (15)

	)

92 
	mRX_SIGNAL_STRENGTH
,

93 
	mRX_AVG_SIGNAL_STRENGTH
,

94 
	mRX_ADC_REAL
,

95 
	mRX_ADC_IMAG
,

96 
	mRX_AGC_GAIN


97 } 
	tRXMETERTYPE
;

101 
	mTX_MIC
,

102 
	mTX_PWR
,

103 
	mTX_ALC
,

104 
	mTX_EQ
,

105 
	mTX_LVL
,

106 
	mTX_COMP
,

107 
	mTX_CPDR
,

108 
	mTX_ALC_G
,

109 
	mTX_LVL_G
,

110 
	mTX_MIC_PK
,

111 
	mTX_LVL_PK
,

112 
	mTX_EQ_PK
,

113 
	mTX_COMP_PK
,

114 
	mTX_CPDR_PK
,

115 
	mTX_ALC_PK
,

116 } 
	tTXMETERTYPE
;

120 
	s_mëî_block


122 
BOOLEAN
 
	mÊag
;

123 
	mœbñ
;

126 
REAL
 
	mvÆ
[
MAXRX
][
RXMETERPTS
];

127 
RXMETERTYPE
 
	mmode
[
MAXRX
];

128 } 
	mrx
;

131 
REAL
 
	mvÆ
[
TXMETERPTS
];

132 
TXMETERTYPE
 
	mmode
;

133 } 
	mtx
;

134 } 
	tMETERBlock
;

	@metermon.c

3 
	~<comm⁄.h
>

5 
	#SLEEP
 (500000)

	)

7 *
	gcmdsök
 = "./IPC/SDR-1000-0-commands.fifo",

8 *
	gmå§c
 = "./IPC/SDR-1000-0-meter.fifo";

10 
FILE
 *
	gcmdÂ
, *
	gmåÂ
;

12 
	gœbñ
;

13 
REAL
 
	grxm
[
MAXRX
][
RXMETERPTS
];

14 
REAL
 
	gtxm
[
TXMETERPTS
];

17 
	$maö
 (
¨gc
, **
¨gv
)

19 
i
 = 0, 
j
, 
k
, 
œb
 = 
	`gëpid
 ();

21 i‡(!(
cmdÂ
 = 
	`f›í
 (
cmdsök
, "r+")))

22 
	`≥º‹
 (
cmdsök
), 
	`exô
 (1);

23 i‡(!(
måÂ
 = 
	`f›í
 (
må§c
, "r+")))

24 
	`≥º‹
 (
må§c
), 
	`exô
 (1);

26 
	`Ârötf
 (
°dîr
, "metermon OK\n");

31 
	`u¶ìp
 (
SLEEP
);

33 
	`Ârötf
 (
cmdÂ
, "ªqMëî %d\n", 
œb
);

34 
	`fÊush
 (
cmdÂ
);

36 i‡(
	`‰ód
 ((*Ë&
œbñ
,  (), 1, 
måÂ
) != 1)

37 
	`≥º‹
 ("‰ód mëîÜabñ"), 
	`exô
 (1);

39 i‡(
	`‰ód
 ((*Ë
rxm
,  (
REAL
), 
MAXRX
 * 
RXMETERPTS
, 
måÂ
)

40 !
MAXRX
 * 
RXMETERPTS
)

41 
	`≥º‹
 ("‰ód mëî"), 
	`exô
 (1);

43 
	`¥ötf
 ("%d <%d>", 
i
++, 
œbñ
);

44 
j
 = 0; j < 
MAXRX
; j++)

46 
k
 = 0; k < 
RXMETERPTS
; k++)

47 
	`¥ötf
 (" %8.3f", 
rxm
[
j
][
k
]);

48 
	`putch¨
 ('\n');

51 i‡(
	`‰ód
 ((*Ë
txm
,  (
REAL
), 
TXMETERPTS
, 
måÂ
)

52 !
TXMETERPTS
)

53 
	`≥º‹
 ("‰ód mëî"), 
	`exô
 (1);

55 
	`¥ötf
 ("%d\n", 
i
++);

56 
k
 = 0; k < 
TXMETERPTS
; k++)

57 
	`¥ötf
 (" %8.3f", 
txm
[
k
]);

58 
	`putch¨
 ('\n');

61 
	`f˛o£
 (
cmdÂ
);

62 
	`f˛o£
 (
måÂ
);

64 
	`exô
 (0);

65 
	}
}

	@noiseblanker.c

34 
	~<comm⁄.h
>

36 
NB


37 
	$√w_noi£bœnkî
 (
CXB
 
sigbuf
, 
REAL
 
thªshﬁd
)

39 
NB
 
nb
 = (NBË
	`ß„Æloc
 (1,  (
nb°©e
), "newÇbstate");

40 
nb
->
sigbuf
 = sigbuf;

41 
nb
->
thªshﬁd
 =Åhreshold;

42 
nb
->
avîage_mag
 = 1.0;

43 
nb
->
h™gtime
 = 0;

44 
nb
->
sigödex
 = 0;

45 
nb
->
dñayödex
 = 2;

46 
	`mem£t
 (
nb
->
dñay
, 0, 8 *  (
COMPLEX
));

47  
nb
;

48 
	}
}

51 
	$dñ_nb
 (
NB
 
nb
)

53 i‡(
nb
)

55 
	`ß„‰ì
 ((*Ë
nb
);

57 
	}
}

60 
	$noi£bœnkî
 (
NB
 
nb
)

62 
i
;

63 
i
 = 0; i < 
	`CXBsize
 (
nb
->
sigbuf
); i++)

65 
REAL
 
cmag
 = 
	`Cmag
 (
	`CXBd©a
 (
nb
->
sigbuf
, 
i
));

66 
nb
->
dñay
[nb->
sigödex
] = 
	`CXBd©a
 (nb->
sigbuf
, 
i
);

67 
nb
->
avîage_mag
 = (
REAL
Ë(0.999 * (nb->avîage_magË+ 0.001 * 
cmag
);

68 i‡((
nb
->
h™gtime
 =0Ë&& (
cmag
 > (nb->
thªshﬁd
 *Çb->
avîage_mag
)))

69 
nb
->
h™gtime
 = 7;

70 i‡(
nb
->
h™gtime
 > 0)

72 
	`CXBd©a
 (
nb
->
sigbuf
, 
i
Ë
	`Cm∂x
 (0.0, 0.0);

73 
nb
->
h™gtime
--;

76 
	`CXBd©a
 (
nb
->
sigbuf
, 
i
Ënb->
dñay
[nb->
dñayödex
];

77 
nb
->
sigödex
 = (nb->sigindex + 7) & 7;

78 
nb
->
dñayödex
 = (nb->delayindex + 7) & 7;

80 
	}
}

83 
	$SDROMnoi£bœnkî
 (
NB
 
nb
)

85 
i
;

86 
i
 = 0; i < 
	`CXBsize
 (
nb
->
sigbuf
); i++)

88 
REAL
 
cmag
 = 
	`Cmag
 (
	`CXBd©a
 (
nb
->
sigbuf
, 
i
));

89 
nb
->
avîage_sig
 = 
	`Cadd
 (
	`Cs˛
 (nb->average_sig, 0.75),

90 
	`Cs˛
 (
	`CXBd©a
 (
nb
->
sigbuf
, 
i
), 0.25));

91 
nb
->
avîage_mag
 = (
REAL
Ë(0.999 * (nb->avîage_magË+ 0.001 * 
cmag
);

92 i‡(
cmag
 > (
nb
->
thªshﬁd
 *Çb->
avîage_mag
))

93 
	`CXBd©a
 (
nb
->
sigbuf
, 
i
Ënb->
avîage_sig
;

95 
	}
}

	@noiseblanker.h

34 #i‚de‡
_noi£bœnkî_h


35 
	#_noi£bœnkî_h


	)

37 
	~<cx›s.h
>

38 
	~<bufvec.h
>

40 
	s_nb°©e


42 
CXB
 
	msigbuf
;

43 
REAL
 
	mthªshﬁd
;

44 
COMPLEX
 
	mavîage_sig
;

45 
REAL
 
	mavîage_mag
;

46 
COMPLEX
 
	mdñay
[8];

47 
	mdñayödex
;

48 
	msigödex
;

49 
	mh™gtime
;

50 } *
	tNB
, 
	tnb°©e
;

52 
NB
 
√w_noi£bœnkî
 (
CXB
 
sigbuf
, 
REAL
 
thªshﬁd
);

53 
dñ_nb
 (
NB
 
nb
);

54 
noi£bœnkî
 (
NB
 
nb
);

55 
SDROMnoi£bœnkî
 (
NB
 
nb
);

	@oscillator.c

36 
	~<comm⁄.h
>

38 
	#HUGE_PHASE
 1256637061.43593

	)

41 
	$Com∂exOSC
 (
OSC
 
p
)

43 
i
;

44 
COMPLEX
 
z
, 
dñè_z
;

46 i‡(
	`OSCpha£
 (
p
Ë> 
TWOPI
)

47 
	`OSCpha£
 (
p
Ë-
TWOPI
;

48 i‡(
	`OSCpha£
 (
p
Ë< -
TWOPI
)

49 
	`OSCpha£
 (
p
Ë+
TWOPI
;

51 
z
 = 
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
	`OSCpha£
 (
p
)), (
IMAG
Ë
	`sö
 (OSCphase (p))),

52 
dñè_z
 = 
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
	`OSC‰eq
 (
p
)), (
IMAG
Ë
	`sö
 (OSCfreq (p)));

54 
i
 = 0; i < 
	`OSCsize
 (
p
); i++)

57 
	`CXBd©a
((
CXB
)
	`OSCba£
(
p
), 
i
Ë
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
	`OSCpha£
 (p)), (
IMAG
Ë
	`sö
 (OSCphase (p))),

58 
	`OSCpha£
 (
p
Ë+
	`OSC‰eq
 (p);

60 
	}
}

62 #ifde‡
nŸdef


64 
	$Com∂exOSC
 (
OSC
 
p
)

66 
i
;

69 
i
 = 0; i < 
	`OSCsize
 (
p
); i++)

71 
	`OSCªÆ
 (
p
, 
i
Ë
	`cos
 (
	`OSCpha£
 (p));

72 
	`OSCimag
 (
p
, 
i
Ë
	`sö
 (
	`OSCpha£
 (p));

73 
	`OSCpha£
 (
p
Ë+
	`OSC‰eq
 (p);

75 
	}
}

78 
PRIVATE
 

79 
	$_pha£mod
 (
™gÀ
)

81 
™gÀ
 >
TWOPI
)

82 
™gÀ
 -
TWOPI
;

83 
™gÀ
 < 0.0)

84 
™gÀ
 +
TWOPI
;

85  
™gÀ
;

86 
	}
}

89 
	$RólOSC
 (
OSC
 
p
)

91 
i
;

92 
i
 = 0; i < 
	`OSCsize
 (
p
); i++)

94 
	`OSCRd©a
 (
p
, 
i
Ë(
REAL
Ë
	`sö
 (
	`OSCpha£
 (p));

95 
	`OSCpha£
 (
p
Ë
	`_pha£mod
 (
	`OSC‰eq
 (p) + OSCphase (p));

97 
	}
}

99 
OSC


100 
	$√wOSC
 (
size
,

101 
OscTy≥
 
Ty≥Osc
,

102 
Fªquícy
, 
Pha£
, 
REAL
 
Sam∂eR©e
, *
èg
)

104 
OSC
 
p
 = (OSCË
	`ß„Æloc
 (1,  (
oscûœt‹
), 
èg
);

105 i‡((
	`OSCty≥
 (
p
Ë
Ty≥Osc
Ë=
Com∂exT⁄e
)

106 
	`OSCba£
 (
p
Ë(*Ë
	`√wCXB
 (
size
,

107 
NULL
,

110 
	`OSCba£
 (
p
Ë(*Ë
	`√wRLB
 (
size
,

111 
NULL
, "real buffer for oscillator output");

112 
	`OSCsize
 (
p
Ë
size
;

113 
	`OSC‰eq
 (
p
Ë2.0 * 
M_PI
 * 
Fªquícy
 / 
Sam∂eR©e
;

114 
	`OSCpha£
 (
p
Ë
Pha£
;

115  
p
;

116 
	}
}

119 
	$dñOSC
 (
OSC
 
p
)

121 i‡(
p
->
Oscûœt‹Ty≥
 =
Com∂exT⁄e
)

122 
	`dñCXB
 ((
CXB
Ë
p
->
sig«Õoöts
);

124 
	`dñRLB
 ((
RLB
Ë
p
->
sig«Õoöts
);

125 i‡(
p
)

126 
	`ß„‰ì
 ((*Ë
p
);

127 
	}
}

	@oscillator.h

35 #i‚de‡
_oscûœt‹_h


36 
	#_oscûœt‹_h


	)

38 
	#Com∂exT⁄e
 1

	)

39 
	#RólT⁄e
 0

	)

40 
	tOscTy≥
;

42 
	s_oscûœt‹


44 
	msize
;

45 *
	msig«Õoöts
;

46 
	mPha£
;

47 
	mFªquícy
;

48 
OscTy≥
 
	mOscûœt‹Ty≥
;

49 } 
	toscûœt‹
, *
	tOSC
;

52 
	#OSCba£
(
p
Ë(’)->
sig«Õoöts
)

	)

53 
	#OSCCba£
(
p
Ë(
	`CXBba£
((
CXB
)(’)->
sig«Õoöts
)))

	)

54 
	#OSCCd©a
(
p
, 
i
Ë(
	`CXBba£
((
CXB
)(’)->
sig«Õoöts
))[(i)])

	)

55 
	#OSCªÆ
(
p
, 
i
Ë(
	`CXBba£
((
CXB
)(’)->
sig«Õoöts
))[(i)].
ª
)

	)

56 
	#OSCimag
(
p
, 
i
Ë(
	`CXBba£
((
CXB
)(’)->
sig«Õoöts
))[(i)].
im
)

	)

58 
	#OSCRba£
(
p
Ë(
	`RLBba£
((
RLB
)(’)->
sig«Õoöts
)))

	)

59 
	#OSCRd©a
(
p
, 
i
Ë(
	`RLBba£
((
RLB
)(’)->
sig«Õoöts
))[(i)])

	)

61 
	#OSCsize
(
p
Ë(’)->
size
)

	)

62 
	#OSCpha£
(
p
Ë(’)->
Pha£
)

	)

63 
	#OSC‰eq
(
p
Ë(’)->
Fªquícy
)

	)

64 
	#OSCty≥
(
p
Ë(’)->
Oscûœt‹Ty≥
)

	)

66 
Com∂exOSC
 (
OSC
);

67 
RólOSC
 (
OSC
);

68 
OSC
 
√wOSC
 (
size
, 
OscTy≥
 
Ty≥Osc
, 
Fªquícy
,

69 
Pha£
, 
REAL
 
Sam∂eR©e
, *
èg
);

70 
dñOSC
 (
OSC
);

71 
fixOSC
 (
OSC
 
p
, 
Fªquícy
, 
Pha£
, 
REAL
 
Sam∂eR©e
);

	@ovsv.c

34 
	~<ovsv.h
>

40 
	$fûãr_OvSv
(
FûtOvSv
 
pÊt
) {

41 
i
, 
m
 = 
pÊt
->
f·Àn
, 
n
 =ÖÊt->
buÊí
;

42 
COMPLEX
 *
zfvec
 = 
pÊt
->zfvec,

43 *
zivec
 = 
pÊt
->zivec,

44 *
zovec
 = 
pÊt
->zovec,

45 *
zrvec
 = 
pÊt
->zrvec;

46 
REAL
 
s˛
 = 
pÊt
->
sˇÀ
;

50 
	`f·wf_execuã
(
pÊt
->
pfwd
);

53 
i
 = 0; i < 
m
; i++)

54 
zivec
[
i
] = 
	`Cmul
(zivec[i], 
zfvec
[i]);

58 
	`f·wf_execuã
(
pÊt
->
pöv
);

63 
	`mem˝y
((*)
zrvec
,(c⁄° *)&zrvec[
n
],n*(
COMPLEX
));

64 
	}
}

67 
	$ª£t_OvSv
(
FûtOvSv
 
pÊt
)

69 
	`mem£t
((*Ë
pÊt
->
zrvec
, 0,ÖÊt->
f·Àn
 * (
COMPLEX
));

70 
	`mem£t
((*Ë
pÊt
->
zovec
, 0,ÖÊt->
f·Àn
 * (
COMPLEX
));

71 
	}
}

79 
COMPLEX
 *

80 
	$FûtOvSv_öôpoöt
(
FûtOvSv
 
pÊt
) {

81  &(
pÊt
->
zrvec
[pÊt->
buÊí
]);

82 
	}
}

86 
	$FûtOvSv_öôsize
(
FûtOvSv
 
pÊt
) {

87  (
pÊt
->
f·Àn
 -ÖÊt->
buÊí
);

88 
	}
}

91 
COMPLEX
 *

92 
	$FûtOvSv_„tchpoöt
(
FûtOvSv
 
pÊt
) {

93  &(
pÊt
->
zrvec
[pÊt->
buÊí
]);

94 
	}
}

99 
	$FûtOvSv_„tchsize
(
FûtOvSv
 
pÊt
) {

100  (
pÊt
->
f·Àn
 -ÖÊt->
buÊí
);

101 
	}
}

104 #ifde‡
LHS


105 
COMPLEX
 *

106 
	$FûtOvSv_°‹ïoöt
(
FûtOvSv
 
pÊt
) {

107  ((
pÊt
->
zovec
Ë+ÖÊt->
buÊí
);

108 
	}
}

110 
COMPLEX
 *

111 
	$FûtOvSv_°‹ïoöt
(
FûtOvSv
 
pÊt
) {

112  ((
pÊt
->
zovec
));

113 
	}
}

121 
	$FûtOvSv_°‹esize
(
FûtOvSv
 
pÊt
) {

122  (
pÊt
->
f·Àn
 -ÖÊt->
buÊí
);

123 
	}
}

128 
FûtOvSv


129 
	$√wFûtOvSv
(
COMPLEX
 * 
c€fs
, 
nc€f
, 
pbôs
) {

130 
buÊí
, 
f·Àn
;

131 
FûtOvSv
 
p
;

132 
f·wf_∂™
 
pfwd
, 
pöv
;

133 
COMPLEX
 *
zrvec
, *
zfvec
, *
zivec
, *
zovec
;

134 
p
 = (
FûtOvSv
Ë
	`ß„Æloc
(1, (
fût_ov_sv
), "new overlap/save filter");

135 
buÊí
 = 
	`nblock2
(
nc€f
 - 1), 
f·Àn
 = 2 * buflen;

136 
zrvec
 = 
	`√wvec_COMPLEX_f·w
(
f·Àn
, "raw signal vec inÇewFiltOvSv");

137 
zfvec
 = 
	`√wvec_COMPLEX_f·w
(
f·Àn
, "filter z vec inÇewFiltOvSv");

138 
zivec
 = 
	`√wvec_COMPLEX_f·w
(
f·Àn
, "signal in z vec inÇewFiltOvSv");

139 
zovec
 = 
	`√wvec_COMPLEX_f·w
(
f·Àn
, "signal out z vec inÇewFiltOvSv");

143 
i
;

144 
COMPLEX
 *
zcvec
;

145 
f·wf_∂™
 
±mp
;

147 
zcvec
 = 
	`√wvec_COMPLEX
(
f·Àn
, "temp filter z vec inÇewFiltOvSv");

149 
±mp
 =

150 
	`f·wf_∂™_d·_1d
(
f·Àn
, (
f·wf_com∂ex
 *Ë
zcvec
,

151 (
f·wf_com∂ex
 *Ë
zfvec
, 
FFTW_FORWARD
, 
pbôs
);

153 #ifde‡
LHS


154 
i
 = 0; i < 
nc€f
; i++)

155 
zcvec
[
i
] = 
c€fs
[i];

157 
i
 = 0; i < 
nc€f
; i++)

158 
zcvec
[
f·Àn
 - 
nc€f
 + 
i
] = 
c€fs
[i];

162 
	`f·wf_execuã
(
±mp
);

163 
	`f·wf_de°roy_∂™
(
±mp
);

164 
	`dñvec_COMPLEX
(
zcvec
);

170 
pfwd
 = 
	`f·wf_∂™_d·_1d
(
f·Àn
, (
f·wf_com∂ex
 *Ë
zrvec
,

171 (
f·wf_com∂ex
 *Ë
zivec
,

172 
FFTW_FORWARD
,

173 
pbôs
);

174 
pöv
 = 
	`f·wf_∂™_d·_1d
(
f·Àn
, (
f·wf_com∂ex
 *Ë
zivec
,

175 (
f·wf_com∂ex
 *Ë
zovec
,

176 
FFTW_BACKWARD
,

177 
pbôs
);

179 
p
->
buÊí
 = buflen;

180 
p
->
f·Àn
 = fftlen;

181 
p
->
zfvec
 = zfvec;

182 
p
->
zivec
 = zivec;

183 
p
->
zovec
 = zovec;

184 
p
->
zrvec
 = zrvec;

185 
p
->
pfwd
 =Öfwd;

186 
p
->
pöv
 =Öinv;

187 
p
->
sˇÀ
 = 1.0‡/ (
REAL
Ë
f·Àn
;

188 
	`n‹mÆize_vec_COMPLEX
 (
p
->
zfvec
,Ö->
f·Àn
,Ö->
sˇÀ
);

189  
p
;

190 
	}
}

194 
	$dñFûtOvSv
(
FûtOvSv
 
p
) {

195 i‡(
p
) {

196 
	`dñvec_COMPLEX_f·w
(
p
->
zfvec
);

197 
	`dñvec_COMPLEX_f·w
(
p
->
zivec
);

198 
	`dñvec_COMPLEX_f·w
(
p
->
zovec
);

199 
	`dñvec_COMPLEX_f·w
(
p
->
zrvec
);

200 
	`f·wf_de°roy_∂™
(
p
->
pfwd
);

201 
	`f·wf_de°roy_∂™
(
p
->
pöv
);

202 
	`ß„‰ì
((*Ë
p
);

204 
	}
}

	@ovsv.h

34 #i‚de‡
_ovsv_h


35 
	#_ovsv_h


	)

37 
	~<‰omsys.h
>

38 
	~<b™Æ.h
>

39 
	~<•lôfõlds.h
>

40 
	~<d©©y≥s.h
>

41 
	~<bufvec.h
>

42 
	~<cx›s.h
>

43 
	~<upd©e.h
>

44 
	~<lmadf.h
>

45 
	~<f·w3.h
>

46 
	~<f·w3_fix.h
>

48 
	s_fût_ov_ßv
 {

49 
	mbuÊí
, 
	mf·Àn
;

50 
COMPLEX
 *
	mzfvec
, *
	mzivec
, *
	mzovec
, *
	mzrvec
;

51 
f·wf_∂™
 
	mpfwd
, 
	mpöv
;

52 
REAL
 
	msˇÀ
;

53 } 
	tfût_ov_sv
, *
	tFûtOvSv
;

55 
FûtOvSv
 
√wFûtOvSv
(
COMPLEX
 * 
c€fs
, 
nc€f
, 
pbôs
);

56 
dñFûtOvSv
(
FûtOvSv
 
p
);

58 
COMPLEX
 *
FûtOvSv_öôpoöt
(
FûtOvSv
 
pÊt
);

59 
FûtOvSv_öôsize
(
FûtOvSv
 
pÊt
);

61 
COMPLEX
 *
FûtOvSv_„tchpoöt
(
FûtOvSv
 
pÊt
);

62 
FûtOvSv_„tchsize
(
FûtOvSv
 
pÊt
);

64 
COMPLEX
 *
FûtOvSv_°‹ïoöt
(
FûtOvSv
 
pÊt
);

65 
FûtOvSv_°‹esize
(
FûtOvSv
 
pÊt
);

67 
fûãr_OvSv
(
FûtOvSv
 
pÊt
);

68 
ª£t_OvSv
(
FûtOvSv
 
pÊt
);

	@resample.c

36 
	~<comm⁄.h
>

38 
DâSP_EXP
 
ResSt


39 
	$√wPﬁyPha£FIR
 (
fûãrMem‹yBuffLígth
,

40 
ödexfûtMemBuf
,

41 
öãΩFa˘‹
, 
fûãrPha£Num
, 
deciFa˘‹
)

43 
ResSt
 
tmp
;

44 
tmp
 = (
ResSt
Ë
	`ß„Æloc
 (1,  (
ªßm∂î
), "PF Resampler");

45 
tmp
->
ödexfûtMemBuf
 = indexfiltMemBuf;

46 
tmp
->
öãΩFa˘‹
 = interpFactor;

47 
tmp
->
fûãrPha£Num
 = filterPhaseNum;

48 
tmp
->
deciFa˘‹
 = deciFactor;

49 
tmp
->
numFûtT≠s
 = 31 * 
deciFa˘‹
;

50 
tmp
->
fûãrMem‹yBuffLígth
 =

51 
	`nblock2
 (
	`max
 (
fûãrMem‹yBuffLígth
, 
tmp
->
numFûtT≠s
));

52 
tmp
->
MASK
 =Åmp->
fûãrMem‹yBuffLígth
 - 1;

53 
tmp
->
fûãrMem‹yBuff
 =

54 (
COMPLEX
 *Ë
	`ß„Æloc
 (
tmp
->
fûãrMem‹yBuffLígth
,  (COMPLEX),

56 
tmp
->
fûãr
 =

57 
	`√wFIR_Low∑ss_REAL
 (0.45‡/ (
REAL
Ë
deciFa˘‹
, (REALË
öãΩFa˘‹
,

58 31 * 
öãΩFa˘‹
);

59  
tmp
;

60 
	}
}

63 
	$dñPﬁyPha£FIR
 (
ResSt
 
ªs°
)

65 i‡(
ªs°
)

67 
	`dñFIR_Low∑ss_REAL
 (
ªs°
->
fûãr
);

68 
	`ß„‰ì
 ((*Ë
ªs°
->
fûãrMem‹yBuff
);

69 
	`ß„‰ì
 ((*Ë
ªs°
);

71 
	}
}

73 
DâSP_EXP
 

74 
	$PﬁyPha£FIR
 (
ResSt
 
ªs°
)

128 
i
, 
j
, 
k
, 
jj
;

129 
COMPLEX
 *
ouçå
;

131 
ªs°
->
numOuçutSam∂es
 = 0;

134 
i
 = 0; i < 
ªs°
->
öputAºayLígth
; i++)

141 
ªs°
->
fûãrMem‹yBuff
[ªs°->
ödexfûtMemBuf
] =Ñes°->
öput
[
i
];

142 
j
 = 
ªs°
->
ödexfûtMemBuf
;

143 
jj
 = 
j
;

150 
ªs°
->
ödexfûtMemBuf
 = (ªs°->ödexfûtMemBu‡+ 1Ë&Ñes°->
MASK
;

156 
ªs°
->
fûãrPha£Num
 <Ñes°->
öãΩFa˘‹
)

158 
j
 = 
jj
;

160 
ouçå
 = 
ªs°
->
ouçut
 +Ñes°->
numOuçutSam∂es
;

161 *
ouçå
 = 
cxzîo
;

167 
k
 = 
ªs°
->
fûãrPha£Num
; k <Ñes°->
numFûtT≠s
;

168 
k
 +
ªs°
->
öãΩFa˘‹
)

172 *
ouçå
 =

173 
	`Cadd
 (*
ouçå
,

174 
	`Cs˛
 (
ªs°
->
fûãrMem‹yBuff
[
j
],

175 
	`FIRèp
 (
ªs°
->
fûãr
, 
k
)));

182 
j
 = (j + 
ªs°
->
MASK
) &Ñesst->MASK;

190 *
ouçå
 = 
	`Cs˛
 (*ouçå, (
REAL
Ë
ªs°
->
öãΩFa˘‹
);

191 
ªs°
->
numOuçutSam∂es
 += 1;

197 
ªs°
->
fûãrPha£Num
 +‘es°->
deciFa˘‹
);

201 
ªs°
->
fûãrPha£Num
 -ªs°->
öãΩFa˘‹
;

204 
	}
}

	@resample.h

34 #i‚de‡
_RESAMPLE_H


35 
	#_RESAMPLE_H


	)

37 
	~<comm⁄.h
>

38 
	sªßm∂e_°©e


40 
COMPLEX
 *
	möput
, *
	mouçut
, *
	mfûãrMem‹yBuff
;

41 
RólFIR
 
	mfûãr
;

42 
	mfûãrMem‹yBuffLígth
, 
	möputAºayLígth
, 
	mnumFûtT≠s
,

43 
	mödexfûtMemBuf
, 
	möãΩFa˘‹
, 
	mfûãrPha£Num
, 
	mdeciFa˘‹
,

44 
	mnumOuçutSam∂es
;

45 
	mMASK
;

46 } 
	tªßm∂î
, *
	tResSt
;

48 
DâSP_EXP
 
ResSt
 
√wPﬁyPha£FIR
 (
fûãrMem‹yBuffLígth
,

49 
ödexfûtMemBuf
,

50 
öãΩFa˘‹
,

51 
fûãrPha£Num
, 
deciFa˘‹
);

52 
DâSP_EXP
 
PﬁyPha£FIR
 (
ResSt
 
ªs°
);

53 
DâSP_EXP
 
dñpﬁyPha£FIR
 (
ResSt
 
ªs°
);

	@resampleF.c

36 
	~<comm⁄.h
>

38 
DâSP_EXP
 
ResStF


39 
	$√wPﬁyPha£FIRF
 (
fûãrMem‹yBuffLígth
,

40 
ödexfûtMemBuf
,

41 
öãΩFa˘‹
, 
fûãrPha£Num
, 
deciFa˘‹
)

43 
ResStF
 
tmp
;

44 
tmp
 = (
ResStF
Ë
	`ß„Æloc
 (1,  (
ªßm∂îF
), "PF Resampler");

45 
tmp
->
ödexfûtMemBuf
 = indexfiltMemBuf;

46 
tmp
->
öãΩFa˘‹
 = interpFactor;

47 
tmp
->
fûãrPha£Num
 = filterPhaseNum;

48 
tmp
->
deciFa˘‹
 = deciFactor;

49 
tmp
->
numFûtT≠s
 = 19839;

50 
tmp
->
fûãrMem‹yBuffLígth
 =

51 
	`nblock2
 (
	`max
 (
fûãrMem‹yBuffLígth
, 
tmp
->
numFûtT≠s
));

52 
tmp
->
MASK
 =Åmp->
fûãrMem‹yBuffLígth
 - 1;

53 
tmp
->
fûãrMem‹yBuff
 =

54 (*Ë
	`ß„Æloc
 (
tmp
->
fûãrMem‹yBuffLígth
,  (
REAL
),

56 
tmp
->
fûãr
 =

57 
	`√wFIR_Low∑ss_REAL
 (0.45f, (
REAL
Ë
öãΩFa˘‹
, 
tmp
->
numFûtT≠s
);

59  
tmp
;

60 
	}
}

62 
DâSP_EXP
 

63 
	$dñPﬁyPha£FIRF
 (
ResStF
 
ªs°
)

65 i‡(
ªs°
)

67 
	`dñFIR_Low∑ss_REAL
 (
ªs°
->
fûãr
);

68 
	`ß„‰ì
 ((*Ë
ªs°
->
fûãrMem‹yBuff
);

69 
	`ß„‰ì
 ((*Ë
ªs°
);

71 
	}
}

73 
DâSP_EXP
 

74 
	$PﬁyPha£FIRF
 (
ResStF
 
ªs°
)

128 
i
, 
j
, 
k
, 
jj
;

129 *
ouçå
;

131 
ªs°
->
numOuçutSam∂es
 = 0;

134 
i
 = 0; i < 
ªs°
->
öputAºayLígth
; i++)

141 
ªs°
->
fûãrMem‹yBuff
[ªs°->
ödexfûtMemBuf
] =Ñes°->
öput
[
i
];

142 
j
 = 
ªs°
->
ödexfûtMemBuf
;

143 
jj
 = 
j
;

150 
ªs°
->
ödexfûtMemBuf
 = (ªs°->ödexfûtMemBu‡+ 1Ë&Ñes°->
MASK
;

156 
ªs°
->
fûãrPha£Num
 <Ñes°->
öãΩFa˘‹
)

158 
j
 = 
jj
;

160 
ouçå
 = 
ªs°
->
ouçut
 +Ñes°->
numOuçutSam∂es
;

161 *
ouçå
 = 0.0;

167 
k
 = 
ªs°
->
fûãrPha£Num
; k <Ñes°->
numFûtT≠s
;

168 
k
 +
ªs°
->
öãΩFa˘‹
)

170 *
ouçå
 +=

171 (Ë
	`FIRèp
 (
ªs°
->
fûãr
,

172 
k
Ë* 
ªs°
->
fûãrMem‹yBuff
[
j
];

178 
j
 = (j + 
ªs°
->
MASK
) &Ñesst->MASK;

185 *
ouçå
 *(Ë
ªs°
->
öãΩFa˘‹
;

186 
ªs°
->
numOuçutSam∂es
 += 1;

192 
ªs°
->
fûãrPha£Num
 +‘es°->
deciFa˘‹
);

196 
ªs°
->
fûãrPha£Num
 -ªs°->
öãΩFa˘‹
;

199 
	}
}

	@resampleF.h

34 #i‚de‡
_RESAMPLEF_H


35 
	#_RESAMPLEF_H


	)

37 
	~<comm⁄.h
>

38 
	sªßm∂eF_°©e


40 
REAL
 *
	möput
, *
	mouçut
, *
	mfûãrMem‹yBuff
;

41 
RólFIR
 
	mfûãr
;

42 
	mfûãrMem‹yBuffLígth
, 
	möputAºayLígth
, 
	mnumFûtT≠s
,

43 
	mödexfûtMemBuf
, 
	möãΩFa˘‹
, 
	mfûãrPha£Num
, 
	mdeciFa˘‹
,

44 
	mnumOuçutSam∂es
;

45 
	mMASK
;

46 } 
	tªßm∂îF
, *
	tResStF
;

48 
DâSP_EXP
 
ResStF
 
√wPﬁyPha£FIRF
 (
fûãrMem‹yBuffLígth
,

49 
ödexfûtMemBuf
,

50 
öãΩFa˘‹
,

51 
fûãrPha£Num
, 
deciFa˘‹
);

52 
DâSP_EXP
 
PﬁyPha£FIRF
 (
ResStF
 
ªs°
);

53 
DâSP_EXP
 
dñpﬁyPha£FIRF
 (
ResStF
 
ªs°
);

	@ringb.c

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

29 
	~<rögb.h
>

30 
	~<bufvec.h
>

32 
rögb_t
 *

33 
	$rögb_¸óã
 (
size_t
 
sz2
)

35 
rögb_t
 *
rb
 = (rögb_à*Ë
	`ß„Æloc
 (1,  (ringb_t), "Ring creation");

36 
rb
->
buf
 = 
	`ß„Æloc
 (1, 
sz2
, "Ring buffer buf");

37 
rb
->
size
 = 
sz2
;

38 
rb
->
mask
 =Ñb->
size
 - 1;

39 
rb
->
w±r
 =Ñb->
Ωå
 = 0;

40  
rb
;

41 
	}
}

43 
rögb_Êﬂt_t
 *

44 
	$rögb_Êﬂt_¸óã
 (
size_t
 
sz2
)

46 
rögb_Êﬂt_t
 *
rb
 = (rögb_Êﬂt_à*Ë
	`ß„Æloc
 (1,  (ringb_float_t),

48 
rb
->
buf
 =

49 (*Ë
	`ß„Æloc
 (1, 
sz2
 *  (), "Ring buffer float buf");

50 
rb
->
size
 = 
sz2
;

51 
rb
->
mask
 =Ñb->
size
 - 1;

52 
rb
->
w±r
 =Ñb->
Ωå
 = 0;

53  
rb
;

54 
	}
}

56 
rögb_t
 *

57 
	$rögb_¸óã_u£mem
 (*
u£mem
, 
size_t
 
sz2
)

59 
rögb_t
 *
rb
 = (rögb_à*Ë
u£mem
;

60 
rb
->
buf
 = 
u£mem
 +  (
rögb_t
);

61 
rb
->
size
 = 
sz2
;

62 
rb
->
mask
 =Ñb->
size
 - 1;

63 
rb
->
w±r
 =Ñb->
Ωå
 = 0;

64  
rb
;

65 
	}
}

69 
	$rögb_‰ì
 (
rögb_t
 * 
rb
)

71 
	`ß„‰ì
 (
rb
->
buf
);

72 
	`ß„‰ì
 ((*Ë
rb
);

73 
	}
}

76 
	$rögb_Êﬂt_‰ì
 (
rögb_Êﬂt_t
 * 
rb
)

78 
	`ß„‰ì
 ((*Ë
rb
->
buf
);

79 
	`ß„‰ì
 ((*Ë
rb
);

80 
	}
}

83 
	$rögb_ª£t
 (
rögb_t
 * 
rb
)

86 
rb
->
Ωå
 = 0;

87 
rb
->
w±r
 = 0;

88 
	}
}

91 
	$rögb_Êﬂt_ª£t
 (
rögb_Êﬂt_t
 * 
rb
)

94 
rb
->
Ωå
 = 0;

95 
rb
->
w±r
 = 0;

96 
	}
}

99 
	$rögb_˛ór
 (
rögb_t
 * 
rb
, 
size_t
 
nbyãs
)

101 
size_t
 
i
;

102 
zîo
 = 0;

103 
i
 = 0; i < 
nbyãs
; i++)

104 
	`rögb_wrôe
 (
rb
, &
zîo
, 1);

105 
	}
}

108 
	$rögb_Êﬂt_˛ór
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
nÊﬂts
)

110 
size_t
 
i
;

111 
zîo
 = 0.0f;

112 
i
 = 0; i < 
nÊﬂts
; i++)

113 
	`rögb_Êﬂt_wrôe
 (
rb
, &
zîo
, 1);

114 
	}
}

117 
	$rögb_ª°¨t
 (
rögb_t
 * 
rb
, 
size_t
 
nbyãs
)

119 
	`rögb_ª£t
 (
rb
);

120 
	`rögb_˛ór
 (
rb
, 
nbyãs
);

121 
	}
}

124 
	$rögb_Êﬂt_ª°¨t
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
nÊﬂts
)

126 
	`rögb_Êﬂt_ª£t
 (
rb
);

127 
	`rögb_Êﬂt_˛ór
 (
rb
, 
nÊﬂts
);

128 
	}
}

130 
size_t


131 
	$rögb_ªad_•a˚
 (c⁄° 
rögb_t
 * 
rb
)

133 
size_t
 
w
 = 
rb
->
w±r
, 
r
 =Ñb->
Ωå
;

134 i‡(
w
 > 
r
)

135  
w
 - 
r
;

137  (
rb
->
size
 + 
w
 - 
r
 ) &Ñb->
mask
;

138 
	}
}

140 
size_t


141 
	$rögb_Êﬂt_ªad_•a˚
 (c⁄° 
rögb_Êﬂt_t
 * 
rb
)

143 
size_t
 
w
 = 
rb
->
w±r
, 
r
 =Ñb->
Ωå
;

144 i‡(
w
 > 
r
)

145  
w
 - 
r
;

147  (
rb
->
size
 + 
w
 - 
r
 ) &Ñb->
mask
;

148 
	}
}

150 
size_t


151 
	$rögb_wrôe_•a˚
 (c⁄° 
rögb_t
 * 
rb
)

153 
size_t
 
w
 = 
rb
->
w±r
, 
r
 =Ñb->
Ωå
;

154 i‡(
w
 > 
r
)

155  ((
rb
->
size
 + 
r
 - 
w
Ë&Ñb->
mask
) - 1;

156 i‡(
w
 < 
r
)

157  
r
 - 
w
 - 1;

159  
rb
->
size
 - 1;

160 
	}
}

162 
size_t


163 
	$rögb_Êﬂt_wrôe_•a˚
 (c⁄° 
rögb_Êﬂt_t
 * 
rb
)

165 
size_t
 
w
 = 
rb
->
w±r
, 
r
 =Ñb->
Ωå
;

166 i‡(
w
 > 
r
)

167  ((
rb
->
size
 + 
r
 - 
w
Ë&Ñb->
mask
) - 1;

168 i‡(
w
 < 
r
)

169  
r
 - 
w
 - 1;

171  
rb
->
size
 - 1;

172 
	}
}

174 
size_t


175 
	$rögb_ªad
 (
rögb_t
 * 
rb
, *
de°
, 
size_t
 
˙t
)

177 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
to_ªad
, 
n1
, 
n2
;

178 i‡((
‰ì_˙t
 = 
	`rögb_ªad_•a˚
 (
rb
)) == 0)

180 
to_ªad
 = 
˙t
 > 
‰ì_˙t
 ? free_cnt : cnt;

181 i‡((
˙t2
 = 
rb
->
Ωå
 + 
to_ªad
Ë>Ñb->
size
)

182 
n1
 = 
rb
->
size
 -Ñb->
Ωå
, 
n2
 = 
˙t2
 &Ñb->
mask
;

184 
n1
 = 
to_ªad
, 
n2
 = 0;

185 
	`mem˝y
 (
de°
, &(
rb
->
buf
[rb->
Ωå
]), 
n1
);

186 
rb
->
Ωå
 = (rb->Ωå + 
n1
Ë&Ñb->
mask
;

187 i‡(
n2
)

189 
	`mem˝y
 (
de°
 + 
n1
, &(
rb
->
buf
[rb->
Ωå
]), 
n2
);

190 
rb
->
Ωå
 = (rb->Ωå + 
n2
Ë&Ñb->
mask
;

192  
to_ªad
;

193 
	}
}

195 
size_t


196 
	$rögb_Êﬂt_ªad
 (
rögb_Êﬂt_t
 * 
rb
, *
de°
, 
size_t
 
˙t
)

198 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
to_ªad
, 
n1
, 
n2
;

199 i‡((
‰ì_˙t
 = 
	`rögb_Êﬂt_ªad_•a˚
 (
rb
)) == 0)

201 
to_ªad
 = 
˙t
 > 
‰ì_˙t
 ? free_cnt : cnt;

202 i‡((
˙t2
 = 
rb
->
Ωå
 + 
to_ªad
Ë>Ñb->
size
)

203 
n1
 = 
rb
->
size
 -Ñb->
Ωå
, 
n2
 = 
˙t2
 &Ñb->
mask
;

205 
n1
 = 
to_ªad
, 
n2
 = 0;

206 
	`mem˝y
 (
de°
, &(
rb
->
buf
[rb->
Ωå
]), 
n1
 *  ());

207 
rb
->
Ωå
 = (rb->Ωå + 
n1
Ë&Ñb->
mask
;

208 i‡(
n2
)

210 
	`mem˝y
 (
de°
 + 
n1
, &(
rb
->
buf
[rb->
Ωå
]), 
n2
 *  ());

211 
rb
->
Ωå
 = (rb->Ωå + 
n2
Ë&Ñb->
mask
;

213  
to_ªad
;

214 
	}
}

216 
size_t


217 
	$rögb_≥ek
 (
rögb_t
 * 
rb
, *
de°
, 
size_t
 
˙t
)

219 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
to_ªad
, 
n1
, 
n2
, 
tmp_Ωå
;

220 
tmp_Ωå
 = 
rb
->
Ωå
;

221 i‡((
‰ì_˙t
 = 
	`rögb_ªad_•a˚
 (
rb
)) == 0)

223 
to_ªad
 = 
˙t
 > 
‰ì_˙t
 ? free_cnt : cnt;

224 i‡((
˙t2
 = 
tmp_Ωå
 + 
to_ªad
Ë> 
rb
->
size
)

225 
n1
 = 
rb
->
size
 - 
tmp_Ωå
, 
n2
 = 
˙t2
 &Ñb->
mask
;

227 
n1
 = 
to_ªad
, 
n2
 = 0;

228 
	`mem˝y
 (
de°
, &(
rb
->
buf
[
tmp_Ωå
]), 
n1
);

229 
tmp_Ωå
 = (tmp_Ωå + 
n1
Ë& 
rb
->
mask
;

230 i‡(
n2
)

231 
	`mem˝y
 (
de°
 + 
n1
, &(
rb
->
buf
[
tmp_Ωå
]), 
n2
);

232  
to_ªad
;

233 
	}
}

235 
size_t


236 
	$rögb_wrôe
 (
rögb_t
 * 
rb
, c⁄° *
§c
, 
size_t
 
˙t
)

238 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
to_wrôe
, 
n1
, 
n2
;

239 i‡((
‰ì_˙t
 = 
	`rögb_wrôe_•a˚
 (
rb
)) == 0)

241 
to_wrôe
 = 
˙t
 > 
‰ì_˙t
 ? free_cnt : cnt;

242 i‡((
˙t2
 = 
rb
->
w±r
 + 
to_wrôe
Ë>Ñb->
size
)

243 
n1
 = 
rb
->
size
 -Ñb->
w±r
, 
n2
 = 
˙t2
 &Ñb->
mask
;

245 
n1
 = 
to_wrôe
, 
n2
 = 0;

246 
	`mem˝y
 (&(
rb
->
buf
[rb->
w±r
]), 
§c
, 
n1
);

247 
rb
->
w±r
 = (rb->w±∏+ 
n1
Ë&Ñb->
mask
;

248 i‡(
n2
)

250 
	`mem˝y
 (&(
rb
->
buf
[rb->
w±r
]), 
§c
 + 
n1
, 
n2
);

251 
rb
->
w±r
 = (rb->w±∏+ 
n2
Ë&Ñb->
mask
;

253  
to_wrôe
;

254 
	}
}

256 
size_t


257 
	$rögb_Êﬂt_wrôe
 (
rögb_Êﬂt_t
 * 
rb
, c⁄° *
§c
, 
size_t
 
˙t
)

259 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
to_wrôe
, 
n1
, 
n2
;

260 i‡((
‰ì_˙t
 = 
	`rögb_Êﬂt_wrôe_•a˚
 (
rb
)) == 0)

262 
to_wrôe
 = 
˙t
 > 
‰ì_˙t
 ? free_cnt : cnt;

263 i‡((
˙t2
 = 
rb
->
w±r
 + 
to_wrôe
Ë>Ñb->
size
)

264 
n1
 = 
rb
->
size
 -Ñb->
w±r
, 
n2
 = 
˙t2
 &Ñb->
mask
;

266 
n1
 = 
to_wrôe
, 
n2
 = 0;

267 
	`mem˝y
 (&(
rb
->
buf
[rb->
w±r
]), 
§c
, 
n1
 *  ());

268 
rb
->
w±r
 = (rb->w±∏+ 
n1
Ë&Ñb->
mask
;

269 i‡(
n2
)

271 
	`mem˝y
 (&(
rb
->
buf
[rb->
w±r
]), 
§c
 + 
n1
, 
n2
 *  ());

272 
rb
->
w±r
 = (rb->w±∏+ 
n2
Ë&Ñb->
mask
;

274  
to_wrôe
;

275 
	}
}

278 
	$rögb_ªad_adv™˚
 (
rögb_t
 * 
rb
, 
size_t
 
˙t
)

280 
rb
->
Ωå
 = (rb->Ωå + 
˙t
Ë&Ñb->
mask
;

281 
	}
}

284 
	$rögb_wrôe_adv™˚
 (
rögb_t
 * 
rb
, 
size_t
 
˙t
)

286 
rb
->
w±r
 = (rb->w±∏+ 
˙t
Ë&Ñb->
mask
;

287 
	}
}

290 
	$rögb_Êﬂt_ªad_adv™˚
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
˙t
)

292 
rb
->
Ωå
 = (rb->Ωå + 
˙t
Ë&Ñb->
mask
;

293 
	}
}

296 
	$rögb_Êﬂt_wrôe_adv™˚
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
˙t
)

298 
rb
->
w±r
 = (rb->w±∏+ 
˙t
Ë&Ñb->
mask
;

299 
	}
}

302 
	$rögb_gë_ªad_ve˘‹
 (c⁄° 
rögb_t
 * 
rb
, 
rögb_d©a_t
 * 
vec
)

304 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
w
 = 
rb
->
w±r
, 
r
 =Ñb->
Ωå
;

305 i‡(
w
 > 
r
)

306 
‰ì_˙t
 = 
w
 - 
r
;

308 
‰ì_˙t
 = (
w
 - 
r
 + 
rb
->
size
Ë&Ñb->
mask
;

309 i‡((
˙t2
 = 
r
 + 
‰ì_˙t
Ë> 
rb
->
size
)

311 
vec
[0].
buf
 = &(
rb
->buf[
r
]), vec[0].
Àn
 =Ñb->
size
 -Ñ;

312 
vec
[1].
buf
 = 
rb
->buf, vec[1].
Àn
 = 
˙t2
 &Ñb->
mask
;

316 
vec
[0].
buf
 = &(
rb
->buf[
r
]), vec[0].
Àn
 = 
‰ì_˙t
;

317 
vec
[1].
Àn
 = 0;

319 
	}
}

322 
	$rögb_gë_wrôe_ve˘‹
 (c⁄° 
rögb_t
 * 
rb
, 
rögb_d©a_t
 * 
vec
)

324 
size_t
 vﬁ©ûê
‰ì_˙t
, 
˙t2
, 
w
 = 
rb
->
w±r
, 
r
 =Ñb->
Ωå
;

325 i‡(
w
 > 
r
)

326 
‰ì_˙t
 = ((
r
 - 
w
 + 
rb
->
size
Ë&Ñb->
mask
) - 1;

327 i‡(
w
 < 
r
)

328 
‰ì_˙t
 = 
r
 - 
w
 - 1;

330 
‰ì_˙t
 = 
rb
->
size
 - 1;

331 i‡((
˙t2
 = 
w
 + 
‰ì_˙t
Ë> 
rb
->
size
)

333 
vec
[0].
buf
 = &(
rb
->buf[
w
]), vec[0].
Àn
 =Ñb->
size
 - w;

334 
vec
[1].
buf
 = 
rb
->buf, vec[1].
Àn
 = 
˙t2
 &Ñb->
mask
;

338 
vec
[0].
buf
 = &(
rb
->buf[
w
]), vec[0].
Àn
 = 
‰ì_˙t
;

339 
vec
[1].
Àn
 = 0;

341 
	}
}

	@ringb.h

27 #i‚de‡
_rögb_h


28 
	#_rögb_h


	)

30 
	~<sys/ty≥s.h
>

34 *
	mbuf
;

35 
size_t
 
	mÀn
;

36 } 
	trögb_d©a_t
;

40 *
	mbuf
;

41 
size_t
 
	mw±r
, 
	mΩå
, 
	msize
, 
	mmask
;

42 } 
	trögb_t
;

46 *
	mbuf
;

47 
size_t
 
	mÀn
;

48 } 
	trögb_Êﬂtd©a_t
;

52 *
	mbuf
;

53 
size_t
 
	mw±r
, 
	mΩå
, 
	msize
, 
	mmask
;

54 } 
	trögb_Êﬂt_t
;

66 
rögb_t
 *
rögb_¸óã_u£mem
 (*
u£mem
, 
size_t
 
sz2
);

78 
rögb_t
 *
rögb_¸óã
 (
size_t
 
sz2
);

79 
rögb_Êﬂt_t
 *
rögb_Êﬂt_¸óã
 (
size_t
 
sz2
);

84 
rögb_‰ì
 (
rögb_t
 * 
rb
);

85 
rögb_Êﬂt_‰ì
 (
rögb_Êﬂt_t
 * 
rb
);

105 
rögb_gë_ªad_ve˘‹
 (c⁄° 
rögb_t
 * 
rb
, 
rögb_d©a_t
 * 
vec
);

122 
rögb_gë_wrôe_ve˘‹
 (c⁄° 
rögb_t
 * 
rb
, 
rögb_d©a_t
 * 
vec
);

133 
size_t
 
rögb_ªad
 (
rögb_t
 * 
rb
, *
de°
, size_à
˙t
);

134 
size_t
 
rögb_Êﬂt_ªad
 (
rögb_Êﬂt_t
 * 
rb
, *
de°
, size_à
˙t
);

149 
size_t
 
rögb_≥ek
 (
rögb_t
 * 
rb
, *
de°
, size_à
˙t
);

160 
rögb_ªad_adv™˚
 (
rögb_t
 * 
rb
, 
size_t
 
˙t
);

161 
rögb_Êﬂt_ªad_adv™˚
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
˙t
);

167 
size_t
 
rögb_ªad_•a˚
 (c⁄° 
rögb_t
 * 
rb
);

168 
size_t
 
rögb_Êﬂt_ªad_•a˚
 (c⁄° 
rögb_Êﬂt_t
 * 
rb
);

173 
rögb_ª£t
 (
rögb_t
 * 
rb
);

174 
rögb_Êﬂt_ª£t
 (
rögb_Êﬂt_t
 * 
rb
);

182 
size_t
 
rögb_wrôe
 (
rögb_t
 * 
rb
, c⁄° *
§c
, size_à
˙t
);

183 
size_t
 
rögb_Êﬂt_wrôe
 (
rögb_Êﬂt_t
 * 
rb
, c⁄° *
§c
,

184 
size_t
 
˙t
);

194 
rögb_wrôe_adv™˚
 (
rögb_t
 * 
rb
, 
size_t
 
˙t
);

195 
rögb_Êﬂt_wrôe_adv™˚
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
˙t
);

201 
size_t
 
rögb_wrôe_•a˚
 (c⁄° 
rögb_t
 * 
rb
);

202 
size_t
 
rögb_Êﬂt_wrôe_•a˚
 (c⁄° 
rögb_Êﬂt_t
 * 
rb
);

208 
rögb_˛ór
 (
rögb_t
 * 
rb
, 
size_t
 
nbyãs
);

209 
rögb_Êﬂt_˛ór
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
nÊﬂts
);

217 
rögb_ª°¨t
 (
rögb_t
 * 
rb
, 
size_t
 
nbyãs
);

218 
rögb_Êﬂt_ª°¨t
 (
rögb_Êﬂt_t
 * 
rb
, 
size_t
 
nÊﬂts
);

	@sdr.c

34 
	~<comm⁄.h
>

40 
	$ª£t_mëîs
 (
thªad
)

42 i‡(
uni
[
thªad
].
mëî
.
Êag
)

44 
i
, 
k
;

45 
i
 = 0; i < 
RXMETERPTS
; i++)

46 
k
 = 0; k < 
MAXRX
; k++)

47 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
i
] = -200.0;

48 
i
 = 0; i < 
TXMETERPTS
; i++)

49 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
i
] = -200.0;

51 
	}
}

54 
	$ª£t_•e˘rum
 (
thªad
)

56 i‡(
uni
[
thªad
].
•ec
.
Êag
)

57 
	`ªöô_•e˘rum
 (&
uni
[
thªad
].
•ec
);

58 
	}
}

61 
	$ª£t_cou¡îs
 (
thªad
)

63 
k
;

64 
k
 = 0; k < 
uni
[
thªad
].
mu…úx
.
ƒx
; k++)

65 
rx
[
thªad
][
k
].
tick
 = 0;

66 
tx
[
thªad
].
tick
 = 0;

67 
	}
}

75 
PRIVATE
 

76 
	$£tup_Æl
 (
REAL
 
øã
, 
buÊí
, 
SDRMODE
 
mode
, *
wisdom
,

77 
•ecsize
, 
numªcv
, 
˝dsize
, 
thªad
)

79 
uni
[
thªad
].
ßm∂î©e
 = 
øã
;

80 
uni
[
thªad
].
buÊí
 = buflen;

81 
uni
[
thªad
].
mode
.
sdr
 = mode;

82 i‡(
thªad
 !1Ë
uni
[thªad].
mode
.
åx
 = 
RX
;

83 
uni
[
thªad
].
mode
.
åx
 = 
TX
;

85 
uni
[
thªad
].
wisdom
.
∑th
 = wisdom;

86 
uni
[
thªad
].
wisdom
.
bôs
 = 
FFTW_ESTIMATE
;

88 
FILE
 *
f
 = 
	`f›í
 (
uni
[
thªad
].
wisdom
.
∑th
, "r");

89 i‡(
f
)

91 
wisdom°rög
[32768];

92 
	`‰ód
(
wisdom°rög
,1,32768,
f
);

93 i‡(
	`f·wf_imp‹t_wisdom_‰om_°rög
 (
wisdom°rög
) != 0)

94 
uni
[
thªad
].
wisdom
.
bôs
 = 
FFTW_MEASURE
;

95 
	`f˛o£
 (
f
);

99 i‡(
uni
[
thªad
].
mëî
.
Êag
)

101 
	`ª£t_mëîs
 (
thªad
);

104 
uni
[
thªad
].
•ec
.
rxk
 = 0;

105 
uni
[
thªad
].
•ec
.
buÊí
 = uni[thread].buflen;

106 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

107 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_FILT
;

108 
uni
[
thªad
].
•ec
.
size
 = 
•ecsize
;

109 
uni
[
thªad
].
•ec
.
∂™bôs
 = uni[thªad].
wisdom
.
bôs
;

110 
	`öô_•e˘rum
 (&
uni
[
thªad
].
•ec
);

114 
uni
[
thªad
].
mu…úx
.
lis
 = 0;

115 
uni
[
thªad
].
mu…úx
.
ƒx
 = 
numªcv
;

118 
uni
[
thªad
].
mix
.
rx
.
Êag
 = uni[thªad].mix.
tx
.Êag = 
FALSE
;

119 
uni
[
thªad
].
mix
.
rx
.
gaö
 = uni[thªad].mix.
tx
.gain = 1.0;

121 
uni
[
thªad
].
˝dÀn
 = 
˝dsize
;

123 
uni
[
thªad
].
tick
 = uni[thªad].
ﬁdtick
 = 0;

124 
	}
}

128 
PRIVATE
 

129 
	$£tup_rx
 (
k
, 
thªad
)

132 i‡(
thªad
 == 0) {

133 
divîsôy
.
gaö
 = 1.0;

134 
divîsôy
.
sˇœr
 = 
	`Cm∂x
(1.0,0);

136 
rx
[
thªad
][
k
].
iqfix
 = 
	`√wC‹ª˘IQ
 (0.0, 1.0, 0.000f);

138 
rx
[
thªad
][
k
].
iqfix
->
wbú_°©e
 = 
Ju°SayNo
;

140 
rx
[
thªad
][
k
].
fût
.
c€f
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (150.0,

141 2850.0, 
uni
[
thªad
].
ßm∂î©e
, uni[thªad].
buÊí
 + 1);

142 
rx
[
thªad
][
k
].
fût
.
ovsv
 =

143 
	`√wFûtOvSv
 (
	`FIRc€f
 (
rx
[
thªad
][
k
].
fût
.
c€f
), 
	`FIRsize
 (rx[thread][k].filt.coef),

144 
uni
[
thªad
].
wisdom
.
bôs
);

145 
rx
[
thªad
][
k
].
ªßm∂e
.
Êag
 = 
FALSE
;

146 
	`n‹mÆize_vec_COMPLEX
 (
rx
[
thªad
][
k
].
fût
.
ovsv
->
zfvec
,Ñx[thªad][k].fût.ovsv->
f·Àn
,Ñx[thªad][k].fût.ovsv->
sˇÀ
);

148 
rx
[
thªad
][
k
].
ouçut_gaö
=1.0f;

151 
rx
[
thªad
][
k
].
fût
.
ßve
 =

152 
	`√wvec_COMPLEX
 (
rx
[
thªad
][
k
].
fût
.
ovsv
->
f·Àn
, "RX filter cache");

153 
	`mem˝y
 ((*Ë
rx
[
thªad
][
k
].
fût
.
ßve
, (*Ërx[thªad][k].fût.
ovsv
->
zfvec
,

154 
rx
[
thªad
][
k
].
fût
.
ovsv
->
f·Àn
 *  (
COMPLEX
));

159 
rx
[
thªad
][
k
].
buf
.
i
 = 
	`√wCXB
 (
	`FûtOvSv_„tchsize
 (rx[thªad][k].
fût
.
ovsv
),

160 
	`FûtOvSv_„tchpoöt
 (
rx
[
thªad
][
k
].
fût
.
ovsv
),

163 
rx
[
thªad
][
k
].
buf
.
o
 = 
	`√wCXB
 (
	`FûtOvSv_°‹esize
 (rx[thªad][k].
fût
.
ovsv
),

164 
	`FûtOvSv_°‹ïoöt
 (
rx
[
thªad
][
k
].
fût
.
ovsv
),

167 
rx
[
thªad
][
k
].
dcb
 = 
	`√wDCBlockî
(
DCB_SINGLE_POLE
,Ñx[thªad][k].
buf
.
i
);

168 
rx
[
thªad
][
k
].
dcb
->
Êag
 = 
FALSE
;

171 
rx
[
thªad
][
k
].
osc
.
‰eq
 = -9000.0;

172 
rx
[
thªad
][
k
].
osc
.
pha£
 = 0.0;

173 
rx
[
thªad
][
k
].
osc
.
gí
 = 
	`√wOSC
 (
uni
[thªad].
buÊí
,

174 
Com∂exT⁄e
,

175 
rx
[
thªad
][
k
].
osc
.
‰eq
,

176 
rx
[
thªad
][
k
].
osc
.
pha£
,

177 
uni
[
thªad
].
ßm∂î©e
, "SDR RX Oscillator");

179 
rx
[
thªad
][
k
].
dâ•agc
.
gí
 = 
	`√wDâSPAgc
 (

180 
agcMED
,

181 
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

182 
	`CXBsize
 (
rx
[
thªad
][
k
].
buf
.
o
),

188 
uni
[
thªad
].
ßm∂î©e
,

194 
rx
[
thªad
][
k
].
dâ•agc
.
Êag
 = 
TRUE
;

196 
rx
[
thªad
][
k
].
gøpheq
.
gí
 = 
	`√w_EQ
 (rx[thªad][k].
buf
.
o
, 
uni
[thªad].
ßm∂î©e
, uni[thªad].
wisdom
.
bôs
);

197 
rx
[
thªad
][
k
].
gøpheq
.
Êag
 = 
FALSE
;

200 
rx
[
thªad
][
k
].
am
.
gí
 = 
	`√wAMD
 (

201 
uni
[
thªad
].
ßm∂î©e
,

206 
	`CXBsize
 (
rx
[
thªad
][
k
].
buf
.
o
),

207 
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

208 
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

209 
AMdë
,

213 
rx
[
thªad
][
k
].
fm
.
gí
 = 
	`√wFMD
 (

214 
uni
[
thªad
].
ßm∂î©e
,

219 
	`CXBsize
 (
rx
[
thªad
][
k
].
buf
.
o
),

220 
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

221 
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

225 
rx
[
thªad
][
k
].
™f
.
gí
 = 
	`√w_lm§
 (

226 
rx
[
thªad
][
k
].
buf
.
o
,

231 
LMADF_INTERFERENCE
);

232 
rx
[
thªad
][
k
].
™f
.
Êag
 = 
FALSE
;

234 
rx
[
thªad
][
k
].
b™f
.
gí
 = 
	`√w_blms
(

235 
rx
[
thªad
][
k
].
buf
.
o
,

238 
LMADF_INTERFERENCE
,

239 
uni
->
wisdom
.
bôs
);

240 
rx
[
thªad
][
k
].
b™f
.
Êag
 = 
FALSE
;

242 
rx
[
thªad
][
k
].
™r
.
gí
 = 
	`√w_lm§
 (

243 
rx
[
thªad
][
k
].
buf
.
o
,

248 
LMADF_NOISE
);

249 
rx
[
thªad
][
k
].
™r
.
Êag
 = 
FALSE
;

251 
rx
[
thªad
][
k
].
b™r
.
gí
 = 
	`√w_blms
(

252 
rx
[
thªad
][
k
].
buf
.
o
,

255 
LMADF_NOISE
,

256 
uni
->
wisdom
.
bôs
);

257 
rx
[
thªad
][
k
].
b™r
.
Êag
 = 
FALSE
;

260 
rx
[
thªad
][
k
].
nb
.
thªsh
 = 3.3f;

261 
rx
[
thªad
][
k
].
nb
.
gí
 = 
	`√w_noi£bœnkî
 (rx[thªad][k].
buf
.
i
,Ñx[thªad][k].nb.
thªsh
);

262 
rx
[
thªad
][
k
].
nb
.
Êag
 = 
FALSE
;

264 
rx
[
thªad
][
k
].
nb_sdrom
.
thªsh
 = 2.5f;

265 
rx
[
thªad
][
k
].
nb_sdrom
.
gí
 = 
	`√w_noi£bœnkî
 (rx[thªad][k].
buf
.
i
,Ñx[thªad][k].nb_sdrom.
thªsh
);

266 
rx
[
thªad
][
k
].
nb_sdrom
.
Êag
 = 
FALSE
;

268 
rx
[
thªad
][
k
].
•Ÿ
.
gí
 = 
	`√wSpŸT⁄eGí
 (

273 
uni
[
thªad
].
buÊí
,

274 
uni
[
thªad
].
ßm∂î©e
);

276 
	`mem£t
 ((*Ë&
rx
[
thªad
][
k
].
squñch
, 0,  (rx[thread][k].squelch));

277 
rx
[
thªad
][
k
].
squñch
.
thªsh
 = -150.0;

278 
rx
[
thªad
][
k
].
squñch
.
powî
 = 0.0;

279 
rx
[
thªad
][
k
].
squñch
.
Êag
 =Ñx[thªad][k].squñch.
ru¬ög
 =Ñx[thªad][k].squñch.
£t
 = 
FALSE
;

280 
rx
[
thªad
][
k
].
squñch
.
num
 = 
uni
[thªad].
buÊí
 - 48;

282 
rx
[
thªad
][
k
].
˝d
.
gí
 = 
	`√wWSCom∑ndî
 (
uni
[thªad].
˝dÀn
, 0.0,Ñx[thªad][k].
buf
.
o
);

283 
rx
[
thªad
][
k
].
˝d
.
Êag
 = 
FALSE
;

285 
rx
[
thªad
][
k
].
mode
 = 
uni
[thªad].mode.
sdr
;

286 
rx
[
thªad
][
k
].
bö
.
Êag
 = 
FALSE
;

289 
REAL
 
pos
 = 0.5,

290 
thëa
 = (
REAL
Ë((1.0 - 
pos
Ë* 
M_PI
 / 2.0);

291 
rx
[
thªad
][
k
].
azim
 = 
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
thëa
), (
IMAG
Ë
	`sö
 (theta));

294 
rx
[
thªad
][
k
].
tick
 = 0;

295 
	}
}

299 
PRIVATE
 

300 
	$£tup_tx
 (
thªad
)

303 
tx
[
thªad
].
iqfix
 = 
	`√wC‹ª˘IQ
 (0.0, 1.0, 0.0);

304 
tx
[
thªad
].
fût
.
c€f
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (300.0, 3000.0,

305 
uni
[
thªad
].
ßm∂î©e
, uni[thªad].
buÊí
 + 1);

306 
tx
[
thªad
].
fût
.
ovsv
 = 
	`√wFûtOvSv
 (
	`FIRc€f
 (tx[thªad].fût.
c€f
),

307 
	`FIRsize
 (
tx
[
thªad
].
fût
.
c€f
), 
uni
[thªad].
wisdom
.
bôs
);

308 
tx
[
thªad
].
fût
.
ovsv_¥e
 = 
	`√wFûtOvSv
 (
	`FIRc€f
 (tx[thªad].fût.
c€f
),

309 
	`FIRsize
 (
tx
[
thªad
].
fût
.
c€f
), 
uni
[thªad].
wisdom
.
bôs
);

310 
	`n‹mÆize_vec_COMPLEX
 (
tx
[
thªad
].
fût
.
ovsv
->
zfvec
,Åx[thªad].fût.ovsv->
f·Àn
,tx[thªad].fût.ovsv->
sˇÀ
);

313 
tx
[
thªad
].
fût
.
ßve
 = 
	`√wvec_COMPLEX
 (tx[thªad].fût.
ovsv
->
f·Àn
, "TX filter cache");

314 
	`mem˝y
 ((*Ë
tx
[
thªad
].
fût
.
ßve
,

315 (*Ë
tx
[
thªad
].
fût
.
ovsv
->
zfvec
,

316 
tx
[
thªad
].
fût
.
ovsv
->
f·Àn
 *  (
COMPLEX
));

319 
tx
[
thªad
].
buf
.
i
 = 
	`√wCXB
 (
	`FûtOvSv_„tchsize
 (tx[thªad].
fût
.
ovsv
),

320 
	`FûtOvSv_„tchpoöt
 (
tx
[
thªad
].
fût
.
ovsv
), "initÅx[thread].buf.i");

321 
tx
[
thªad
].
buf
.
o
 = 
	`√wCXB
 (
	`FûtOvSv_°‹esize
 (tx[thªad].
fût
.
ovsv
),

322 
	`FûtOvSv_°‹ïoöt
 (
tx
[
thªad
].
fût
.
ovsv
), "initÅx[thread].buf.o");

323 
tx
[
thªad
].
buf
.
ic
 = 
	`√wCXB
 (
	`FûtOvSv_„tchsize
 (tx[thªad].
fût
.
ovsv_¥e
),

324 
	`FûtOvSv_„tchpoöt
 (
tx
[
thªad
].
fût
.
ovsv_¥e
), "initÅx[thread].buf.ic");

325 
tx
[
thªad
].
buf
.
oc
 = 
	`√wCXB
 (
	`FûtOvSv_°‹esize
 (tx[thªad].
fût
.
ovsv_¥e
),

326 
	`FûtOvSv_°‹ïoöt
 (
tx
[
thªad
].
fût
.
ovsv_¥e
), "initÅx[thread].buf.oc");

328 
tx
[
thªad
].
dcb
.
Êag
 = 
FALSE
;

329 
tx
[
thªad
].
dcb
.
gí
 = 
	`√wDCBlockî
 (
DCB_MED
,Åx[thªad].
buf
.
i
);

332 
tx
[
thªad
].
osc
.
‰eq
 = 0.0;

333 
tx
[
thªad
].
osc
.
pha£
 = 0.0;

334 
tx
[
thªad
].
osc
.
gí
 = 
	`√wOSC
 (
uni
[thªad].
buÊí
,

335 
Com∂exT⁄e
,

336 
tx
[
thªad
].
osc
.
‰eq
,

337 
tx
[
thªad
].
osc
.
pha£
, 
uni
[thªad].
ßm∂î©e
, "SDR TX Oscillator");

339 
tx
[
thªad
].
am
.
ˇºõr_Àvñ
 = 0.5f;

340 
tx
[
thªad
].
fm
.
cvtmod2‰eq
 = (
REAL
Ë(3000.0 * 
TWOPI
 / 
uni
[thªad].
ßm∂î©e
);

342 
tx
[
thªad
].
Àvñî
.
gí
 = 
	`√wDâSPAgc
 (

344 
	`CXBba£
 (
tx
[
thªad
].
buf
.
i
),

345 
	`CXBsize
 (
tx
[
thªad
].
buf
.
i
),

351 
uni
[
thªad
].
ßm∂î©e
,

356 
tx
[
thªad
].
Àvñî
.
Êag
 = 
TRUE
;

358 
tx
[
thªad
].
gøpheq
.
gí
 = 
	`√w_EQ
 (tx[thªad].
buf
.
i
, 
uni
[thªad].
ßm∂î©e
, uni[thªad].
wisdom
.
bôs
);

359 
tx
[
thªad
].
gøpheq
.
Êag
 = 
FALSE
;

361 
	`mem£t
 ((*Ë&
tx
[
thªad
].
squñch
, 0,  (tx[thread].squelch));

362 
tx
[
thªad
].
squñch
.
thªsh
 = -40.0;

363 
tx
[
thªad
].
squñch
.
©ãn
 = 80.0;

364 
tx
[
thªad
].
squñch
.
powî
 = 0.0;

365 
tx
[
thªad
].
squñch
.
Êag
 = 
FALSE
;

366 
tx
[
thªad
].
squñch
.
ru¬ög
 =Åx[thªad].squñch.
£t
 = 
FALSE
;

367 
tx
[
thªad
].
squñch
.
num
 = 
uni
[thªad].
buÊí
 - 48;

369 
tx
[
thªad
].
Æc
.
gí
 = 
	`√wDâSPAgc
 (

371 
	`CXBba£
 (
tx
[
thªad
].
buf
.
i
),

372 
	`CXBsize
 (
tx
[
thªad
].
buf
.
i
),

378 
uni
[
thªad
].
ßm∂î©e
, 1.0,

382 
tx
[
thªad
].
Æc
.
Êag
 = 
TRUE
;

384 
tx
[
thªad
].
•r
.
gí
 =

385 
	`√wS≥echProc
 (0.4f, 3.0, 
	`CXBba£
 (
tx
[
thªad
].
buf
.
i
), 
	`CXBsize
 (tx[thªad].buf.
o
));

386 
tx
[
thªad
].
•r
.
Êag
 = 
FALSE
;

388 
tx
[
thªad
].
˝d
.
gí
 = 
	`√wWSCom∑ndî
 (
uni
[thªad].
˝dÀn
, (
REAL
)-0.1,Åx[thªad].
buf
.
i
);

389 
tx
[
thªad
].
˝d
.
Êag
 = 
FALSE
;

391 
tx
[
thªad
].
hlb
.
gí
 = 
	`√wHûbîtsim
—x[thªad].
buf
.
i
,Åx[thread].buf.i);

392 
tx
[
thªad
].
hlb
.
Êag
 = 
TRUE
;

396 
tx
[
thªad
].
mode
 = 
uni
[thªad].mode.
sdr
;

398 
tx
[
thªad
].
tick
 = 0;

400 
	}
}

405 
	$£tup_w‹k•a˚
 (
REAL
 
øã
, 
buÊí
, 
SDRMODE
 
mode
,

406 *
wisdom
, 
•ecsize
, 
numªcv
, 
˝dsize
, 
thªad
)

408 
k
;

410 
	`£tup_Æl
 (
øã
, 
buÊí
, 
mode
, 
wisdom
, 
•ecsize
, 
numªcv
, 
˝dsize
, 
thªad
);

412 
k
 = 0; k < 
uni
[
thªad
].
mu…úx
.
ƒx
; k++)

414 
	`£tup_rx
 (
k
, 
thªad
);

415 
uni
[
thªad
].
mu…úx
.
a˘
[
k
] = 
FALSE
;

417 
uni
[
thªad
].
mu…úx
.
a˘
[0] = 
TRUE
;

418 
uni
[
thªad
].
mu…úx
.
«c
 = 1;

420 
	`£tup_tx
 (
thªad
);

421 
	}
}

424 
	$de°roy_w‹k•a˚
 (
thªad
)

426 
k
;

430 
	`dñHûsim
(
tx
[
thªad
].
hlb
.
gí
);

431 
	`dñWSCom∑ndî
 (
tx
[
thªad
].
˝d
.
gí
);

432 
	`dñS≥echProc
 (
tx
[
thªad
].
•r
.
gí
);

433 
	`dñDâSPAgc
 (
tx
[
thªad
].
Àvñî
.
gí
);

434 
	`dñDâSPAgc
 (
tx
[
thªad
].
Æc
.
gí
);

435 
	`dñOSC
 (
tx
[
thªad
].
osc
.
gí
);

436 
	`dñDCBlockî
 (
tx
[
thªad
].
dcb
.
gí
);

437 
	`dñvec_COMPLEX
 (
tx
[
thªad
].
fût
.
ßve
);

438 
	`dñFûtOvSv
 (
tx
[
thªad
].
fût
.
ovsv
);

439 
	`dñFIR_B™d∑ss_COMPLEX
 (
tx
[
thªad
].
fût
.
c€f
);

440 
	`dñC‹ª˘IQ
 (
tx
[
thªad
].
iqfix
);

441 
	`dñCXB
 (
tx
[
thªad
].
buf
.
o
);

442 
	`dñCXB
 (
tx
[
thªad
].
buf
.
i
);

445 
k
 = 0; k < 
uni
[
thªad
].
mu…úx
.
ƒx
; k++)

447 
	`dñWSCom∑ndî
 (
rx
[
thªad
][
k
].
˝d
.
gí
);

448 
	`dñSpŸT⁄eGí
 (
rx
[
thªad
][
k
].
•Ÿ
.
gí
);

449 
	`dñDâSPAgc
 (
rx
[
thªad
][
k
].
dâ•agc
.
gí
);

450 
	`dñ_nb
 (
rx
[
thªad
][
k
].
nb_sdrom
.
gí
);

451 
	`dñ_nb
 (
rx
[
thªad
][
k
].
nb
.
gí
);

452 
	`dñ_lm§
 (
rx
[
thªad
][
k
].
™f
.
gí
);

453 
	`dñ_lm§
 (
rx
[
thªad
][
k
].
™r
.
gí
);

454 
	`dñAMD
 (
rx
[
thªad
][
k
].
am
.
gí
);

455 
	`dñFMD
 (
rx
[
thªad
][
k
].
fm
.
gí
);

456 
	`dñOSC
 (
rx
[
thªad
][
k
].
osc
.
gí
);

457 
	`dñvec_COMPLEX
 (
rx
[
thªad
][
k
].
fût
.
ßve
);

458 
	`dñFûtOvSv
 (
rx
[
thªad
][
k
].
fût
.
ovsv
);

459 
	`dñFIR_B™d∑ss_COMPLEX
 (
rx
[
thªad
][
k
].
fût
.
c€f
);

460 
	`dñC‹ª˘IQ
 (
rx
[
thªad
][
k
].
iqfix
);

461 
	`dñCXB
 (
rx
[
thªad
][
k
].
buf
.
o
);

462 
	`dñCXB
 (
rx
[
thªad
][
k
].
buf
.
i
);

466 
	`föish_•e˘rum
 (&
uni
[
thªad
].
•ec
);

468 
	}
}

477 
PRIVATE
 

478 
	$CXBs˛
 (
CXB
 
buff
, 
REAL
 
s˛
)

480 
i
;

481 
i
 = 0; i < 
	`CXBhave
 (
buff
); i++)

482 
	`CXBd©a
 (
buff
, 
i
Ë
	`Cs˛
 (CXBd©®(buff, i), 
s˛
);

483 
	}
}

485 
PRIVATE
 
REAL


486 
	$CXBn‹m
 (
CXB
 
buff
)

488 
i
;

489 
REAL
 
sum
 = 0.0;

490 
i
 = 0; i < 
	`CXBhave
 (
buff
); i++)

491 
sum
 +
	`Csqrmag
 (
	`CXBd©a
 (
buff
, 
i
));

492  (
REAL
Ë
	`sqπ
 (
sum
);

493 
	}
}

495 
PRIVATE
 
REAL


496 
	$CXBn‹msqr
 (
CXB
 
buff
)

498 
i
;

499 
REAL
 
sum
 = 0.0;

500 
i
 = 0; i < 
	`CXBhave
 (
buff
); i++)

501 
sum
 +
	`Csqrmag
 (
	`CXBd©a
 (
buff
, 
i
));

502  (
REAL
Ë(
sum
);

503 
	}
}

505 
PRIVATE
 
REAL


506 
	$CXB≥ak
 (
CXB
 
buff
)

508 
i
;

509 
REAL
 
maxßm
 = 0.0;

510 
i
 = 0; i < 
	`CXBhave
 (
buff
); i++)

511 
maxßm
 = 
	`max
 (
	`Cmag
 (
	`CXBd©a
 (
buff
, 
i
)), maxsam);

512  
maxßm
;

513 
	}
}

515 
PRIVATE
 
REAL
 
	$≥akl
(
CXB
 
buff
)

517 
i
;

518 
REAL
 
maxpwr
 = 0.0;

519 
i
=0; i<
	`CXBhave
(
buff
); i++)

520 
maxpwr
 = 
	`max
(
	`CXBªÆ
(
buff
, 
i
), maxpwr);

521  
maxpwr
;

522 
	}
}

524 
PRIVATE
 
REAL
 
	$≥akr
(
CXB
 
buff
)

526 
i
;

527 
REAL
 
maxpwr
 = 0.0;

528 
i
=0; i<
	`CXBhave
(
buff
); i++)

529 
maxpwr
 = 
	`max
(
	`CXBimag
(
buff
, 
i
), maxpwr);

530  
maxpwr
;

531 
	}
}

533 
PRIVATE
 
REAL


534 
	$CXB≥akpwr
 (
CXB
 
buff
)

536 
i
;

537 
REAL
 
maxpwr
 = 0.0;

538 
i
 = 0; i < 
	`CXBhave
 (
buff
); i++)

539 
maxpwr
 = 
	`max
 (
	`Csqrmag
 (
	`CXBd©a
 (
buff
, 
i
)), maxpwr);

540  
maxpwr
;

541 
	}
}

549 
PRIVATE
 

550 
	$do_rx_mëî
 (
k
, 
thªad
, 
CXB
 
buf
, 
èp
)

552 
COMPLEX
 *
vec
 = 
	`CXBba£
 (
buf
);

553 
i
, 
Àn
 = 
	`CXBhave
 (
buf
);

554 
REAL
 
tmp
;

556 
èp
)

558 
RXMETER_PRE_CONV
:

559 
tmp
 = -10000.0f;

560 
i
 = 0; i < 
Àn
; i++)

561 
tmp
 = (
REAL
Ë
	`max
 (
	`Ábs
 (
vec
[
i
].
ª
),Åmp);

563 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
ADC_REAL
] = (
REAL
Ë(20.0 * 
	`log10
 (
tmp
 + 1e-10));

564 
tmp
 = -10000.0f;

565 
i
 = 0; i < 
Àn
; i++)

566 
tmp
 = (
REAL
Ë
	`max
 (
	`Ábs
 (
vec
[
i
].
im
),Åmp);

567 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
ADC_IMAG
] = (
REAL
Ë(20.0 * 
	`log10
 (
tmp
 + 1e-10));

569 
RXMETER_POST_FILT
:

570 
tmp
 = 0;

571 
i
 = 0; i < 
Àn
; i++)

572 
tmp
 +
	`Csqrmag
 (
vec
[
i
]);

573 
rx
[
thªad
][
k
].
n‹m
 = 
tmp
 / (
REAL
Ë
Àn
;

574 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
SIGNAL_STRENGTH
] =

575 (
REAL
Ë(10.0 * 
	`log10
 (
tmp
 + 1e-20));

576 i‡(
uni
[
thªad
].
mëî
.
rx
.
mode
[
k
] =
SIGNAL_STRENGTH
)

577 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
AVG_SIGNAL_STRENGTH
] = uni[thªad].mëî.rx.vÆ[k][
SIGNAL_STRENGTH
];

578 
tmp
 = 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
AVG_SIGNAL_STRENGTH
];

579 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
AVG_SIGNAL_STRENGTH
] =

580 (
REAL
Ë(0.95 * 
tmp
 +

581 0.05 *
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
SIGNAL_STRENGTH
]);

583 
RXMETER_POST_AGC
:

584 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
k
][
AGC_GAIN
] =

585 (
REAL
Ë(20.0 * 
	`log10
 (
rx
[
thªad
][
k
].
dâ•agc
.
gí
->
gaö
.
now
 + 1e-10));

592 
	}
}

595 
PRIVATE
 

596 
	$do_rx_•e˘rum
 (
k
, 
thªad
, 
CXB
 
buf
, 
ty≥
)

598 i‡(
uni
[
thªad
].
•ec
.
Êag
 && 
k
 =uni[thªad].•ec.
rxk
 && 
ty≥
 == uni[thread].spec.type)

600 i‡((
uni
[
thªad
].
•ec
.
ty≥
 =
SPEC_POST_DET
Ë&& (!
rx
[thªad][
k
].
bö
.
Êag
))

602 
i
;

603 
i
=0; i<
	`CXBhave
(
rx
[
thªad
][
k
].
buf
.
o
);i++)

604 
	`CXBd©a
(
uni
[
thªad
].
•ec
.
accum
, uni[thªad].•ec.
fûl
+
i
Ë
	`Cm∂x
(
	`CXBªÆ
(
rx
[thªad][
k
].
buf
.
o
, i)*1.414f, 0.0);

608 
	`mem˝y
 ((*Ë&
	`CXBd©a
 (
uni
[
thªad
].
•ec
.
accum
, uni[thªad].•ec.
fûl
),

609 (*Ë
	`CXBba£
 (
buf
), 
	`CXBsize
 (bufË*  (
COMPLEX
));

611 
uni
[
thªad
].
•ec
.
fûl
 = (uni[thªad].•ec.fû»+ 
	`CXBsize
 (
buf
)Ë& uni[thªad].•ec.
mask
;

613 
	}
}

615 
PRIVATE
 

616 
	$do_tx_•e˘rum
 (
thªad
, 
CXB
 
buf
)

618 i‡(
uni
[
thªad
].
•ec
.
ty≥
 =
SPEC_PREMOD
)

620 
i
;

621 
i
=0; i<
	`CXBhave
(
tx
[
thªad
].
buf
.i);i++)

622 
	`CXBd©a
(
uni
[
thªad
].
•ec
.
accum
, uni[thªad].•ec.
fûl
+
i
Ë
	`Cm∂x
(
	`CXBªÆ
(
tx
[thªad].
buf
.i, i), 0.0);

626 
	`mem˝y
 ((*Ë&
	`CXBd©a
 (
uni
[
thªad
].
•ec
.
accum
, uni[thªad].•ec.
fûl
),

627 (*Ë
	`CXBba£
 (
buf
), 
	`CXBsize
 (bufË*  (
COMPLEX
));

629 
uni
[
thªad
].
•ec
.
fûl
 = (uni[thªad].•ec.fû»+ 
	`CXBsize
 (
buf
)Ë& uni[thªad].•ec.
mask
;

630 
	}
}

635 
PRIVATE
 

636 
	$should_do_rx_squñch
 (
k
, 
thªad
)

638 i‡(
rx
[
thªad
][
k
].
squñch
.
Êag
)

640 
i
, 
n
 = 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
o
);

641 
rx
[
thªad
][
k
].
squñch
.
powî
 = 0.0;

643 
i
 = 0; i < 
n
; i++)

644 
rx
[
thªad
][
k
].
squñch
.
powî
 +
	`Csqrmag
 (
	`CXBd©a
 (rx[thªad][k].
buf
.
o
, 
i
));

646 if(10.0 * 
	`log10
 (
rx
[
thªad
][
k
].
squñch
.
powî
 + 1e-17Ë<Ñx[thªad][k].squñch.
thªsh
)

647 
rx
[
thªad
][
k
].
squñch
.
£t
 = 
TRUE
;

649 
rx
[
thªad
][
k
].
squñch
.
£t
 = 
FALSE
;

653 
rx
[
thªad
][
k
].
squñch
.
£t
 = 
FALSE
;

655 
	}
}

657 
PRIVATE
 

658 
	$should_do_tx_squñch
 (
thªad
)

660 i‡(
tx
[
thªad
].
squñch
.
Êag
)

662 
i
, 
n
 = 
	`CXBsize
 (
tx
[
thªad
].
buf
.i);

663 
tx
[
thªad
].
squñch
.
powî
 = 0.0;

665 
i
 = 0; i < 
n
; i++)

666 
tx
[
thªad
].
squñch
.
powî
 +
	`Csqrmag
 (
	`CXBd©a
 (tx[thªad].
buf
.
i
, i));

668 if((-30 + 10.0 * 
	`log10
 (
tx
[
thªad
].
squñch
.
powî
 + 1e-17)Ë<Åx[thªad].squñch.
thªsh
)

669 
tx
[
thªad
].
squñch
.
£t
 = 
TRUE
;

671 
tx
[
thªad
].
squñch
.
£t
 = 
FALSE
;

676 
tx
[
thªad
].
squñch
.
£t
 = 
FALSE
;

678 
	}
}

683 
PRIVATE
 

684 
	$do_squñch
 (
k
, 
thªad
)

686 i‡(!
rx
[
thªad
][
k
].
squñch
.
ru¬ög
)

688 
i
, 
m
 = 
rx
[
thªad
][
k
].
squñch
.
num
, 
n
 = 
	`CXBhave
 (rx[thªad][k].
buf
.
o
) - m;

690 
i
 = 0; i < 
m
; i++)

692 
	`CXBd©a
 (
rx
[
thªad
][
k
].
buf
.
o
, 
i
) =

693 
	`Cs˛
 (
	`CXBd©a
 (
rx
[
thªad
][
k
].
buf
.
o
, 
i
), (
REAL
Ë(1.0 - (REALËò/ 
m
));

696 
	`mem£t
 ((*Ë(
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
Ë+ 
m
), 0, 
n
 *  (
COMPLEX
));

697 
rx
[
thªad
][
k
].
squñch
.
ru¬ög
 = 
TRUE
;

701 
	`mem£t
 ((*Ë
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
),

702 0, 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
o
Ë*  (
COMPLEX
));

704 
	}
}

706 
PRIVATE
 

707 
	$do_tx_squñch
 (
thªad
)

709 
i
, 
m
 = 
tx
[
thªad
].
squñch
.
num
, 
n
 = 
	`CXBhave
 (tx[thªad].
buf
.i);

710 
l
 = (()
tx
[
thªad
].
squñch
.
©ãn
 * 
m
) / 100;

712 i‡(!
tx
[
thªad
].
squñch
.
ru¬ög
)

714 
i
 = 0; i < 
n
; i++)

716 
REAL
 
sˇÀ
 = (REALË(1.0 - (REALË(
i
 < 
l
 ? i :ÜË/ 
m
);

717 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i) =

718 
	`Cs˛
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i), 
sˇÀ
);

720 
tx
[
thªad
].
squñch
.
ru¬ög
 = 
TRUE
;

722 i‡(
l
 !
m
)

724 
REAL
 
sˇÀ
 = (REALË(1.0 - (REALË
l
 / 
m
);

725 
i
 = 0; i < 
n
; i++)

727 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i) =

728 
	`Cs˛
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i), 
sˇÀ
);

733 
	`mem£t
 ((*Ë
	`CXBba£
 (
tx
[
thªad
].
buf
.
i
),

734 0, 
	`CXBhave
 (
tx
[
thªad
].
buf
.
i
Ë*  (
COMPLEX
));

736 
	}
}

741 
PRIVATE
 

742 
	$no_squñch
 (
k
, 
thªad
)

744 i‡(
rx
[
thªad
][
k
].
squñch
.
ru¬ög
)

746 
i
, 
m
 = 
rx
[
thªad
][
k
].
squñch
.
num
;

748 
i
 = 0; i < 
m
; i++)

750 
	`CXBd©a
 (
rx
[
thªad
][
k
].
buf
.
o
, 
i
) =

751 
	`Cs˛
 (
	`CXBd©a
 (
rx
[
thªad
][
k
].
buf
.
o
, 
i
), (
REAL
Ëò/ 
m
);

753 
rx
[
thªad
][
k
].
squñch
.
ru¬ög
 = 
FALSE
;

755 
	}
}

757 
PRIVATE
 

758 
	$no_tx_squñch
 (
thªad
)

760 
i
, 
m
 = 
tx
[
thªad
].
squñch
.
num
, 
n
 = 
	`CXBhave
 (tx[thªad].
buf
.i);

761 
l
 = (((Ë
tx
[
thªad
].
squñch
.
©ãn
Ë* 
m
) / 100;

763 i‡(
tx
[
thªad
].
squñch
.
ru¬ög
)

765 
i
 = 0; i < 
m
; i++)

767 
REAL
 
sˇÀ
 = (REALË(
i
 < 
l
 ?Ü : iË/ 
m
;

768 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i) =

769 
	`Cs˛
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i), 
sˇÀ
);

771 
tx
[
thªad
].
squñch
.
ru¬ög
 = 
FALSE
;

773 
	}
}

778 
	$do_rx_divîsôy_comböe
()

780 
i
, 
n
=
	`CXBhave
 (
rx
[0][0].
buf
.i);

781 
i
=0;i<
n
;i++)

783 
	`CXBd©a
(
rx
[0][0].
buf
.
i
,iË
	`Cs˛
(
	`Cadd
(CXBd©a‘x[0][0].buf.i,i),
	`Cmul
(CXBd©a‘x[2][0].buf.i,i),
divîsôy
.
sˇœr
)),divîsôy.
gaö
);

785 
	}
}

788 
PRIVATE
 

789 
	$do_rx_¥e
 (
k
, 
thªad
)

791 
i
, 
n
 = 
	`mö
 (
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.i), 
uni
[thªad].
buÊí
);

794 
	`do_rx_mëî
 (
k
, 
thªad
, 
rx
[thªad][k].
buf
.
i
, 
RXMETER_PRE_CONV
);

796 i‡(
rx
[
thªad
][
k
].
dcb
->
Êag
Ë
	`DCBlock
(rx[thread][k].dcb);

798 i‡(
rx
[
thªad
][
k
].
nb
.
Êag
)

799 
	`noi£bœnkî
 (
rx
[
thªad
][
k
].
nb
.
gí
);

800 i‡(
rx
[
thªad
][
k
].
nb_sdrom
.
Êag
)

801 
	`SDROMnoi£bœnkî
 (
rx
[
thªad
][
k
].
nb_sdrom
.
gí
);

803 
	`c‹ª˘IQ
 (
rx
[
thªad
][
k
].
buf
.
i
,Ñx[thªad][k].
iqfix
, 
FALSE
, k);

806 i‡(
rx
[
thªad
][
k
].
osc
.
gí
->
Fªquícy
 != 0.0)

808 
	`Com∂exOSC
 (
rx
[
thªad
][
k
].
osc
.
gí
);

809 
i
 = 0; i < 
n
; i++)

810 
	`CXBd©a
 (
rx
[
thªad
][
k
].
buf
.
i
, iË
	`Cmul
 (CXBdata (rx[thread][k].buf.i, i),

811 
	`OSCCd©a
 (
rx
[
thªad
][
k
].
osc
.
gí
, 
i
));

817 
	`do_rx_•e˘rum
 (
k
, 
thªad
, 
rx
[thªad][k].
buf
.
i
, 
SPEC_PRE_FILT
);

819 i‡(
rx
[
thªad
][
k
].
mode
 !
SPEC
)

821 i‡(
rx
[
thªad
][
k
].
ªßm∂e
.
Êag
) {

822 
	`PﬁyPha£FIRF
(
rx
[
thªad
][
k
].
ªßm∂e
.
gí1r
);

823 
	`PﬁyPha£FIRF
(
rx
[
thªad
][
k
].
ªßm∂e
.
gí1i
);

825 i‡(
rx
[
thªad
][
k
].
tick
 == 0)

826 
	`ª£t_OvSv
 (
rx
[
thªad
][
k
].
fût
.
ovsv
);

828 
	`fûãr_OvSv
 (
rx
[
thªad
][
k
].
fût
.
ovsv
);

832 
	`mem˝y
 (
	`CXBba£
 (
rx
[
thªad
][
k
].
buf
.
o
), CXBba£ (rx[thªad][k].buf.
i
),

833  (
COMPLEX
Ë* 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
i
));

836 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
o
ËCXBhavê‘x[thªad][k].buf.
i
);

838 
	`do_rx_mëî
 (
k
, 
thªad
, 
rx
[thªad][k].
buf
.
o
, 
RXMETER_POST_FILT
);

839 
	`do_rx_•e˘rum
 (
k
, 
thªad
, 
rx
[thªad][k].
buf
.
o
, 
SPEC_POST_FILT
);

841 i‡(
rx
[
thªad
][
k
].
˝d
.
Êag
)

842 
	`WSCom∑nd
 (
rx
[
thªad
][
k
].
˝d
.
gí
);

844 
	`should_do_rx_squñch
 (
k
, 
thªad
);

846 
	}
}

848 
PRIVATE
 

849 
	$do_rx_po°
 (
k
, 
thªad
)

851 
i
, 
n
 = 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
o
);

853 if(
rx
[
thªad
][
k
].
squñch
.
£t
)

855 
	`do_squñch
 (
k
, 
thªad
);

857 
	`no_squñch
 (
k
, 
thªad
);

859 i‡(
rx
[
thªad
][
k
].
gøpheq
.
Êag
)

861 
rx
[
thªad
][
k
].
mode
)

863 
DRM
:

864 
DIGL
:

865 
DIGU
:

868 
	`gøphi˚q
 (
rx
[
thªad
][
k
].
gøpheq
.
gí
);

873 
	`do_rx_•e˘rum
(
k
, 
thªad
, 
rx
[thªad][k].
buf
.
o
, 
SPEC_POST_DET
);

878 i‡(
rx
[
thªad
][
k
].
™f
.
Êag
)

880 
rx
[
thªad
][
k
].
mode
)

882 
DRM
:

883 
DIGL
:

884 
DIGU
:

885 
CWL
:

886 
CWU
:

889 
	`lm§_ad≠t
 (
rx
[
thªad
][
k
].
™f
.
gí
);

895 i‡(
rx
[
thªad
][
k
].
™r
.
Êag
)

896 
	`lm§_ad≠t
 (
rx
[
thªad
][
k
].
™r
.
gí
);

902 i‡(
divîsôy
.
Êag
 && (
k
==0Ë&& (
thªad
==2))

903 
i
 = 0; i < 
n
; i++Ë
	`CXBd©a
(
rx
[
thªad
][
k
].
buf
.
o
,iË
cxzîo
;

906 
	`DâSPAgc
 (
rx
[
thªad
][
k
].
dâ•agc
.
gí
,Ñx[thªad][k].
tick
);

914 
	`do_rx_mëî
(
k
, 
thªad
, 
rx
[thªad][k].
buf
.
o
, 
RXMETER_POST_AGC
);

915 
	`do_rx_•e˘rum
 (
k
, 
thªad
, 
rx
[thªad][k].
buf
.
o
, 
SPEC_POST_AGC
);

917 i‡(!
rx
[
thªad
][
k
].
bö
.
Êag
)

918 
i
 = 0; i < 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
o
); i++)

919 
	`CXBimag
 (
rx
[
thªad
][
k
].
buf
.
o
, 
i
Ë
	`CXBªÆ
 (rx[thread][k].buf.o, i);

921 if(
uni
[
thªad
].
mu…úx
.
«c
 == 1)

923 
i
 = 0; i < 
n
; i++)

924 
	`CXBd©a
(
rx
[
thªad
][
k
].
buf
.
o
, 
i
Ë
	`Cs˛
(
	`Cm∂x
‘x[thªad][k].
azim
.
ª
*
	`CXBªÆ
(rx[thread][k].buf.o, i),

925 
rx
[
thªad
][
k
].
azim
.
im
*
	`CXBimag
‘x[thªad][k].
buf
.
o
, 
i
)),1.414f);

929 
i
 = 0; i < 
n
; i++)

930 
	`CXBd©a
(
rx
[
thªad
][
k
].
buf
.
o
, 
i
Ë
	`Cm∂x
‘x[thªad][k].
azim
.
ª
*
	`CXBªÆ
(rx[thread][k].buf.o, i),

931 
rx
[
thªad
][
k
].
azim
.
im
*
	`CXBimag
‘x[thªad][k].
buf
.
o
, 
i
));

934 i‡((
thªad
 =2Ë&& (
divîsôy
.
Êag
))

935 
i
=0;i< 
n
; i++Ë
	`CXBd©a
(
rx
[
thªad
][
k
].
buf
.
o
,iË
cxzîo
;

937 i‡(
rx
[
thªad
][
k
].
ouçut_gaö
 != 1.0)

938 
i
 = 0; i < 
n
; i++Ë
	`CXBd©a
(
rx
[
thªad
][
k
].
buf
.
o
,iË
	`Cs˛
(CXBd©a‘x[thªad][k].buf.o,i),rx[thªad][k].
ouçut_gaö
);

939 i‡(
rx
[
thªad
][
k
].
ªßm∂e
.
Êag
) {

940 
	`PﬁyPha£FIRF
(
rx
[
thªad
][
k
].
ªßm∂e
.
gí2r
);

941 
	`PﬁyPha£FIRF
(
rx
[
thªad
][
k
].
ªßm∂e
.
gí2i
);

944 
	}
}

948 
PRIVATE
 

949 
	$do_rx_SBCW
 (
k
, 
thªad
)

952 
	}
}

954 
PRIVATE
 

955 
	$do_rx_AM
 (
k
, 
thªad
)

957 
	`AMDemod
 (
rx
[
thªad
][
k
].
am
.
gí
);

958 
	}
}

960 
PRIVATE
 

961 
	$do_rx_FM
 (
k
, 
thªad
)

963 
	`FMDemod
 (
rx
[
thªad
][
k
].
fm
.
gí
);

964 
	}
}

966 
PRIVATE
 

967 
	$do_rx_DRM
 (
k
, 
thªad
)

970 
	}
}

972 
PRIVATE
 

973 
	$do_rx_SPEC
 (
k
, 
thªad
)

976 
	}
}

978 
PRIVATE
 

979 
	$do_rx_NIL
 (
k
, 
thªad
)

981 
i
, 
n
 = 
	`mö
 (
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.i), 
uni
[thªad].
buÊí
);

982 
i
 = 0; i < 
n
; i++)

983 
	`CXBd©a
 (
rx
[
thªad
][
k
].
buf
.
o
, 
i
Ë
cxzîo
;

984 
	}
}

988 
PRIVATE
 

989 
	$do_rx
 (
k
, 
thªad
)

991 
	`do_rx_¥e
 (
k
, 
thªad
);

992 
rx
[
thªad
][
k
].
mode
)

994 
DIGU
:

995 
DIGL
:

996 
USB
:

997 
LSB
:

998 
CWU
:

999 
CWL
:

1000 
DSB
:

1001 
	`do_rx_SBCW
 (
k
, 
thªad
);

1003 
AM
:

1004 
SAM
:

1005 
	`do_rx_AM
 (
k
, 
thªad
);

1007 
FMN
:

1008 
	`do_rx_FM
 (
k
, 
thªad
);

1010 
DRM
:

1011 
	`do_rx_DRM
 (
k
, 
thªad
);

1013 
SPEC
:

1015 
	`do_rx_SPEC
 (
k
, 
thªad
);

1018 
	`do_rx_po°
 (
k
, 
thªad
);

1019 
	}
}

1023 
PRIVATE
 
REAL
 
	gmic_avg
 = 0.0f, 
	gmic_pk
 = 0.0f,

1024 
	gÆc_avg
 = 0.0f, 
	gÆc_pk
 = 0.0f,

1025 
	gÀv_avg
 = 0.0f, 
	gÀv_pk
 = 0.0f,

1026 
	geq_avg
 = 0.0f, 
	geq_pk
 = 0.0f,

1027 
	gcomp_avg
 = 0.0f, 
	gcomp_pk
 = 0.0f,

1028 
	g˝dr_avg
 = 0.0f, 
	g˝dr_pk
 = 0.0f;

1031 
PRIVATE
 
REAL
 
	g≥aksmoŸh
 = 0.0;

1032 
PRIVATE
 

1033 
	$do_tx_mëî
 (
thªad
, 
CXB
 
buf
, 
TXMETERTYPE
 
mt
)

1035 
COMPLEX
 *
vec
 = 
	`CXBba£
 (
buf
);

1036 
i
, 
Àn
 = 
	`CXBhave
 (
buf
);

1037 
REAL
 
tmp
 = 0.0f;

1039 
mt
)

1041 
TX_MIC
:

1042 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.i); i++)

1043 
mic_avg
 = (
REAL
) (0.9995 * mic_avg +

1044 0.0005 * 
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i)));

1045 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_MIC
] = (
REAL
Ë(-10.0 * 
	`log10
 (
mic_avg
 + 1e-16));

1047 
mic_pk
 = 
	`CXB≥ak
(
tx
[
thªad
].
buf
.
i
);

1048 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_MIC_PK
] = (
REAL
Ë(-20.0 * 
	`log10
 (
mic_pk
 + 1e-16));

1051 
TX_PWR
:

1052 
i
 = 0, 
tmp
 = 0.0000001f;

1053 
i
 < 
	`CXBhave
 (
tx
[
thªad
].
buf
.
o
); i++)

1054 
tmp
 +
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
o
, 
i
));

1055 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_PWR
] = 
tmp
/(
REAL
Ë
Àn
;

1058 
TX_ALC
:

1059 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.i); i++)

1060 
Æc_avg
 = (
REAL
) (0.9995 *álc_avg +

1061 0.0005 * 
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i)));

1062 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_ALC
] = (
REAL
Ë(-10.0 * 
	`log10
 (
Æc_avg
 + 1e-16));

1064 
Æc_pk
 = 
	`CXB≥ak
(
tx
[
thªad
].
buf
.
i
);

1065 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_ALC_PK
] = (
REAL
Ë(-20.0 * 
	`log10
 (
Æc_pk
+ 1e-16));

1066 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_ALC_G
] = (
REAL
)(20.0*
	`log10
—x[thªad].
Æc
.
gí
->
gaö
.
now
+1e-16));

1071 
TX_EQ
:

1072 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.i); i++)

1073 
eq_avg
 = (
REAL
) (0.9995 *Éq_avg +

1074 0.0005 * 
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i)));

1075 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_EQ
] = (
REAL
Ë(-10.0 * 
	`log10
 (
eq_avg
 + 1e-16));

1077 
eq_pk
 = 
	`CXB≥ak
(
tx
[
thªad
].
buf
.
i
);

1078 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_EQ_PK
] = (
REAL
Ë(-20.0 * 
	`log10
 (
eq_pk
 + 1e-16));

1081 
TX_LVL
:

1082 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.i); i++)

1083 
Àv_avg
 = (
REAL
) (0.9995 *Üev_avg +

1084 0.0005 * 
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i)));

1085 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_LVL
] = (
REAL
Ë(-10.0 * 
	`log10
 (
Àv_avg
 + 1e-16));

1087 
Àv_pk
 = 
	`CXB≥ak
(
tx
[
thªad
].
buf
.
i
);

1088 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_LVL_PK
] = (
REAL
Ë(-20.0 * 
	`log10
 (
Àv_pk
 + 1e-16));

1089 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_LVL_G
] = (
REAL
)(20.0*
	`log10
—x[thªad].
Àvñî
.
gí
->
gaö
.
now
 + 1e-16));

1092 
TX_COMP
:

1093 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.i); i++)

1094 
comp_avg
 = (
REAL
) (0.9995 * comp_avg +

1095 0.0005 * 
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i)));

1096 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_COMP
] = (
REAL
Ë(-10.0 * 
	`log10
 (
comp_avg
 + 1e-16));

1098 
comp_pk
 = 
	`CXB≥ak
(
tx
[
thªad
].
buf
.
i
);

1099 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_COMP_PK
] = (
REAL
Ë(-20.0 * 
	`log10
 (
comp_pk
 + 1e-16));

1102 
TX_CPDR
:

1103 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.i); i++)

1104 
˝dr_avg
 = (
REAL
) (0.9995 * cpdr_avg +

1105 0.0005 * 
	`Csqrmag
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i)));

1106 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_CPDR
] = (
REAL
Ë(-10.0 * 
	`log10
 (
˝dr_avg
 + 1e-16));

1108 
˝dr_pk
 = 
	`CXB≥ak
(
tx
[
thªad
].
buf
.
i
);

1109 
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_CPDR_PK
] = (
REAL
Ë(-20.0 * 
	`log10
 (
˝dr_pk
 + 1e-16));

1115 
	}
}

1117 
PRIVATE
 

1118 
	$do_tx_¥e
 (
thªad
)

1120 
i
, 
n
 = 
	`CXBhave
 (
tx
[
thªad
].
buf
.i);

1121 
i
 = 0; i < 
n
; i++)

1122 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, iË
	`Cm∂x
 (
	`CXBimag
 (tx[thread].buf.i, i), 0.0);

1125 i‡(
tx
[
thªad
].
dcb
.
Êag
)

1126 
	`DCBlock
 (
tx
[
thªad
].
dcb
.
gí
);

1128 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_MIC
);

1131 
	`should_do_tx_squñch
(
thªad
);

1132 if(
tx
[
thªad
].
squñch
.
£t
)

1133 
	`do_tx_squñch
 (
thªad
);

1135 
	`no_tx_squñch
 (
thªad
);

1137 
tx
[
thªad
].
mode
)

1139 
DIGU
:

1140 
DIGL
:

1141 
DRM
:

1142 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_EQ
);

1143 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_LVL
);

1144 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_COMP
);

1146 i‡(
tx
[
thªad
].
Æc
.
Êag
)

1147 
	`DâSPAgc
 (
tx
[
thªad
].
Æc
.
gí
,Åx[thªad].
tick
);

1148 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_ALC
);

1150 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_CPDR
);

1153 i‡(
tx
[
thªad
].
gøpheq
.
Êag
)

1154 
	`gøphi˚q
 (
tx
[
thªad
].
gøpheq
.
gí
);

1155 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_EQ
);

1158 i‡(
tx
[
thªad
].
Àvñî
.
Êag
)

1159 
	`DâSPAgc
 (
tx
[
thªad
].
Àvñî
.
gí
,Åx[thªad].
tick
);

1160 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_LVL
);

1163 i‡(
tx
[
thªad
].
Æc
.
Êag
)

1164 
	`DâSPAgc
 (
tx
[
thªad
].
Æc
.
gí
,Åx[thªad].
tick
);

1165 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_ALC
);

1168 i‡(
tx
[
thªad
].
•r
.
Êag
)

1169 
	`S≥echPro˚ss‹
 (
tx
[
thªad
].
•r
.
gí
);

1170 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_COMP
);

1173 i‡(
tx
[
thªad
].
˝d
.
Êag
)

1174 
	`WSCom∑nd
 (
tx
[
thªad
].
˝d
.
gí
);

1175 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
i
, 
TX_CPDR
);

1180 
	}
}

1182 
PRIVATE
 

1183 
	$do_tx_po°
 (
thªad
)

1185 
	`CXBhave
 (
tx
[
thªad
].
buf
.
o
ËCXBhavê—x[thªad].buf.
i
);

1187 i‡(
tx
[
thªad
].
tick
 == 0)

1188 
	`ª£t_OvSv
 (
tx
[
thªad
].
fût
.
ovsv
);

1191 
	`fûãr_OvSv
 (
tx
[
thªad
].
fût
.
ovsv
);

1192 i‡(
uni
[
thªad
].
•ec
.
Êag
)

1193 
	`do_tx_•e˘rum
 (
thªad
, 
tx
[thªad].
buf
.
o
);

1198 i‡(
tx
[
thªad
].
osc
.
gí
->
Fªquícy
 != 0.0)

1200 
i
;

1201 
	`Com∂exOSC
 (
tx
[
thªad
].
osc
.
gí
);

1202 
i
 = 0; i < 
	`CXBhave
 (
tx
[
thªad
].
buf
.
o
); i++)

1204 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
o
, 
i
) =

1205 
	`Cmul
 (
	`CXBd©a
 (
tx
[
thªad
].
buf
.
o
, 
i
), 
	`OSCCd©a
 (tx[thªad].
osc
.
gí
, i));

1208 
	`c‹ª˘IQ
 (
tx
[
thªad
].
buf
.
o
,Åx[thªad].
iqfix
, 
TRUE
,0);

1209 
	`do_tx_mëî
 (
thªad
, 
tx
[thªad].
buf
.
o
, 
TX_PWR
);

1213 
	}
}

1217 
PRIVATE
 

1218 
	$do_tx_SBCW
 (
thªad
)

1220 
n
 = 
	`mö
 (
	`CXBhave
 (
tx
[
thªad
].
buf
.
i
), 
uni
[thªad].
buÊí
);

1223 i‡(
tx
[
thªad
].
mode
 !
DSB
)

1224 
	`CXBs˛
 (
tx
[
thªad
].
buf
.
i
, 2.0f);

1225 
	}
}

1227 
PRIVATE
 

1228 
	$do_tx_AM
 (
thªad
)

1230 
i
, 
n
 = 
	`mö
 (
	`CXBhave
 (
tx
[
thªad
].
buf
.i), 
uni
[thªad].
buÊí
);

1233 
i
 = 0; i < 
n
; i++)

1235 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, iË
	`Cm∂x
 ((
REAL
)

1236 (
tx
[
thªad
].
am
.
ˇºõr_Àvñ
 +

1237 (1.0‡- 
tx
[
thªad
].
am
.
ˇºõr_Àvñ
Ë* 
	`CXBªÆ
 (tx[thªad].
buf
.
i
, i)), 0.0);

1239 
	}
}

1241 
PRIVATE
 

1242 
	$do_tx_FM
 (
thªad
)

1244 
i
, 
n
 = 
	`mö
 (
	`CXBhave
 (
tx
[
thªad
].
buf
.i), 
uni
[thªad].
buÊí
);

1247 
i
 = 0; i < 
n
; i++)

1249 
tx
[
thªad
].
osc
.
pha£
 +
	`CXBªÆ
 (tx[thªad].
buf
.
i
, iË*Åx[thªad].
fm
.
cvtmod2‰eq
;

1250 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, i) =

1251 
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
tx
[
thªad
].
osc
.
pha£
), (
IMAG
Ë
	`sö
 (tx[thread].osc.phase));

1253 
	}
}

1255 
PRIVATE
 

1256 
	$do_tx_NIL
 (
thªad
)

1258 
i
, 
n
 = 
	`mö
 (
	`CXBhave
 (
tx
[
thªad
].
buf
.i), 
uni
[thªad].
buÊí
);

1259 
i
 = 0; i < 
n
; i++)

1260 
	`CXBd©a
 (
tx
[
thªad
].
buf
.
i
, iË
cxzîo
;

1261 
	}
}

1265 
PRIVATE
 

1266 
	$do_tx
 (
thªad
)

1268 
	`do_tx_¥e
 (
thªad
);

1269 
tx
[
thªad
].
mode
)

1271 
USB
:

1272 
LSB
:

1273 
CWU
:

1274 
CWL
:

1275 
DIGU
:

1276 
DIGL
:

1277 
DRM
:

1278 
DSB
:

1279 
	`do_tx_SBCW
 (
thªad
);

1281 
AM
:

1282 
SAM
:

1283 
	`do_tx_AM
 (
thªad
);

1285 
FMN
:

1286 
	`do_tx_FM
 (
thªad
);

1288 
SPEC
:

1290 
	`do_tx_NIL
 (
thªad
);

1293 
	`do_tx_po°
 (
thªad
);

1295 
	}
}

1302 
	$¥o˚ss_ßm∂es
 (*
buÊ
, *
bu‰
, *
auxl
, *
auxr
, 
n
, 
thªad
)

1304 
i
, 
k
;

1306 
uni
[
thªad
].
mode
.
åx
)

1308 
RX
:

1311 
k
 = 0; k < 
uni
[
thªad
].
mu…úx
.
ƒx
; k++)

1313 
BOOLEAN
 
kd⁄e
=
FALSE
;

1314 
k⁄e
 = -1;

1315 i‡(
uni
[
thªad
].
mu…úx
.
a˘
[
k
])

1317 i‡(!
kd⁄e
) {

1318 
kd⁄e
 = 
TRUE
;

1319 
k⁄e
 = 
k
;

1320 
i
 = 0; i < 
n
; i++)

1322 
	`CXBimag
 (
rx
[
thªad
][
k
].
buf
.
i
, i) =

1323 
buÊ
[
i
], 
	`CXBªÆ
 (
rx
[
thªad
][
k
].
buf
.i, iË
bu‰
[i];

1325 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
i
Ë
n
;

1326 } 
	`mem˝y
(
rx
[
thªad
][
k
].
buf
.
i
,rx[thªad][
k⁄e
].buf.i,
	`CXBhave
‘x[thªad][
kd⁄e
].buf.i)*(
COMPLEX
));

1331 
	`mem£t
 ((*Ë
buÊ
, 0, 
n
 *  ());

1332 
	`mem£t
 ((*Ë
bu‰
, 0, 
n
 *  ());

1335 
k
 = 0; k < 
uni
[
thªad
].
mu…úx
.
ƒx
; k++)

1337 i‡(
uni
[
thªad
].
mu…úx
.
a˘
[
k
])

1339 
	`do_rx
 (
k
, 
thªad
), 
rx
[thªad][k].
tick
++;

1341 
i
 = 0; i < 
n
; i++)

1343 
buÊ
[
i
] +(Ë
	`CXBimag
 (
rx
[
thªad
][
k
].
buf
.
o
, i);

1344 
bu‰
[
i
] +(Ë
	`CXBªÆ
 (
rx
[
thªad
][
k
].
buf
.
o
, i);

1346 
	`CXBhave
 (
rx
[
thªad
][
k
].
buf
.
o
Ë
n
;

1352 i‡(
uni
[
thªad
].
mix
.
rx
.
Êag
)

1354 
i
 = 0; i < 
n
; i++)

1356 
buÊ
[
i
] +(Ë(
auxl
[i] * 
uni
[
thªad
].
mix
.
rx
.
gaö
),

1357 
bu‰
[
i
] +(Ë(
auxr
[i] * 
uni
[
thªad
].
mix
.
rx
.
gaö
);

1363 
TX
:

1366 i‡(
uni
[
thªad
].
mix
.
tx
.
Êag
)

1368 
i
 = 0; i < 
n
; i++)

1370 
buÊ
[
i
] +(Ë(
auxl
[i] * 
uni
[
thªad
].
mix
.
tx
.
gaö
),

1371 
bu‰
[
i
] +(Ë(
auxr
[i] * 
uni
[
thªad
].
mix
.
tx
.
gaö
);

1375 
i
 = 0; i < 
n
; i++)

1377 
	`CXBimag
 (
tx
[
thªad
].
buf
.
i
, iË
buÊ
[i];

1378 
	`CXBªÆ
 (
tx
[
thªad
].
buf
.
i
, iË
bu‰
[i];

1381 
	`CXBhave
 (
tx
[
thªad
].
buf
.
i
Ë
n
;

1382 
tx
[
thªad
].
n‹m
 = 
	`CXB≥ak
 (tx[thªad].
buf
.
i
);

1384 
	`do_tx
 (
thªad
), 
tx
[thªad].
tick
++;

1386 
i
 = 0; i < 
n
; i++)

1387 
buÊ
[
i
] = (Ë
	`CXBimag
 (
tx
[
thªad
].
buf
.
o
, i),

1388 
bu‰
[
i
] = (Ë
	`CXBªÆ
 (
tx
[
thªad
].
buf
.
o
, i);

1389 
	`CXBhave
 (
tx
[
thªad
].
buf
.
o
Ë
n
;

1394 
uni
[
thªad
].
tick
++;

1395 
	}
}

	@sdrexport.c

34 
	~<comm⁄.h
>

36 
_uni
 
	guni
[3];

37 
_rx
 
	grx
[3][
MAXRX
];

38 
_tx
 
	gtx
[3];

39 
_t›
 
	gt›
[3];

	@sdrexport.h

34 #i‚de‡
_sdªxp‹t_h


35 
	#_sdªxp‹t_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<b™Æ.h
>

40 
	~<•lôfõlds.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

44 
	~<rögb.h
>

45 
	~<lmadf.h
>

46 
	~<f·w3.h
>

47 
	~<f·w3_fix.h
>

48 
	~<ovsv.h
>

49 
	~<fûãr.h
>

50 
	~<oscûœt‹.h
>

51 
	~<dâ•agc.h
>

52 
	~<am_demod.h
>

53 
	~<fm_demod.h
>

54 
	~<noi£bœnkî.h
>

55 
	~<c‹ª˘IQ.h
>

56 
	~<•ìch¥oc.h
>

57 
	~<•Ÿt⁄e.h
>

58 
	~<hûbît.h
>

59 
	~<upd©e.h
>

60 
	~<loˇl.h
>

61 
	~<mëî.h
>

62 
	~<•e˘rum.h
>

63 
	~<divîsôy.h
>

67 #i‚de‡
MAXRX


68 
	#MAXRX
 (4)

	)

77 
DivîsôyC⁄åﬁ
 
	gdivîsôy
;

79 
	s_uni


81 
REAL
 
ßm∂î©e
;

82 
buÊí
;

86 
SDRMODE
 
sdr
;

87 
TRXMODE
 
åx
;

88 } 
mode
;

90 
METERBlock
 
mëî
;

91 
S≥cBlock
 
•ec
;

95 
BOOLEAN
 
Êag
;

96 
FILE
 *
Â
;

97 
•lôÊd
 
•…
;

98 } 
upd©e
;

102 *
∑th
;

103 
bôs
;

104 } 
wisdom
;

108 
BOOLEAN
 
a˘
[
MAXRX
];

109 
lis
, 
«c
, 
ƒx
;

110 } 
mu…úx
;

116 
BOOLEAN
 
Êag
;

117 
REAL
 
gaö
;

118 } 
rx
, 
tx
;

119 } 
mix
;

120 
˝dÀn
;

121 
tick
,
ﬁdtick
;

122 
WBIR_STATE
 
wbú_°©e
;

123 } 
uni
[3];

129 
	s_rx


133 
CXB
 
i
, 
o
;

134 } 
buf
;

135 
IQ
 
iqfix
;

138 
‰eq
, 
pha£
;

139 
OSC
 
gí
;

140 } 
osc
;

143 
decim
;

144 
BOOLEAN
 
Êag
;

145 
ResStF
 
gí1r
,
gí1i
,
gí2r
,
gí2i
;

146 } 
ªßm∂e
;

147 
ouçut_gaö
;

150 
Com∂exFIR
 
c€f
;

151 
FûtOvSv
 
ovsv
;

152 
COMPLEX
 *
ßve
;

153 } 
fût
,
fût2
;

155 
DCBlockî
 
dcb
;

159 
REAL
 
thªsh
;

160 
NB
 
gí
;

161 
BOOLEAN
 
Êag
;

162 } 
nb
;

165 
REAL
 
thªsh
;

166 
NB
 
gí
;

167 
BOOLEAN
 
Êag
;

168 } 
nb_sdrom
;

172 
LMSR
 
gí
;

173 
BOOLEAN
 
Êag
;

174 } 
™r
, 
™f
;

178 
BLMS
 
gí
;

179 
BOOLEAN
 
Êag
;

180 } 
b™r
, 
b™f
;

184 
DTTSPAGC
 
gí
;

185 
BOOLEAN
 
Êag
;

186 } 
dâ•agc
;

189 
AMD
 
gí
;

190 } 
am
;

193 
FMD
 
gí
;

194 } 
fm
;

197 
BOOLEAN
 
Êag
;

198 
SpŸT⁄eGí
 
gí
;

199 } 
•Ÿ
;

202 
REAL
 
thªsh
, 
©ãn
, 
powî
;

203 
BOOLEAN
 
Êag
, 
ru¬ög
, 
£t
;

204 
num
;

205 
pha£
;

206 } 
squñch
;

210 
BOOLEAN
 
Êag
;

211 
WSCom∑ndî
 
gí
;

212 } 
˝d
;

216 
EQ
 
gí
;

217 
BOOLEAN
 
Êag
;

218 } 
gøpheq
;

220 
SDRMODE
 
mode
;

223 
BOOLEAN
 
Êag
;

224 } 
bö
;

225 
REAL
 
n‹m
;

226 
COMPLEX
 
azim
;

227 
tick
;

228 } 
rx
[3][
MAXRX
];

233 
	s_tx


237 
CXB
 
i
, 
ic
, 
o
, 
oc
;

238 } 
buf
;

239 
IQ
 
iqfix
;

243 
BOOLEAN
 
Êag
;

244 
DCBlockî
 
gí
;

245 } 
dcb
;

249 
‰eq
, 
pha£
;

250 
OSC
 
gí
;

251 } 
osc
;

254 
Com∂exFIR
 
c€f
;

255 
FûtOvSv
 
ovsv
, 
ovsv_¥e
;

256 
COMPLEX
 *
ßve
;

257 } 
fût
;

261 
REAL
 
ˇºõr_Àvñ
;

262 } 
am
;

266 
REAL
 
cvtmod2‰eq
;

267 } 
fm
;

271 
REAL
 
thªsh
, 
©ãn
, 
powî
;

272 
BOOLEAN
 
Êag
, 
ru¬ög
, 
£t
;

273 
num
;

274 } 
squñch
;

278 
DTTSPAGC
 
gí
;

279 
BOOLEAN
 
Êag
;

280 } 
Àvñî
, 
Æc
;

284 
EQ
 
gí
;

285 
BOOLEAN
 
Êag
;

286 } 
gøpheq
;

291 
S≥echProc
 
gí
;

292 
BOOLEAN
 
Êag
;

293 } 
•r
;

298 
BOOLEAN
 
Êag
;

299 
WSCom∑ndî
 
gí
;

300 } 
˝d
;

304 
BOOLEAN
 
Êag
;

305 
Hûsim
 
gí
;

306 } 
hlb
;

308 
SDRMODE
 
mode
;

310 
tick
;

311 
REAL
 
n‹m
;

312 } 
tx
[3];

316 
	e_runmode


318 
	mRUN_MUTE
, 
	mRUN_PASS
, 
	mRUN_PLAY
, 
	mRUN_SWCH


319 } 
	tRUNMODE
;

321 
	s_t›


324 
pid
;

325 
uid_t
 
uid
;

327 
timevÆ
 
°¨t_tv
;

329 
BOOLEAN
 
ru¬ög
, 
vîbo£
;

330 
RUNMODE
 
°©e
;

337 *
l
, *
r
;

338 } 
aux
, 
buf
;

341 
‰ames
, 
byãs
;

342 } 
size
;

343 } 
hﬁd
;

347 *
∑th
;

348 
HANDLE
 
fd
;

349 
HANDLE
 
Â
;

350 
buff
[4096];

351 } 
∑rm
;

357 *
∑th
;

358 
HANDLE
 
Â
, 
fd
;

359 } 
må
, 
•ec
;

360 } 
mós
;

364 
«me
[256];

370 
rögb_Êﬂt_t
 *
l
, *
r
;

371 } 
i
, 
o
;

372 } 
rög
;

378 
rögb_Êﬂt_t
 *
l
, *
r
;

379 } 
i
, 
o
;

380 } 
auxr
;

383 
size_t
 
ª£t_size
;

385 
size_t
 
size
;

389 
cb
;

392 
i
, 
o
;

393 } 
rb
;

394 
xr
;

395 } 
blow
;

396 } 
jack
;

404 
±hªad_t
 
id
;

405 } 
åx
, 
upd
, 
updrx
, 
m⁄
, 
pws
, 
må
, 
sc›e
;

406 } 
thrd
;

412 
£m_t
 
£m
;

413 } 
buf
, 
upd
, 
m⁄
, 
pws
, 
må
, 
sc›e
;

414 } 
sync
;

422 
w™t
, 
have
;

423 } 
bf˘
;

426 
TRXMODE
 
√xt
;

427 } 
åx
;

430 
RUNMODE
 
œ°
;

431 } 
run
;

432 
Áde
, 
èû
;

433 } 
swch
;

441 
SWCHSTATE
 
ty≥
;

442 
˙t
;

443 
REAL
 
vÆ
;

444 } 
cuº
;

446 
size
;

447 
REAL
 
ö¸
;

448 } 
ÁŒ
, 
ri£
, 
°dy
;

449 } 
ív
;

451 
TRXMODE
 
√xt
;

452 } 
åx
;

454 
RUNMODE
 
œ°
;

455 } 
run
;

456 } 
swch
;

459 
BOOLEAN
 
su•
;

460 
off£t
;

462 } 
t›
[3];

	@spectrum.c

35 
	~<•e˘rum.h
>

36 
	~<bufvec.h
>

37 
	~<f·w3.h
>

38 
	~<f·w3_fix.h
>

41 
	$¢≠_•e˘rum
 (
S≥cBlock
 * 
sb
, 
œbñ
)

43 
i
, 
j
;

46 
j
 = 
sb
->
fûl
;

50 i‡(!
sb
->
pﬁypha£
)

52 
i
 = 0; i < 
sb
->
size
; i++)

54 
	`CXBd©a
 (
sb
->
timebuf
, 
i
) =

55 
	`Cs˛
 (
	`CXBd©a
 (
sb
->
accum
, 
j
), sb->
wödow
[
i
]);

56 
j
 = (++j & 
sb
->
mask
);

61 
k
;

62 
i
 = 0; i < 
sb
->
size
; i++)

64 
	`CXBªÆ
 (
sb
->
timebuf
, 
i
ËCXBªÆ (sb->
accum
, 
j
Ë* sb->
wödow
[i];

65 
	`CXBimag
 (
sb
->
timebuf
, 
i
ËCXBimag (sb->
accum
, 
j
Ë* sb->
wödow
[i];

66 
k
 = 1; k < 8; k++)

68 
accumidx
 = (
j
 + 
k
 * 
sb
->
size
Ë& sb->
mask
;

69 
wöidx
 = 
i
 + 
k
 * 
sb
->
size
;

70 
	`CXBªÆ
 (
sb
->
timebuf
, 
i
) +=

71 
	`CXBªÆ
 (
sb
->
accum
, 
accumidx
Ë* sb->
wödow
[
wöidx
];

72 
	`CXBimag
 (
sb
->
timebuf
, 
i
) +=

73 
	`CXBimag
 (
sb
->
accum
, 
accumidx
Ë* sb->
wödow
[
wöidx
];

75 
j
 = (++j & 
sb
->
mask
);

79 
sb
->
œbñ
 =Üabel;

80 
	}
}

83 
	$¢≠_sc›e
 (
S≥cBlock
 * 
sb
, 
œbñ
)

85 
i
, 
j
;

88 
j
 = 
sb
->
fûl
;

91 
i
 = 0; i < 
sb
->
size
; i++)

93 
	`CXBd©a
 (
sb
->
timebuf
, 
i
ËCXBd©®(sb->
accum
, 
j
);

94 
j
 = (++j & 
sb
->
mask
);

97 
sb
->
œbñ
 =Üabel;

98 
	}
}

101 
	$compuã_com∂ex_•e˘rum
(
S≥cBlock
 * 
sb
)

103 
i
, 
j
, 
hÆf
 = 
sb
->
size
 / 2;

107 
	`f·wf_execuã
 (
sb
->
∂™
);

109 
i
 = 0, 
j
 = 
hÆf
; i < half; i++, j++) {

110 
sb
->
couçut
[
i
] = 
	`CXBd©a
 (sb->
‰eqbuf
, 
j
);

111 
sb
->
couçut
[
j
] = 
	`CXBd©a
 (sb->
‰eqbuf
, 
i
);

113 
	}
}

117 
	$compuã_•e˘rum
 (
S≥cBlock
 * 
sb
)

119 
i
, 
j
, 
hÆf
 = 
sb
->
size
 / 2;

124 
	`f·wf_execuã
 (
sb
->
∂™
);

126 i‡(
sb
->
sˇÀ
 =
SPEC_MAG
)

128 
i
 = 0, 
j
 = 
hÆf
; i < half; i++, j++)

130 
sb
->
ouçut
[
i
] = (Ë
	`Cmag
 (
	`CXBd©a
 (sb->
‰eqbuf
, 
j
));

131 
sb
->
ouçut
[
j
] = (Ë
	`Cmag
 (
	`CXBd©a
 (sb->
‰eqbuf
, 
i
));

136 
i
 = 0, 
j
 = 
hÆf
; i < half; i++, j++)

138 
sb
->
ouçut
[
i
] =

140 
	`log10
 (
	`Csqrmag
 (
	`CXBd©a
 (
sb
->
‰eqbuf
, 
j
)) + 1e-60));

141 
sb
->
ouçut
[
j
] =

143 
	`log10
 (
	`Csqrmag
 (
	`CXBd©a
 (
sb
->
‰eqbuf
, 
i
)) + 1e-60));

146 
	}
}

149 
	$öô_•e˘rum
 (
S≥cBlock
 * 
sb
)

151 
COMPLEX
 *
p
;

152 
sb
->
fûl
 = 0;

154 
p
 = 
	`√wvec_COMPLEX_f·w
(
sb
->
size
*16,"spectrumáccum");

155 
sb
->
accum
 = 
	`√wCXB
 (sb->
size
 * 16, 
p
, "spectrumáccum");

156 
p
 = 
	`√wvec_COMPLEX_f·w
(
sb
->
size
, "spectrumÅimebuf");

157 
sb
->
timebuf
 = 
	`√wCXB
 (sb->
size
, 
p
, "spectrumÅimebuf");

158 
p
 = 
	`√wvec_COMPLEX_f·w
(
sb
->
size
, "spectrumÅimebuf");

159 
sb
->
‰eqbuf
 = 
	`√wCXB
 (sb->
size
, 
p
, "spectrum freqbuf");

160 
sb
->
wödow
 = 
	`√wvec_REAL
 (sb->
size
 * 16, "spectrum window");

161 
	`makewödow
 (
BLACKMANHARRIS_WINDOW
, 
sb
->
size
, sb->
wödow
);

162 
sb
->
mask
 = sb->
size
 - 1;

163 
sb
->
pﬁypha£
 = 
FALSE
;

164 
sb
->
ouçut
 =

165 (*Ë
	`ß„Æloc
 (
sb
->
size
,  (), "spectrum output");

166 
sb
->
couçut
 = (
COMPLEX
 *)
	`ß„Æloc
 (sb->
size
,  (COMPLEX), "spectrum output");;

167 
sb
->
∂™
 =

168 
	`f·wf_∂™_d·_1d
 (
sb
->
size
, (
f·wf_com∂ex
 *Ë
	`CXBba£
 (sb->
timebuf
),

169 (
f·wf_com∂ex
 *Ë
	`CXBba£
 (
sb
->
‰eqbuf
),

170 
FFTW_FORWARD
, 
sb
->
∂™bôs
);

171 
	}
}

174 
	$ªöô_•e˘rum
 (
S≥cBlock
 * 
sb
)

176 
size_t
 
pﬁysize
 = 1;

177 
sb
->
fûl
 = 0;

178 i‡(
sb
->
pﬁypha£
)

179 
pﬁysize
 = 8;

180 
	`mem£t
 ((*Ë
	`CXBba£
 (
sb
->
accum
), 0,

181 
pﬁysize
 * 
sb
->
size
 *  (
REAL
));

182 
	`mem£t
 ((*Ë
sb
->
ouçut
, 0, sb->
size
 *  ());

183 
	`mem£t
 ((*Ë
sb
->
couçut
, 0, sb->
size
 * (
COMPLEX
));

184 
	}
}

187 
	$föish_•e˘rum
 (
S≥cBlock
 * 
sb
)

189 i‡(
sb
)

191 
	`dñvec_COMPLEX_f·w
(
sb
->
accum
->
d©a
);

192 
	`dñCXB
 (
sb
->
accum
);

193 
	`dñvec_COMPLEX_f·w
(
sb
->
timebuf
->
d©a
);

194 
	`dñCXB
 (
sb
->
timebuf
);

195 
	`dñvec_COMPLEX_f·w
(
sb
->
‰eqbuf
->
d©a
);

196 
	`dñCXB
 (
sb
->
‰eqbuf
);

197 
	`dñvec_REAL
 (
sb
->
wödow
);

198 
	`ß„‰ì
 ((*Ë
sb
->
ouçut
);

199 
	`ß„‰ì
 ((*Ë
sb
->
couçut
);

200 
	`f·wf_de°roy_∂™
 (
sb
->
∂™
);

202 
	}
}

	@spectrum.h

34 #i‚de‡
_•e˘rum_h


35 
	#_•e˘rum_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<b™Æ.h
>

40 
	~<•lôfõlds.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

44 
	~<rögb.h
>

45 
	~<lmadf.h
>

46 
	~<f·w3.h
>

47 
	~<f·w3_fix.h
>

48 
	~<ovsv.h
>

49 
	~<fûãr.h
>

50 
	~<oscûœt‹.h
>

51 
	~<dâ•agc.h
>

52 
	~<am_demod.h
>

53 
	~<fm_demod.h
>

54 
	~<noi£bœnkî.h
>

55 
	~<c‹ª˘IQ.h
>

56 
	~<•ìch¥oc.h
>

57 
	~<•Ÿt⁄e.h
>

58 
	~<upd©e.h
>

59 
	~<wödow.h
>

61 
	#SPEC_MAG
 (0)

	)

62 
	#SPEC_PWR
 (1)

	)

64 
	#SPEC_SEMI_RAW
 (0)

	)

65 
	#SPEC_PRE_FILT
 (1)

	)

66 
	#SPEC_POST_FILT
 (2)

	)

67 
	#SPEC_POST_AGC
 (3)

	)

68 
	#SPEC_POST_DET
 (4)

	)

69 
	#SPEC_PREMOD
 (4)

	)

71 
	s_•ec_block


73 
BOOLEAN
 
	mÊag
;

74 
	mœbñ
;

75 
CXB
 
	maccum
, 
	mtimebuf
, 
	m‰eqbuf
;

76 
	mfûl
, 
	mbuÊí
, 
	mrxk
, 
	msˇÀ
, 
	msize
, 
	mty≥
, 
	mmask
;

77 
Wödowty≥
 
	mwöty≥
;

78 
REAL
 *
	mwödow
;

79 *
	mouçut
, *
	mosc›e
;

80 
COMPLEX
 *
	mcouçut
;

81 
	m∂™bôs
;

82 
f·wf_∂™
 
	m∂™
;

83 
BOOLEAN
 
	mpﬁypha£
;

84 } 
	tS≥cBlock
;

86 
öô_•e˘rum
 (
S≥cBlock
 * 
sb
);

87 
ªöô_•e˘rum
 (
S≥cBlock
 * 
sb
);

88 
¢≠_•e˘rum
 (
S≥cBlock
 * 
sb
, 
œbñ
);

89 
¢≠_sc›e
 (
S≥cBlock
 * 
sb
, 
œbñ
);

90 
compuã_•e˘rum
 (
S≥cBlock
 * 
sb
);

91 
compuã_com∂ex_•e˘rum
(
S≥cBlock
 * 
sb
);

92 
föish_•e˘rum
 (
S≥cBlock
 * 
sb
);

	@speechproc.c

35 
	~<•ìch¥oc.h
>

37 
S≥echProc


38 
	$√wS≥echProc
 (
REAL
 
K
, REAL 
MaxCom¥essi⁄
, 
COMPLEX
 * 
•d©
, 
size
)

40 
S≥echProc
 
•
 = (S≥echProcË
	`ß„Æloc
 (1,  (
•ìch_¥oc
),

42 
•
->
CG
 = 
	`√wRLB
 (
size
 + 1, 
NULL
, "CG buffer in Speech Processor");

43 
•
->
K
 = K;

44 
•
->
MaxGaö
 = (
REAL
Ë
	`pow
 (10.0, 
MaxCom¥essi⁄
 * 0.05);

45 
•
->
Ác
 =

46 (
REAL
Ë((((0.0000401002 * 
MaxCom¥essi⁄
) -

47 0.0032093390Ë* 
MaxCom¥essi⁄
 +

48 0.0612862687Ë* 
MaxCom¥essi⁄
 + 0.9759745718);

49 
•
->
La°CG
 = 1.0;

50 
•
->
S≥echPro˚ss‹Buf„r
 = 
	`√wCXB
 (
size
, 
•d©
, "speechÖrocessor data");

51 
•
->
size
 = size;

52  
•
;

53 
	}
}

56 
	$dñS≥echProc
 (
S≥echProc
 
•
)

58 i‡(
•
)

60 
	`dñRLB
 (
•
->
CG
);

61 
	`dñCXB
 (
•
->
S≥echPro˚ss‹Buf„r
);

62 
	`ß„‰ì
 ((*Ë
•
);

64 
	}
}

67 
	$S≥echPro˚ss‹
 (
S≥echProc
 
•
)

69 
i
;

70 
REAL
 
r
 = 0.0, 
Mag
;

72 i‡(
•
->
MaxGaö
 == 1.0)

75 
i
 = 0; i < 
•
->
size
; i++)

76 
r
 = 
	`max
 (r, 
	`Cmag
 (
	`CXBd©a
 (
•
->
S≥echPro˚ss‹Buf„r
, 
i
)));

78 
	`RLBd©a
 (
•
->
CG
, 0Ë•->
La°CG
;

79 
i
 = 1; i <
•
->
size
; i++)

81 
Mag
 = 
	`Cmag
 (
	`CXBd©a
 (
•
->
S≥echPro˚ss‹Buf„r
, 
i
 - 1));

82 i‡(
Mag
 != 0.0)

84 
	`RLBd©a
(
•
->
CG
, 
i
ËRLBd©a(•->CG, i - 1Ë* (1 - sp->
K
Ë+ (•->K * 
r
 / 
Mag
);

85 i‡(
	`RLBd©a
 (
•
->
CG
, 
i
Ë> sp->
MaxGaö
)

86 
	`RLBd©a
 (
•
->
CG
, 
i
Ë•->
MaxGaö
;

89 
	`RLBd©a
 (
•
->
CG
, 
i
Ë•->
MaxGaö
;

91 
•
->
La°CG
 = 
	`RLBd©a
 (•->
CG
, sp->
size
);

94 
i
 = 0; i < 
•
->
size
; i++)

95 
	`CXBd©a
 (
•
->
S≥echPro˚ss‹Buf„r
, 
i
) =

96 
	`Cs˛
 (
	`CXBd©a
 (
•
->
S≥echPro˚ss‹Buf„r
, 
i
),

97 (
REAL
Ë(
	`RLBd©a
 (
•
->
CG
, 
i
) /

98 (
•
->
Ác
 * 
	`pow
 (•->
MaxGaö
, 0.25))));

99 
	}
}

	@speechproc.h

34 #i‚de‡
_•ìch¥oc_h


35 
	#_•ìch¥oc_h


	)

37 
	~<‰omsys.h
>

38 
	~<d©©y≥s.h
>

39 
	~<bufvec.h
>

40 
	~<cx›s.h
>

41 
	~<b™Æ.h
>

43 
	s_•ìch¥o˚ss‹


45 
	msize
;

46 
RLB
 
	mCG
;

47 
CXB
 
	mS≥echPro˚ss‹Buf„r
;

48 
REAL
 
	mLa°CG
, 
	mK
, 
	mMaxGaö
, 
	mÁc
;

49 } 
	t•ìch_¥oc
, *
	tS≥echProc
;

51 
S≥echProc
 
√wS≥echProc
 (
REAL
, REAL, 
COMPLEX
 *, );

52 
dñS≥echProc
 (
S≥echProc
);

53 
S≥echPro˚ss‹
 (
S≥echProc
);

	@splitfields.c

34 
	~<•lôfõlds.h
>

36 *
	g_whôe
 = " \t\n";

38 
SPLIT


39 
	$√wSPLIT
 ()

41  (
SPLIT
Ë
	`ß„Æloc
 (1,  (
•lôÊd
), "splitfield");

42 
	}
}

45 
	$dñSPLIT
 (
SPLIT
 
s
)

47 i‡(
s
)

48 
	`‰ì
 ((*Ë
s
);

49 
	}
}

52 
	$F
 (
SPLIT
 
s
, 
i
)

54  
s
->
f
[
i
];

55 
	}
}

58 
	$F±r
 (
SPLIT
 
s
, 
i
)

60  &(
s
->
f
[
i
]);

61 
	}
}

64 
	$NF
 (
SPLIT
 
s
)

66  
s
->
n
;

67 
	}
}

70 
	$•lô⁄to
 (
SPLIT
 
s
, *
°r
, *
dñim
, **
Êd
, 
fmx
)

72 
i
 = 0;

73 *
p
 = 
	`°πok
 (
°r
, 
dñim
);

74 
p
)

76 
Êd
[
i
] = 
p
;

77 i‡(++
i
 >
fmx
)

79 
p
 = 
	`°πok
 (0, 
dñim
);

81  
i
;

82 
	}
}

85 
	$•lô⁄
 (
SPLIT
 
s
, *
°r
, *
dñim
)

87  (
s
->
n
 = 
	`•lô⁄to
 (s, 
°r
, 
dñim
, s->
f
, 
MAXFLD
));

88 
	}
}

91 
	$•lô
 (
SPLIT
 
s
, *
°r
)

93 
	`•lô⁄
 (
s
, 
°r
, 
_whôe
);

94 
	}
}

	@splitfields.h

34 #i‚de‡
_•lôfõlds_h


35 
	#_•lôfõlds_h


	)

37 
	~<‰omsys.h
>

38 
	~<bufvec.h
>

39 
	~<b™Æ.h
>

41 
	#MAXFLD
 16384

	)

43 
	s_•lôÊd


45 *
	mf
[
MAXFLD
];

46 
	mn
;

47 } 
	t•lôÊd
, *
	tSPLIT
;

49 *
F
 (
SPLIT
, );

50 **
F±r
 (
SPLIT
, );

51 
NF
 (
SPLIT
);

53 
•lô⁄to
 (
SPLIT
, *, *, **, );

54 
•lô⁄
 (
SPLIT
, *, *);

55 
•lô
 (
SPLIT
, *);

	@spottone.c

35 
	~<•Ÿt⁄e.h
>

43 
BOOLEAN


44 
	$SpŸT⁄e
 (
SpŸT⁄eGí
 
°
)

46 
i
, 
n
 = 
°
->
size
;

48 
	`Com∂exOSC
 (
°
->
osc
.
gí
);

50 
i
 = 0; i < 
n
; i++)

55 i‡(
°
->
°age
 =
SpŸT⁄e_RISE
)

59 i‡(
°
->
ri£
.
have
++ < st->ri£.
w™t
)

61 
°
->
cuº
 +°->
ri£
.
ö¸
;

62 
°
->
mul
 = (
REAL
Ë(°->
s˛
 * 
	`sö
 (°->
cuº
 * 
M_PI
 / 2.0));

67 
°
->
cuº
 = 1.0;

68 
°
->
mul
 = st->
s˛
;

69 
°
->
°age
 = 
SpŸT⁄e_STDY
;

75 i‡(
°
->
°age
 =
SpŸT⁄e_FALL
)

79 i‡(
°
->
ÁŒ
.
have
++ < st->ÁŒ.
w™t
)

81 
°
->
cuº
 -°->
ÁŒ
.
ö¸
;

82 
°
->
mul
 = (
REAL
Ë(°->
s˛
 * 
	`sö
 (°->
cuº
 * 
M_PI
 / 2.0));

87 
°
->
cuº
 = 0.0;

88 
°
->
mul
 = 0.0;

89 
°
->
°age
 = 
SpŸT⁄e_HOLD
;

95 
	`CXBd©a
 (
°
->
buf
, 
i
Ë
	`Cs˛
 (CXBd©®(°->buf, i), st->
mul
);

101  
°
->
°age
 !
SpŸT⁄e_HOLD
;

102 
	}
}

108 
	$SpŸT⁄eOn
 (
SpŸT⁄eGí
 
°
)

113 
°
->
s˛
 = (
REAL
Ë
	`pow
 (10.0, st->
gaö
 / 20.0);

114 
°
->
cuº
 = st->
mul
 = 0.0;

118 
°
->
ri£
.
w™t
 = (Ë(0.5 + st->
§
 * (°->ri£.
dur
 / 1e3));

119 
°
->
ri£
.
have
 = 0;

120 i‡(
°
->
ri£
.
w™t
 <= 1)

121 
°
->
ri£
.
ö¸
 = 1.0;

123 
°
->
ri£
.
ö¸
 = (
REAL
Ë(1.0 / (°->ri£.
w™t
 - 1));

125 
°
->
ÁŒ
.
w™t
 = (Ë(0.5 + st->
§
 * (°->ÁŒ.
dur
 / 1e3));

126 
°
->
ÁŒ
.
have
 = 0;

127 i‡(
°
->
ÁŒ
.
w™t
 <= 1)

128 
°
->
ÁŒ
.
ö¸
 = 1.0;

130 
°
->
ÁŒ
.
ö¸
 = (
REAL
Ë(1.0 / (°->ÁŒ.
w™t
 - 1));

134 
	`OSC‰eq
 (
°
->
osc
.
gí
Ë2.0 * 
M_PI
 * st->osc.
‰eq
 / st->
§
;

135 
	`OSCpha£
 (
°
->
osc
.
gí
) = 0.0;

137 
°
->
°age
 = 
SpŸT⁄e_RISE
;

138 
	}
}

144 
	$SpŸT⁄eOff
 (
SpŸT⁄eGí
 
°
)

146 
°
->
°age
 = 
SpŸT⁄e_FALL
;

147 
	}
}

152 
	$£tSpŸT⁄eGíVÆs
 (
SpŸT⁄eGí
 
°
,

153 
REAL
 
gaö
, REAL 
‰eq
, REAL 
ri£
, REAL 
ÁŒ
)

155 
°
->
gaö
 = gain;

156 
°
->
osc
.
‰eq
 = freq;

157 
°
->
ri£
.
dur
 =Ñise;

158 
°
->
ÁŒ
.
dur
 = fall;

159 
	}
}

161 
SpŸT⁄eGí


162 
	$√wSpŸT⁄eGí
 (
REAL
 
gaö
,

163 
REAL
 
‰eq
, REAL 
ri£
,

164 
REAL
 
ÁŒ
,

165 
size
, 
REAL
 
ßm∂î©e
)

168 
SpŸT⁄eGí
 
°
 = (SpŸT⁄eGíË
	`ß„Æloc
 (1,

169  (
SpŸT⁄eGíDesc
),

172 
	`£tSpŸT⁄eGíVÆs
 (
°
, 
gaö
, 
‰eq
, 
ri£
, 
ÁŒ
);

173 
°
->
size
 = size;

174 
°
->
§
 = 
ßm∂î©e
;

176 
°
->
osc
.
gí
 = 
	`√wOSC
 (°->
size
,

177 
Com∂exT⁄e
,

178 
°
->
osc
.
‰eq
, 0.0, st->
§
, "SpotTone osc");

181 
°
->
buf
 = 
	`√wCXB
 (°->
size
, 
	`OSCCba£
 (°->
osc
.
gí
), "SpotToneGen buf");

183  
°
;

184 
	}
}

187 
	$dñSpŸT⁄eGí
 (
SpŸT⁄eGí
 
°
)

189 i‡(
°
)

191 
	`dñCXB
 (
°
->
buf
);

192 
	`dñOSC
 (
°
->
osc
.
gí
);

193 
	`ß„‰ì
 ((*Ë
°
);

195 
	}
}

	@spottone.h

34 #i‚de‡
_•Ÿt⁄e_h


35 
	#_•Ÿt⁄e_h


	)

37 
	~<‰omsys.h
>

38 
	~<b™Æ.h
>

39 
	~<d©©y≥s.h
>

40 
	~<bufvec.h
>

41 
	~<cx›s.h
>

42 
	~<oscûœt‹.h
>

44 
	#SpŸT⁄e_IDLE
 (0)

	)

45 
	#SpŸT⁄e_WAIT
 (1)

	)

46 
	#SpŸT⁄e_RISE
 (2)

	)

47 
	#SpŸT⁄e_STDY
 (3)

	)

48 
	#SpŸT⁄e_FALL
 (4)

	)

49 
	#SpŸT⁄e_HOLD
 (5)

	)

51 
	s_•Ÿ_t⁄e_gí


53 
REAL
 
	mcuº
, 
	mgaö
, 
	mmul
, 
	ms˛
, 
	m§
;

56 
REAL
 
	m‰eq
;

57 
OSC
 
	mgí
;

58 } 
	mosc
;

61 
REAL
 
	mdur
, 
	mö¸
;

62 
	mw™t
, 
	mhave
;

63 } 
	mri£
, 
	mÁŒ
;

64 
	msize
, 
	m°age
;

65 
CXB
 
	mbuf
;

66 } 
	tSpŸT⁄eGíDesc
, *
	tSpŸT⁄eGí
;

68 
SpŸT⁄eGí
 
√wSpŸT⁄eGí
 (
REAL
 
gaö
,

69 
REAL
 
‰eq
,

70 
REAL
 
ri£
,

71 
REAL
 
ÁŒ
,

72 
size
,

73 
REAL
 
ßm∂î©e
);

74 
dñSpŸT⁄eGí
 (
SpŸT⁄eGí
 
gí
);

75 
£tSpŸT⁄eGíVÆs
 (
SpŸT⁄eGí
 
gí
,

76 
REAL
 
gaö
, REAL 
‰eq
, REAL 
ri£
, REAL 
ÁŒ
);

77 
SpŸT⁄eOn
 (
SpŸT⁄eGí
 
gí
);

78 
SpŸT⁄eOff
 (
SpŸT⁄eGí
 
gí
);

79 
BOOLEAN
 
SpŸT⁄e
 (
SpŸT⁄eGí
 
gí
);

	@update.c

36 
	~<comm⁄.h
>

40 
	gthªadno
=2;

41 
	gthªad_com
;

43 
	#RL
 (
uni
[
thªad
].
mu…úx
.
lis
)

	)

47 
PRIVATE
 
REAL
 
INLINE


48 
	$dB2lö
 (
REAL
 
dB
)

50  (
REAL
Ë
	`pow
 (10.0, (REALË
dB
 / 20.0);

51 
	}
}

53 
PRIVATE
 
REAL
 
INLINE


54 
	$gmón
 (
REAL
 
x
, REAL 
y
)

56  (
REAL
)
	`sqπ
(
x
*
y
);

57 
	}
}

59 
DâSP_EXP
 

60 
	$Sëup_SDR
 (*
≠p_d©a_∑th
)

62 
	`£tup
 (*);

63 
	`£tup
 (
≠p_d©a_∑th
);

64 
	}
}

66 
DâSP_EXP
 

67 
	$De°roy_SDR
 ()

69 
	`˛o£up
 ();

70 
	`˛o£up
 ();

71 
	}
}

74 
DâSP_EXP
 

75 
	$SëThªadNo
(
£tô
)

77 
	`£m_waô
(&
t›
[0].
sync
.
upd
.
£m
);

78 
	`£m_waô
(&
t›
[1].
sync
.
upd
.
£m
);

79 
	`£m_waô
(&
t›
[2].
sync
.
upd
.
£m
);

80 i‡((
£tô
 > 0Ë&& (£tô<4)Ë
thªadno
 = setit;

81 
	`£m_po°
(&
t›
[2].
sync
.
upd
.
£m
);

82 
	`£m_po°
(&
t›
[1].
sync
.
upd
.
£m
);

83 
	`£m_po°
(&
t›
[0].
sync
.
upd
.
£m
);

84 
	}
}

86 
DâSP_EXP
 

87 
	$SëThªadCom
(
thªad
)

89 i‡(
thªad
 < 3)

91 
	`£m_waô
(&
t›
[0].
sync
.
upd
.
£m
);

92 
	`£m_waô
(&
t›
[1].
sync
.
upd
.
£m
);

93 
	`£m_waô
(&
t›
[2].
sync
.
upd
.
£m
);

94 
thªad_com
 = 
thªad
;

95 
	`£m_po°
(&
t›
[2].
sync
.
upd
.
£m
);

96 
	`£m_po°
(&
t›
[1].
sync
.
upd
.
£m
);

97 
	`£m_po°
(&
t›
[0].
sync
.
upd
.
£m
);

99 
	}
}

101 
DâSP_EXP
 

102 
	$SëThªadPro˚ssögMode
(
thªad
, 
RUNMODE
 
runmode
)

104 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

105 
t›
[
thªad
].
°©e
 = 
runmode
;

107 if(
runmode
 =
RUN_MUTE
)

109 
k
;

111 
k
=0; k<2; k++)

113 
	`ª£t_OvSv
 (
rx
[
thªad
][
k
].
fût
.
ovsv
);

114 
	`DâSPAgc_Êushbuf
(
rx
[
thªad
][
k
].
dâ•agc
.
gí
);

118 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

120 
	}
}

121 
DâSP_EXP
 

122 
	$SëMode
 (
thªad
, 
subrx
, 
SDRMODE
 
m
)

124 
πn
=0;

125 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

126 
tx
[
thªad
].
mode
 = 
m
;

127 i‡(
tx
[
thªad
].
mode
 =
LSB
Ëtx[thªad].
hlb
.
gí
->
övît
 = 
TRUE
;

128 
tx
[
thªad
].
hlb
.
gí
->
övît
 = 
FALSE
;

129 
rx
[
thªad
][
subrx
].
mode
 = 
m
;

130 i‡(
m
 =
SAM
Ë
rx
[
thªad
][
subrx
].
am
.
gí
->
mode
 = 1;

131 i‡(
m
 =
AM
Ë
rx
[
thªad
][
subrx
].
am
.
gí
->
mode
 = 0;

132 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

133  
πn
;

134 
	}
}

136 
DâSP_EXP
 

137 
	$AudioRe£t
 ()

139 
BOOLEAN
 
ª£t_em
;

141 
ª£t_em
 = 
TRUE
;

142 
	}
}

144 
DâSP_EXP
 

145 
	$SëRXDCBlock
(
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

148 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

149 
rx
[
thªad
][
subrx
].
dcb
->
Êag
 = 
£tô
;

150 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

151 
	}
}

153 
DâSP_EXP
 

154 
	$SëRXDCBlockGaö
(
thªad
, 
subrx
, 
REAL
 
gaö
)

156 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

157 
rx
[
thªad
][
subrx
].
dcb
->
gaö
 = gain;

158 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

159 
	}
}

161 
DâSP_EXP
 

162 
	$SëTXDCBlock
 (
thªad
, 
BOOLEAN
 
£tô
)

164 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

165 
tx
[
thªad
].
dcb
.
Êag
 = 
£tô
;

166 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

167 
	}
}

169 
DâSP_EXP
 

170 
	$SëTXFMDevüti⁄
(
thªad
, 
devüti⁄
)

172 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

173 
tx
[
thªad
].
fm
.
cvtmod2‰eq
 = (
REAL
Ë(
devüti⁄
 * 
TWOPI
 / 
uni
[thªad].
ßm∂î©e
);

174 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

176 
	}
}

178 
DâSP_EXP
 

179 
	$SëTXFûãr
 (
thªad
, 
low_‰equícy
, 
high_‰equícy
)

181 
nc€f
 = 
uni
[
thªad
].
buÊí
 + 1;

182 
i
, 
f·Àn
 = 2 * 
uni
[
thªad
].
buÊí
, 
πn
=0;

183 
f·wf_∂™
 
±mp
;

184 
COMPLEX
 *
zcvec
;

186 i‡(
	`Ábs
 (
low_‰equícy
Ë>0.5 * 
uni
[
thªad
].
ßm∂î©e
)

187 
πn
 = -1;

188 i‡(
	`Ábs
 (
high_‰equícy
Ë>0.5 * 
uni
[
thªad
].
ßm∂î©e
)

189 
πn
 = -2;

190 i‡((
low_‰equícy
 + 10Ë>
high_‰equícy
)

191 
πn
 = -3;

193 i‡(
πn
 == 0)

195 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

196 
	`dñFIR_COMPLEX
 (
tx
[
thªad
].
fût
.
c€f
);

198 
tx
[
thªad
].
fût
.
c€f
 = 
	`√wFIR_B™d∑ss_COMPLEX
 ((
REAL
)
low_‰equícy
,

199 (
REAL
)
high_‰equícy
,

200 
uni
[
thªad
].
ßm∂î©e
, 
nc€f
);

202 
zcvec
 = 
	`√wvec_COMPLEX
 (
f·Àn
, "filter z vec in setFilter");

203 
±mp
 = 
	`f·wf_∂™_d·_1d
 (
f·Àn
,

204 (
f·wf_com∂ex
 *Ë
zcvec
,

205 (
f·wf_com∂ex
 *Ë
tx
[
thªad
].
fût
.
ovsv
->
zfvec
,

206 
FFTW_FORWARD
, 
uni
[
thªad
].
wisdom
.
bôs
);

207 #ifde‡
LHS


208 
i
 = 0; i < 
nc€f
; i++)

209 
zcvec
[
i
] = 
tx
[
thªad
].
fût
.
c€f
->coef[i];

211 
i
 = 0; i < 
nc€f
; i++)

212 
zcvec
[
f·Àn
 - 
nc€f
 + 
i
] = 
tx
[
thªad
].
fût
.
c€f
->coef[i];

214 
	`f·wf_execuã
 (
±mp
);

215 
	`f·wf_de°roy_∂™
 (
±mp
);

216 
	`dñvec_COMPLEX
 (
zcvec
);

217 
	`n‹mÆize_vec_COMPLEX
 (
tx
[
thªad
].
fût
.
ovsv
->
zfvec
,Åx[thªad].fût.ovsv->
f·Àn
,tx[thªad].fût.ovsv->
sˇÀ
);

218 
	`mem˝y
 ((*Ë
tx
[
thªad
].
fût
.
ßve
, (*Ëtx[thªad].fût.
ovsv
->
zfvec
,

219 
tx
[
thªad
].
fût
.
ovsv
->
f·Àn
 *  (
COMPLEX
));

221 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

223  
πn
;

224 
	}
}

226 
DâSP_EXP
 

227 
	$SëRXFûãr
 (
thªad
, 
subrx
, 
low_‰equícy
, 
high_‰equícy
)

229 
nc€f
 = 
uni
[
thªad
].
buÊí
 + 1;

230 
i
, 
f·Àn
 = 2 * 
uni
[
thªad
].
buÊí
,
πn
=0;

231 
f·wf_∂™
 
±mp
;

232 
COMPLEX
 *
zcvec
;

237 i‡(
	`Ábs
 (
low_‰equícy
Ë>0.5 * 
uni
[
thªad
].
ßm∂î©e
)

238 
πn
 = -1;

239 i‡(
	`Ábs
 (
high_‰equícy
Ë>0.5 * 
uni
[
thªad
].
ßm∂î©e
)

240 
πn
 = -2;

241 i‡((
low_‰equícy
 + 10Ë>
high_‰equícy
)

242 
πn
 = -3;

244 i‡(
πn
 == 0)

246 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

247 
	`dñFIR_COMPLEX
 (
rx
[
thªad
][
subrx
].
fût
.
c€f
);

249 
rx
[
thªad
][
subrx
].
fût
.
c€f
 = 
	`√wFIR_B™d∑ss_COMPLEX
 ((
REAL
)
low_‰equícy
,

250 (
REAL
)
high_‰equícy
,

251 
uni
[
thªad
].
ßm∂î©e
, 
nc€f
);

253 
zcvec
 = 
	`√wvec_COMPLEX
 (
f·Àn
, "filter z vec in setFilter");

254 
±mp
 = 
	`f·wf_∂™_d·_1d
 (
f·Àn
,

255 (
f·wf_com∂ex
 *Ë
zcvec
,

256 (
f·wf_com∂ex
 *Ë
rx
[
thªad
][
subrx
].
fût
.
ovsv
->
zfvec
,

257 
FFTW_FORWARD
, 
uni
[
thªad
].
wisdom
.
bôs
);

258 #ifde‡
LHS


259 
i
 = 0; i < 
nc€f
; i++)

260 
zcvec
[
i
] = 
rx
[
thªad
][
subrx
].
fût
.
c€f
->coef[i];

262 
i
 = 0; i < 
nc€f
; i++)

263 
zcvec
[
f·Àn
 - 
nc€f
 + 
i
] = 
rx
[
thªad
][
subrx
].
fût
.
c€f
->coef[i];

265 
	`f·wf_execuã
 (
±mp
);

266 
	`f·wf_de°roy_∂™
 (
±mp
);

267 
	`dñvec_COMPLEX
 (
zcvec
);

268 
	`n‹mÆize_vec_COMPLEX
 (
rx
[
thªad
][
subrx
].
fût
.
ovsv
->
zfvec
,Ñx[thªad][subrx].fût.ovsv->
f·Àn
,

269 
rx
[
thªad
][
subrx
].
fût
.
ovsv
->
sˇÀ
);

270 
	`mem˝y
 ((*Ë
rx
[
thªad
][
subrx
].
fût
.
ßve
, (*Ërx[thªad][subrx].fût.
ovsv
->
zfvec
,

271 
rx
[
thªad
][
subrx
].
fût
.
ovsv
->
f·Àn
 *  (
COMPLEX
));

273 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

275  
πn
;

276 
	}
}

278 
DâSP_EXP
 

279 
	$Rñó£_Upd©e
 ()

281 
	`£m_po°
 (&
t›
[0].
sync
.
upd
.
£m
);

282 
	`£m_po°
 (&
t›
[1].
sync
.
upd
.
£m
);

283 
	`£m_po°
 (&
t›
[2].
sync
.
upd
.
£m
);

284 
	}
}

286 
DâSP_EXP
 

287 
	$SëRXOuçutGaö
(
thªad
, 
subrx
, 
g
)

289 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

290 
rx
[
thªad
][
subrx
].
ouçut_gaö
 = (
REAL
)
g
;

291 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

292 
	}
}

294 
DâSP_EXP
 

295 
	$SëOscPha£
(
pha£
)

297 
i
,
j
;

298 
	`£m_waô
(&
t›
[0].
sync
.
upd
.
£m
);

299 
	`£m_waô
(&
t›
[1].
sync
.
upd
.
£m
);

300 
	`£m_waô
(&
t›
[2].
sync
.
upd
.
£m
);

301 
i
=0;i<3;i++) {

302 
j
=0;j<
uni
[
i
].
mu…úx
.
ƒx
;j++Ë
rx
[i][j].
osc
.
pha£
 =Öhase;

303 
tx
[
i
].
osc
.
pha£
 =Öhase;

305 
	`£m_po°
(&
t›
[2].
sync
.
upd
.
£m
);

306 
	`£m_po°
(&
t›
[1].
sync
.
upd
.
£m
);

307 
	`£m_po°
(&
t›
[0].
sync
.
upd
.
£m
);

308 
	}
}

310 
DâSP_EXP
 

311 
	$SëRXOsc
 (
thªad
, 
subrx
, 
√w‰eq
)

313 i‡(
	`Ábs
 (
√w‰eq
Ë>0.5 * 
uni
[
thªad
].
ßm∂î©e
)

316 
√w‰eq
 *2.0 * 
M_PI
 / 
uni
[
thªad
].
ßm∂î©e
;

317 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

318 
rx
[
thªad
][
subrx
].
osc
.
gí
->
Fªquícy
 = (
REAL
)
√w‰eq
;

319 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

321 
	}
}

323 
DâSP_EXP
 

324 
	$SëTXOsc
 (
thªad
, 
√w‰eq
)

326 i‡(
	`Ábs
 (
√w‰eq
Ë>0.5 * 
uni
[
thªad
].
ßm∂î©e
)

329 
√w‰eq
 *2.0 * 
M_PI
 / 
uni
[
thªad
].
ßm∂î©e
;

330 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

331 
tx
[
thªad
].
osc
.
gí
->
Fªquícy
 = (
REAL
)
√w‰eq
;

332 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

334 
	}
}

336 
DâSP_EXP
 

337 
	$SëSam∂eR©e
 (
√wSam∂eR©e
)

339 
	`ª£t_f‹_ßm∂î©e
 (
REAL
);

340 
πn
 = -1;

342 
thªad
;

343 
REAL
 
ßm∂î©e
 = (REAL)
√wSam∂eR©e
;

346 
thªad
 = 0;thread < 3;Åhread++)

348 
t›
[
thªad
].
su•
 = 
TRUE
;

349 
	`£m_waô
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

351 i‡(
ßm∂î©e
 !
uni
[0].samplerate)

353 i‡(
	`ª£t_f‹_ßm∂î©e
 (
ßm∂î©e
) != -1)

354 
πn
 = 0;

356 
thªad
 = 0;thread < 3;Åhread++)

357 
t›
[
thªad
].
su•
 = 
FALSE
;

358 
	`£m_po°
 (&
t›
[2].
sync
.
upd
.
£m
);

359 
	`£m_po°
 (&
t›
[1].
sync
.
upd
.
£m
);

360 
	`£m_po°
 (&
t›
[0].
sync
.
upd
.
£m
);

361  
πn
;

362 
	}
}

364 
DâSP_EXP
 

365 
	$SëNR
 (
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

367 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

368 
rx
[
thªad
][
subrx
].
™r
.
Êag
 = 
£tô
;

369 i‡(!
£tô
Ë
	`mem£t
(
rx
[
thªad
][
subrx
].
™r
.
gí
->
ad≠tive_fûãr
,0,(
COMPLEX
)*128);

370 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

371 
	}
}

373 
DâSP_EXP
 

374 
	$SëNRvÆs
 (
thªad
, 
subrx
, 
èps
, 
dñay
, 
gaö
, 
Àakage
)

376 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

377 
rx
[
thªad
][
subrx
].
™r
.
gí
->
ad≠tive_fûãr_size
 = 
èps
;

378 
rx
[
thªad
][
subrx
].
™r
.
gí
->
dñay
 = delay;

379 
rx
[
thªad
][
subrx
].
™r
.
gí
->
ad≠èti⁄_øã
 = (
REAL
)
gaö
;

380 
rx
[
thªad
][
subrx
].
b™r
.
gí
->
ad≠èti⁄_øã
 = 0.1f*(
REAL
)
gaö
;

381 
rx
[
thªad
][
subrx
].
™r
.
gí
->
Àakage
 = (
REAL
)leakage;

382 
	`mem£t
(
rx
[
thªad
][
subrx
].
™r
.
gí
->
ad≠tive_fûãr
,0,(
COMPLEX
)*128);

383 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

384 
	}
}

386 
DâSP_EXP
 

387 
	$SëTXCom∑ndSt
 (
thªad
, 
BOOLEAN
 
£tô
)

389 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

390 
tx
[
thªad
].
˝d
.
Êag
 = 
£tô
;

391 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

392 
	}
}

394 
DâSP_EXP
 

395 
	$SëTXCom∑nd
 (
thªad
, 
£tô
)

397 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

398 
	`WSCRe£t
 (
tx
[
thªad
].
˝d
.
gí
, -(
REAL
)
£tô
);

399 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

400 
	}
}

402 
DâSP_EXP
 

403 
	$SëTXSquñchSt
 (
thªad
, 
BOOLEAN
 
£tô
)

405 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

406 
tx
[
thªad
].
squñch
.
Êag
 = 
£tô
;

407 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

408 
	}
}

410 
DâSP_EXP
 

411 
	$SëTXSquñchVÆ
 (
thªad
, 
£tô
)

413 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

414 
tx
[
thªad
].
squñch
.
thªsh
 = 
£tô
;

415 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

416 
	}
}

418 
DâSP_EXP
 

419 
	$SëTXSquñchAâ
 (
thªad
, 
£tô
)

421 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

422 
tx
[
thªad
].
squñch
.
©ãn
 = 
£tô
;

423 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

424 
	}
}

426 
DâSP_EXP
 

427 
	$SëANF
 (
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

429 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

430 
rx
[
thªad
][
subrx
].
™f
.
Êag
 = 
£tô
;

431 i‡(!
£tô
Ë
	`mem£t
(
rx
[
thªad
][
subrx
].
™f
.
gí
->
ad≠tive_fûãr
,0,(
COMPLEX
)*128);

432 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

433 
	}
}

436 
DâSP_EXP
 

437 
	$SëANFvÆs
 (
thªad
, 
subrx
, 
èps
, 
dñay
, 
gaö
, 
Àakage
)

439 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

441 
rx
[
thªad
][
subrx
].
™f
.
gí
->
size
 = 
èps
;

442 
rx
[
thªad
][
subrx
].
™f
.
gí
->
dñay
 = delay;

443 
rx
[
thªad
][
subrx
].
™f
.
gí
->
ad≠èti⁄_øã
 = (
REAL
)
gaö
;

444 
rx
[
thªad
][
subrx
].
b™f
.
gí
->
ad≠èti⁄_øã
 = (
REAL
)
gaö
*0.1f;

445 
rx
[
thªad
][
subrx
].
™f
.
gí
->
Àakage
 = (
REAL
)leakage;

446 
	`mem£t
(
rx
[
thªad
][
subrx
].
™f
.
gí
->
ad≠tive_fûãr
,0,(
COMPLEX
)*128);

448 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

449 
	}
}

451 
DâSP_EXP
 

452 
	$SëNB
 (
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

454 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

456 
rx
[
thªad
][
subrx
].
nb
.
Êag
 = 
£tô
;

458 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

459 
	}
}

461 
DâSP_EXP
 

462 
	$SëNBvÆs
 (
thªad
, 
subrx
, 
thªshﬁd
)

464 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

466 
rx
[
thªad
][
subrx
].
nb
.
gí
->
thªshﬁd
 = (
REAL
)threshold;

468 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

469 
	}
}

471 
DâSP_EXP
 

472 
	$SëSDROM
 (
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

474 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

476 
rx
[
thªad
][
subrx
].
nb_sdrom
.
Êag
 = 
£tô
;

478 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

479 
	}
}

481 
DâSP_EXP
 

482 
	$SëSDROMvÆs
 (
thªad
, 
subrx
, 
thªshﬁd
)

484 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

486 
rx
[
thªad
][
subrx
].
nb_sdrom
.
gí
->
thªshﬁd
 = (
REAL
)threshold;

488 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

489 
	}
}

491 
DâSP_EXP
 

492 
	$SëBIN
 (
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

494 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

496 
rx
[
thªad
][
subrx
].
bö
.
Êag
 = 
£tô
;

498 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

499 
	}
}

501 
DâSP_EXP
 

502 
	$SëRXAGC
 (
thªad
, 
subrx
, 
AGCMODE
 
£tô
)

504 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

506 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
mode
 = 1;

507 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
©èck
 =

508 (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (2.0 * 
uni
[
thªad
].
ßm∂î©e
)));

509 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
⁄e_m_©èck
 =

510 (
REAL
Ë(1.0 - 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
©èck
);

511 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
h™gödex
 =Ñx[thªad][subrx].dâ•agc.gí->
¶owödx
 = 0;

512 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
Á°ödx
 = ()(0.0027f*
uni
[thªad].
ßm∂î©e
);

513 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
out_ödx
 = ()(0.003f*
uni
[thªad].
ßm∂î©e
);

514 
£tô
)

516 
agcOFF
:

517 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
mode
 = 
agcOFF
;

518 
rx
[
thªad
][
subrx
].
dâ•agc
.
Êag
 = 
TRUE
;

519 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
gaö
.
fix
 = 1000.0;

521 
agcLONG
:

522 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
mode
 = 
agcLONG
;

523 
rx
[
thªad
][
subrx
].
dâ•agc
.
Êag
 = 
TRUE
;

524 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
h™gtime
 = (
REAL
) 0.75;

525 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
Á°h™gtime
 = (
REAL
) 0.075;

526 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
deˇy
 = (
REAL
Ë(1.0 - 
	`exp
 (-0.5 / 
uni
[thªad].
ßm∂î©e
));

527 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
⁄e_m_deˇy
 =

528 (
REAL
Ë(1.0 - 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
deˇy
);

530 
agcSLOW
:

531 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
mode
 = 
agcSLOW
;

532 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
h™gtime
 = (
REAL
) 0.5;

533 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
Á°h™gtime
 = (
REAL
) 0.05;

534 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
deˇy
 =

535 (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (500.0 * 
uni
[
thªad
].
ßm∂î©e
)));

536 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
⁄e_m_deˇy
 =

537 (
REAL
Ë(1.0 - 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
deˇy
);

538 
rx
[
thªad
][
subrx
].
dâ•agc
.
Êag
 = 
TRUE
;

540 
agcMED
:

541 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
mode
 = 
agcMED
;

542 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
h™gtime
 = (
REAL
) 0.25;

543 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
Á°h™gtime
 = (
REAL
) 0.025;

544 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
deˇy
 =

545 (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (250.0 * 
uni
[
thªad
].
ßm∂î©e
)));

546 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
⁄e_m_deˇy
 =

547 (
REAL
Ë(1.0 - 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
deˇy
);

548 
rx
[
thªad
][
subrx
].
dâ•agc
.
Êag
 = 
TRUE
;

550 
agcFAST
:

551 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
mode
 = 
agcFAST
;

552 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
Á°h™gtime
 = (
REAL
) 0.01;

553 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
h™gtime
 = (
REAL
) 0.02;

554 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
deˇy
 =

555 (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (100.0 * 
uni
[
thªad
].
ßm∂î©e
)));

556 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
⁄e_m_deˇy
 =

557 (
REAL
Ë(1.0 - 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
deˇy
);

558 
rx
[
thªad
][
subrx
].
dâ•agc
.
Êag
 = 
TRUE
;

562 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

563 
	}
}

565 
DâSP_EXP
 

566 
	$SëRXAGCAâack
 (
thªad
, 
subrx
, 
©èck
)

568 
REAL
 
tmp
 = (REAL)
©èck
;

569 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

571 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
h™gödex
 =

572 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
¶owödx
 = 0;

573 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
Á°ödx
 = ()(0.0027*
uni
[thªad].
ßm∂î©e
);

574 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
©èck
 =

575 (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (
tmp
 * 
uni
[
thªad
].
ßm∂î©e
)));

576 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
⁄e_m_©èck
 =

577 (
REAL
Ë
	`exp
 (-1000.0 / (
tmp
 * 
uni
[
thªad
].
ßm∂î©e
));

578 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
out_ödx
 = (Ë(
uni
[thªad].
ßm∂î©e
 * 
tmp
 * 0.003f);

580 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

581 
	}
}

583 
DâSP_EXP
 

584 
	$SëRXAGCDeˇy
 (
thªad
, 
subrx
, 
deˇy
)

586 
REAL
 
tmp
 = (REAL)
deˇy
;

587 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

589 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
deˇy
 =

590 (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (
tmp
 * 
uni
[
thªad
].
ßm∂î©e
)));

591 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
⁄e_m_deˇy
 =

592 (
REAL
Ë
	`exp
 (-1000.0 / (
tmp
 * 
uni
[
thªad
].
ßm∂î©e
));

594 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

595 
	}
}

597 
DâSP_EXP
 

598 
	$SëRXAGCH™g
 (
thªad
, 
subrx
, 
h™g
)

600 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

602 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
h™gtime
 =

603 (
REAL
Ë0.001 * (REAL)
h™g
;

604 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
h™gödex
 = 0;

606 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

607 
	}
}

609 
DâSP_EXP
 

610 
	$SëRXAGCSl›e
 (
thªad
, 
subrx
, 
¶›e
)

612 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

614 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
¶›e
 =

615 (
REAL
Ë
	`dB2lö
 (0.1‡* (REAL)
¶›e
);

617 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

618 
	}
}

620 
DâSP_EXP
 

621 
	$SëRXAGCH™gThªshﬁd
 (
thªad
, 
subrx
, 
h™gthªshﬁd
)

623 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

625 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
h™gthªsh
 =

626 (
REAL
Ë0.01 * (REAL)
h™gthªshﬁd
;

627 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
h™gödex
 = 0;

629 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

630 
	}
}

632 
DâSP_EXP
 

633 
	$SëTXALCAâack
 (
thªad
, 
©èck
)

635 
REAL
 
tmp
 = (REAL)
©èck
;

636 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

638 
tx
[
thªad
].
Æc
.
gí
->
©èck
 = (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (
tmp
 * 
uni
[thªad].
ßm∂î©e
)));

639 
tx
[
thªad
].
Æc
.
gí
->
⁄e_m_©èck
 = (
REAL
Ë
	`exp
 (-1000.0 / (
tmp
 * 
uni
[thªad].
ßm∂î©e
));

640 
tx
[
thªad
].
Æc
.
gí
->
¶owödx
 = 0;

641 
tx
[
thªad
].
Æc
.
gí
->
out_ödx
 = (Ë(0.003 * 
uni
[thªad].
ßm∂î©e
 * 
tmp
);

642 
tx
[
thªad
].
Æc
.
gí
->
Á°ödx
 = (Ë(0.0027 * 
uni
[thªad].
ßm∂î©e
 * 
tmp
);

654 
tx
[
thªad
].
Æc
.
gí
->
Á°h™gtime
 = (
REAL
) 0.1;

656 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

657 
	}
}

659 
DâSP_EXP
 

660 
	$SëTXAMC¨rõrLevñ
 (
thªad
, 
£tô
)

662 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

664 
tx
[
thªad
].
am
.
ˇºõr_Àvñ
 = (
REAL
)
£tô
;

666 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

667 
	}
}

669 
DâSP_EXP
 

670 
	$SëTXALCDeˇy
 (
thªad
, 
deˇy
)

672 
REAL
 
tmp
 = (REAL)
deˇy
;

673 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

675 
tx
[
thªad
].
Æc
.
gí
->
deˇy
 =

676 (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (
tmp
 * 
uni
[
thªad
].
ßm∂î©e
)));

677 
tx
[
thªad
].
Æc
.
gí
->
⁄e_m_deˇy
 =

678 (
REAL
Ë
	`exp
 (-1000.0 / (
tmp
 * 
uni
[
thªad
].
ßm∂î©e
));

680 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

681 
	}
}

683 
DâSP_EXP
 

684 
	$SëTXALCBŸ
 (
thªad
, 
max_agc
)

686 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

688 
tx
[
thªad
].
Æc
.
gí
->
gaö
.
bŸtom
 = 
	`dB2lö
((
REAL
)
max_agc
);

690 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

691 
	}
}

693 
DâSP_EXP
 

694 
	$SëTXALCH™g
 (
thªad
, 
deˇy
)

696 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

698 
tx
[
thªad
].
Æc
.
gí
->
h™gtime
 = 0.001f*(
REAL
)
deˇy
;

699 
tx
[
thªad
].
Æc
.
gí
->
h™gödex
 = 0;

701 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

702 
	}
}

704 
DâSP_EXP
 

705 
	$SëTXLevñîSt
 (
thªad
, 
BOOLEAN
 
°©e
)

707 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

709 
tx
[
thªad
].
Àvñî
.
Êag
 = 
°©e
;

711 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

712 
	}
}

714 
DâSP_EXP
 

715 
	$SëTXLevñîAâack
 (
thªad
, 
©èck
)

717 
REAL
 
tmp
 = (REALË
©èck
;

718 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

720 
tx
[
thªad
].
Àvñî
.
gí
->
©èck
 = (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (
tmp
 * 
uni
[thªad].
ßm∂î©e
)));

721 
tx
[
thªad
].
Àvñî
.
gí
->
⁄e_m_©èck
 = (
REAL
Ë
	`exp
 (-1000.0 / (
tmp
 * 
uni
[thªad].
ßm∂î©e
));

722 
tx
[
thªad
].
Àvñî
.
gí
->
¶owödx
 = 0;

723 
tx
[
thªad
].
Àvñî
.
gí
->
out_ödx
 = (Ë(0.003 * 
uni
[thªad].
ßm∂î©e
 * 
tmp
);

724 
tx
[
thªad
].
Àvñî
.
gí
->
Á°ödx
 = (Ë(0.0027 * 
uni
[thªad].
ßm∂î©e
 * 
tmp
);

736 
tx
[
thªad
].
Àvñî
.
gí
->
Á°h™gtime
 = (
REAL
) 0.01;

737 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

738 
	}
}

740 
DâSP_EXP
 

741 
	$SëTXLevñîDeˇy
 (
thªad
, 
deˇy
)

743 
REAL
 
tmp
 = (REALË
deˇy
;

744 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

745 
tx
[
thªad
].
Àvñî
.
gí
->
deˇy
 =

746 (
REAL
Ë(1.0 - 
	`exp
 (-1000.0 / (
tmp
 * 
uni
[
thªad
].
ßm∂î©e
)));

747 
tx
[
thªad
].
Àvñî
.
gí
->
⁄e_m_deˇy
 =

748 (
REAL
Ë
	`exp
 (-1000.0 / (
tmp
 * 
uni
[
thªad
].
ßm∂î©e
));

749 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

750 
	}
}

752 
DâSP_EXP
 

753 
	$SëTXLevñîH™g
 (
thªad
, 
deˇy
)

755 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

756 
tx
[
thªad
].
Àvñî
.
gí
->
h™gtime
 = (
REAL
)(0.001*(REAL)
deˇy
);

757 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

758 
	}
}

760 
DâSP_EXP
 

761 
	$SëTXLevñîT›
 (
thªad
, 
maxgaö
)

763 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

764 
tx
[
thªad
].
Àvñî
.
gí
->
gaö
.
t›
 = (
REAL
)
	`dB2lö
((REALË
maxgaö
);

765 
tx
[
thªad
].
Àvñî
.
gí
->
h™gödex
 = 0;

766 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

767 
	}
}

769 
DâSP_EXP
 

770 
	$SëFixedAGC
 (
thªad
, 
subrx
, 
fixed_agc
)

772 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

773 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
gaö
.
fix
 = 
	`dB2lö
((
REAL
)
fixed_agc
);

774 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

775 
	}
}

777 
DâSP_EXP
 

778 
	$SëRXAGCT›
 (
thªad
, 
subrx
, 
max_agc
)

780 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

781 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
gaö
.
t›
 =

782 
	`max
(
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
gaö
.
bŸtom
,
	`dB2lö
((
REAL
)
max_agc
));

783 
rx
[
thªad
][
subrx
].
dâ•agc
.
gí
->
h™gödex
 = 0;

784 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

785 
	}
}

787 
DâSP_EXP
 

788 
	$GëSAMPLLvÆs
(
thªad
, 
subrx
, 
REAL
 *
Æpha
, REAL *
bëa
)

790 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

791 *
Æpha
 = 
rx
[
thªad
][
subrx
].
am
.
gí
->
∂l
.alpha;

792 *
bëa
 = 
rx
[
thªad
][
subrx
].
am
.
gí
->
∂l
.beta;

793 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

794 
	}
}

796 
DâSP_EXP
 

797 
	$SëSAMPLLvÆs
(
thªad
, 
subrx
, 
REAL
 
Æpha
, REAL 
bëa
)

799 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

800 
rx
[
thªad
][
subrx
].
am
.
gí
->
∂l
.
Æpha
 =álpha;

801 
rx
[
thªad
][
subrx
].
am
.
gí
->
∂l
.
bëa
 = beta;

802 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

803 
	}
}

805 
DâSP_EXP
 

806 
	$GëSAMFªq
(
thªad
, 
subrx
, 
REAL
 *
‰eq
)

808 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

809 *
‰eq
 = 
rx
[
thªad
][
subrx
].
am
.
gí
->
∂l
.‰eq.
f
;

810 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

811 
	}
}

813 
DâSP_EXP
 

814 
	$SëC‹ª˘IQ
 (
thªad
, 
subrx
, 
pha£
, 
gaö
)

816 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

817 
rx
[
thªad
][
subrx
].
iqfix
->
pha£
 = (
REAL
) (0.001 *Öhase);

818 
rx
[
thªad
][
subrx
].
iqfix
->
gaö
 = (
REAL
) (1.0 + 0.001 * gain);

819 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

820 
	}
}

822 
DâSP_EXP
 

823 
	$SëC‹ª˘IQGaö
 (
thªad
, 
subrx
, 
gaö
)

825 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

826 
rx
[
thªad
][
subrx
].
iqfix
->
gaö
 = (
REAL
) (1.0 + 0.001 * gain);

827 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

828 
	}
}

830 
DâSP_EXP
 

831 
	$SëC‹ª˘IQPha£
 (
thªad
, 
subrx
, 
pha£
)

833 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

834 
rx
[
thªad
][
subrx
].
iqfix
->
pha£
 = (
REAL
) (0.001 *Öhase);

835 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

836 
	}
}

838 
DâSP_EXP
 

839 
	$SëC‹ª˘IQE«bÀ
(
£tô
)

841 
IQdoô
;

842 
	`£m_waô
(&
t›
[0].
sync
.
upd
.
£m
);

844 
IQdoô
 = 
£tô
;

846 
	`£m_po°
(&
t›
[0].
sync
.
upd
.
£m
);

847 
	}
}

849 
DâSP_EXP
 

850 
	$SëC‹ª˘RXIQMu
 (
thªad
, 
subrx
, 
mu
)

852 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

853 
rx
[
thªad
][
subrx
].
iqfix
->
mu
 = (
REAL
)mu;

857 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

858 
	}
}

860 
DâSP_EXP
 

861 
	$SëC‹ª˘WBIRSèã
(
thªad
,
WBIR_STATE
 
wbú
)

863 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

864 
uni
[
thªad
].
wbú_°©e
 = 
wbú
;

865 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

866 
	}
}

868 
DâSP_EXP
 
REAL


869 
	$GëC‹ª˘RXIQMu
(
thªad
, 
subrx
)

871  
rx
[
thªad
][
subrx
].
iqfix
->
mu
;

872 
	}
}

874 
DâSP_EXP
 

875 
	$SëC‹ª˘RXIQw
 (
thªad
, 
subrx
, 
REAL
 
wr
, REAL 
wi
, 
ödex
)

877 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

878 
rx
[
thªad
][
subrx
].
iqfix
->
w
[
ödex
] = 
	`Cm∂x
((
REAL
)
wr
,(REAL)
wi
);

879 i‡(
ödex
 =0Ë
	`mem£t
((*)&
rx
[
thªad
][
subrx
].
iqfix
->
w
[1],0,15*(
COMPLEX
));

880 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

881 
	}
}

883 
DâSP_EXP
 

884 
	$GëC‹ª˘RXIQw
(
thªad
, 
subrx
, 
REAL
 *
ªÆw
, REAL *
imagw
, 
ödex
)

886 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

887 *
ªÆw
 = 
rx
[
thªad
][
subrx
].
iqfix
->
w
[
ödex
].
ª
;

888 *
imagw
 = 
rx
[
thªad
][
subrx
].
iqfix
->
w
[
ödex
].
im
;

889 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

890 
	}
}

892 
DâSP_EXP
 

893 
	$SëC‹ª˘RXIQwRól
 (
thªad
, 
subrx
, 
REAL
 
wr
, 
ödex
)

895 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

896 
rx
[
thªad
][
subrx
].
iqfix
->
w
[
ödex
].
ª
 = (
REAL
)
wr
;

897 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

898 
	}
}

900 
DâSP_EXP
 

901 
	$SëC‹ª˘RXIQwImag
 (
thªad
, 
subrx
, 
REAL
 
wi
, 
ödex
)

903 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

904 
rx
[
thªad
][
subrx
].
iqfix
->
w
[
ödex
].
im
 = (
REAL
)
wi
;

905 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

906 
	}
}

908 
DâSP_EXP
 

909 
	$SëC‹ª˘TXIQ
 (
thªad
, 
pha£
, 
gaö
)

911 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

912 
tx
[
thªad
].
iqfix
->
pha£
 = (
REAL
) (0.001 *Öhase);

913 
tx
[
thªad
].
iqfix
->
gaö
 = (
REAL
) (1.0 + 0.001 * gain);

914 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

915 
	}
}

917 
DâSP_EXP
 

918 
	$SëC‹ª˘TXIQGaö
 (
thªad
, 
gaö
)

920 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

921 
tx
[
thªad
].
iqfix
->
gaö
 = (
REAL
) (1.0 + 0.001 * gain);

922 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

923 
	}
}

925 
DâSP_EXP
 

926 
	$SëC‹ª˘TXIQPha£
 (
thªad
, 
pha£
)

928 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

929 
tx
[
thªad
].
iqfix
->
pha£
 = (
REAL
) (0.001 *Öhase);

930 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

931 
	}
}

933 
DâSP_EXP
 

934 
	$SëC‹ª˘TXIQMu
 (
thªad
, 
mu
)

936 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

937 
tx
[
thªad
].
iqfix
->
mu
 = (
REAL
)mu;

938 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

939 
	}
}

941 
DâSP_EXP
 

942 
	$SëC‹ª˘TXIQW
 (
thªad
, 
wr
, 
wi
)

944 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

945 
tx
[
thªad
].
iqfix
->
w
[0] = 
	`Cm∂x
((
REAL
)
wr
,(REAL)
wi
);

946 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

947 
	}
}

949 
DâSP_EXP
 

950 
	$SëPWSmode
 (
thªad
, 
subrx
, 
£tô
)

952 i‡(
rx
[
thªad
][
subrx
].
mode
 =
SPEC
)

953 
£tô
 = 
SPEC_SEMI_RAW
;

955 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

956 
£tô
)

959 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_FILT
;

962 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_PRE_FILT
;

965 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_SEMI_RAW
;

968 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_DET
;

973 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

974 
	}
}

976 
DâSP_EXP
 

977 
	$SëWödow
 (
thªad
, 
Wödowty≥
 
wödow
)

979 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

980 i‡(!
uni
[
thªad
].
•ec
.
pﬁypha£
)

981 
	`makewödow
 (
wödow
, 
uni
[
thªad
].
•ec
.
size
, uni[thread].spec.window);

982 
uni
[
thªad
].
•ec
.
wöty≥
 = 
wödow
;

983 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

984 
	}
}

986 
DâSP_EXP
 

987 
	$SëS≥˘rumPﬁypha£
 (
thªad
, 
BOOLEAN
 
£tô
)

989 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

990 i‡(
uni
[
thªad
].
•ec
.
pﬁypha£
 !
£tô
)

992 i‡(
£tô
)

994 
uni
[
thªad
].
•ec
.
pﬁypha£
 = 
TRUE
;

995 
uni
[
thªad
].
•ec
.
mask
 = (8 * uni[thªad].•ec.
size
) - 1;

997 
RólFIR
 
WOLAfú
;

998 
REAL
 
MaxT≠
 = 0;

999 
i
;

1000 
WOLAfú
 =

1001 
	`√wFIR_Low∑ss_REAL
 (1.0, (
REAL
Ë
uni
[
thªad
].
•ec
.
size
,

1002 8 * 
uni
[
thªad
].
•ec
.
size
 - 1);

1003 
	`mem£t
 (
uni
[
thªad
].
•ec
.
wödow
, 0, 8 *  (
REAL
Ë* uni[thªad].•ec.
size
);

1004 
	`mem˝y
 (
uni
[
thªad
].
•ec
.
wödow
, 
	`FIRc€f
 (
WOLAfú
),

1005  (
REAL
Ë* (8 * 
uni
[
thªad
].
•ec
.
size
 - 1));

1006 
i
 = 0; i < 8 * 
uni
[
thªad
].
•ec
.
size
; i++)

1007 
MaxT≠
 = 
	`max
 (MaxT≠, (
REAL
Ë
	`Ábs
 (
uni
[
thªad
].
•ec
.
wödow
[
i
]));

1008 
MaxT≠
 = 0.707107f / MaxTap;

1009 
i
 = 0; i < 8 * 
uni
[
thªad
].
•ec
.
size
; i++)

1010 
uni
[
thªad
].
•ec
.
wödow
[
i
] *
MaxT≠
;

1011 
	`dñFIR_REAL
 (
WOLAfú
);

1016 
uni
[
thªad
].
•ec
.
pﬁypha£
 = 
FALSE
;

1017 
uni
[
thªad
].
•ec
.
mask
 = uni[thªad].•ec.
size
 - 1;

1018 
	`mem£t
 (
uni
[
thªad
].
•ec
.
wödow
, 0,  (
REAL
Ë* uni[thªad].•ec.
size
);

1019 
	`makewödow
 (
uni
[
thªad
].
•ec
.
wöty≥
, uni[thªad].•ec.
size
 - 1, uni[thªad].•ec.
wödow
);

1021 
	`ªöô_•e˘rum
 (&
uni
[
thªad
].
•ec
);

1023 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1024 
	}
}

1026 
DâSP_EXP
 

1027 
	$SëGΩhTXEQ
 (
thªad
, *
txeq
)

1029 
i
;

1030 
f·wf_∂™
 
±mp
;

1031 
COMPLEX
 *
fûtc€f
, *
tmpc€f
;

1032 
Com∂exFIR
 
tmpfût
;

1033 
REAL
 
¥ómp
, 
gaö
[3];

1035 
fûtc€f
 = 
	`√wvec_COMPLEX
 (512, "filter for EQ");

1036 
tmpc€f
 = 
	`√wvec_COMPLEX
 (257, "tmp filter for EQ");

1037 
¥ómp
 = (
REAL
Ë
	`dB2lö
 ((REALË
txeq
[0]) * 0.5f;

1038 
gaö
[0] = (
REAL
Ë
	`dB2lö
 ((REALË
txeq
[1]Ë* 
¥ómp
;

1039 
gaö
[1] = (
REAL
Ë
	`dB2lö
 ((REALË
txeq
[2]Ë* 
¥ómp
;

1040 
gaö
[2] = (
REAL
Ë
	`dB2lö
 ((REALË
txeq
[3]Ë* 
¥ómp
;

1042 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1044 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (-400, 400, 
uni
[
thªad
].
ßm∂î©e
, 257);

1045 
i
 = 0; i < 257; i++)

1046 
tmpc€f
[
i
] = 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[0]);

1047 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1049 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (400, 1500, 
uni
[
thªad
].
ßm∂î©e
, 257);

1050 
i
 = 0; i < 257; i++)

1051 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[1]));

1052 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1054 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (-1500, -400, 
uni
[
thªad
].
ßm∂î©e
, 257);

1055 
i
 = 0; i < 257; i++)

1056 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[1]));

1057 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1059 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (1500, 6000, 
uni
[
thªad
].
ßm∂î©e
, 257);

1060 
i
 = 0; i < 257; i++)

1061 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[2]));

1062 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1064 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (-6000, -1500, 
uni
[
thªad
].
ßm∂î©e
, 257);

1065 
i
 = 0; i < 257; i++)

1066 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[2]));

1067 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1068 
i
 = 0; i < 257; i++)

1069 
fûtc€f
[255 + 
i
] = 
	`Cs˛
(
tmpc€f
[i],(
REAL
)(1.0/512.0));

1070 
±mp
 =

1071 
	`f·wf_∂™_d·_1d
 (512, (
f·wf_com∂ex
 *Ë
fûtc€f
,

1072 (
f·wf_com∂ex
 *Ë
tx
[
thªad
].
gøpheq
.
gí
->
p
->
zfvec
,

1073 
FFTW_FORWARD
, 
uni
[
thªad
].
wisdom
.
bôs
);

1075 
	`f·wf_execuã
 (
±mp
);

1076 
	`f·wf_de°roy_∂™
 (
±mp
);

1077 
	`dñvec_COMPLEX
 (
fûtc€f
);

1078 
	`dñvec_COMPLEX
(
tmpc€f
);

1080 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1081 
	}
}

1083 
DâSP_EXP
 

1084 
	$SëGΩhTXEQ10
(
thªad
, *
txeq
)

1096 
i
,
j
,
b™d
;

1097 
f·wf_∂™
 
±mp
;

1098 
COMPLEX
 *
fûtc€f
 = 
	`√wvec_COMPLEX
(512, "filter for EQ"),

1099 *
tmpc€f
 = 
	`√wvec_COMPLEX
(257, "tmp filter for EQ");

1100 
Com∂exFIR
 
tmpfût
;

1101 
REAL
 
¥ómp
;

1104 
¥ómp
 = 
	`dB2lö
((
REAL
Ë
txeq
[0]) * 0.5f;

1106 
j
 = 1, 
b™d
 = 15; j <= 10; j++, band += 3)

1108 
REAL
 
f_hîe
 = 
	`ISOb™d_gë_nomöÆ
(
b™d
),

1109 
f_bñow
 = 
	`gmón
(
f_hîe
 / 2.0f, f_here),

1110 
f_above
 = 
	`gmón
(
f_hîe
, f_here * 2.0f),

1111 
g_hîe
 = 
	`dB2lö
((
REAL
Ë
txeq
[
j
]Ë* 
¥ómp
;

1113 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
(-
f_above
, -
f_bñow
, 
uni
->
ßm∂î©e
, 257);

1114 
i
 = 0; i < 257; i++)

1115 
tmpc€f
[
i
] = 
	`Cadd
—mpc€f[i], 
	`Cs˛
(
tmpfût
->
c€f
[i], 
g_hîe
));

1116 
	`dñFIR_B™d∑ss_COMPLEX
(
tmpfût
);

1118 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
(
f_bñow
, 
f_above
, 
uni
->
ßm∂î©e
, 257);

1119 
i
 = 0; i < 257; i++)

1120 
tmpc€f
[
i
] = 
	`Cadd
—mpc€f[i], 
	`Cs˛
(
tmpfût
->
c€f
[i], 
g_hîe
));

1121 
	`dñFIR_B™d∑ss_COMPLEX
(
tmpfût
);

1124 
i
 = 0; i < 257; i++)

1125 
fûtc€f
[254 + 
i
] = 
	`Cs˛
(
tmpc€f
[i],(
REAL
)(1.0/512.0));

1127 
±mp
 = 
	`f·wf_∂™_d·_1d
(512,

1128 (
f·wf_com∂ex
 *Ë
fûtc€f
,

1129 (
f·wf_com∂ex
 *Ë
tx
[
thªad
].
gøpheq
.
gí
->
p
->
zfvec
,

1130 
FFTW_FORWARD
,

1131 
uni
->
wisdom
.
bôs
);

1133 
	`f·wf_execuã
(
±mp
);

1134 
	`f·wf_de°roy_∂™
(
±mp
);

1135 
	`dñvec_COMPLEX
(
fûtc€f
);

1136 
	`dñvec_COMPLEX
(
tmpc€f
);

1137 
	}
}

1140 
DâSP_EXP
 

1141 
	$SëGΩhTXEQcmd
 (
thªad
, 
BOOLEAN
 
°©e
)

1143 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1144 
tx
[
thªad
].
gøpheq
.
Êag
 = 
°©e
;

1145 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1146 
	}
}

1149 
DâSP_EXP
 

1150 
	$SëNŸch160
 (
thªad
, 
BOOLEAN
 
°©e
)

1153 
	}
}

1155 
DâSP_EXP
 

1156 
	$SëGΩhRXEQ
 (
thªad
, 
subrx
, *
rxeq
)

1158 
i
;

1159 
f·wf_∂™
 
±mp
;

1160 
COMPLEX
 *
fûtc€f
, *
tmpc€f
;

1161 
Com∂exFIR
 
tmpfût
;

1162 
REAL
 
¥ómp
, 
gaö
[3];

1164 
fûtc€f
 = 
	`√wvec_COMPLEX
 (512, "filter for EQ");

1165 
tmpc€f
 = 
	`√wvec_COMPLEX
 (257, "tmp filter for EQ");

1166 
¥ómp
 = (
REAL
Ë
	`dB2lö
 ((REALË
rxeq
[0]) * 0.5f;

1167 
gaö
[0] = (
REAL
Ë
	`dB2lö
 ((REALË
rxeq
[1]Ë* 
¥ómp
;

1168 
gaö
[1] = (
REAL
Ë
	`dB2lö
 ((REALË
rxeq
[2]Ë* 
¥ómp
;

1169 
gaö
[2] = (
REAL
Ë
	`dB2lö
 ((REALË
rxeq
[3]Ë* 
¥ómp
;

1172 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1174 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (-400, 400, 
uni
[
thªad
].
ßm∂î©e
, 257);

1175 
i
 = 0; i < 257; i++)

1176 
tmpc€f
[
i
] = 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[0]);

1177 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1179 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (400, 1500, 
uni
[
thªad
].
ßm∂î©e
, 257);

1180 
i
 = 0; i < 257; i++)

1181 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[1]));

1182 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1184 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (-1500, -400, 
uni
[
thªad
].
ßm∂î©e
, 257);

1185 
i
 = 0; i < 257; i++)

1186 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[1]));

1187 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1189 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (1500, 6000, 
uni
[
thªad
].
ßm∂î©e
, 257);

1190 
i
 = 0; i < 257; i++)

1191 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[2]));

1192 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1194 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
 (-6000, -1500, 
uni
[
thªad
].
ßm∂î©e
, 257);

1195 
i
 = 0; i < 257; i++)

1196 
tmpc€f
[
i
] = 
	`Cadd
 (tmpc€f[i], 
	`Cs˛
 (
tmpfût
->
c€f
[i], (
REAL
)
gaö
[2]));

1197 
	`dñFIR_B™d∑ss_COMPLEX
 (
tmpfût
);

1198 
i
 = 0; i < 257; i++)

1199 
fûtc€f
[255 + 
i
] = 
	`Cs˛
(
tmpc€f
[i],(
REAL
)(1.0/512.0));

1200 
±mp
 =

1201 
	`f·wf_∂™_d·_1d
 (512, (
f·wf_com∂ex
 *Ë
fûtc€f
,

1202 (
f·wf_com∂ex
 *Ë
rx
[
thªad
][
subrx
].
gøpheq
.
gí
->
p
->
zfvec
,

1203 
FFTW_FORWARD
, 
uni
[
thªad
].
wisdom
.
bôs
);

1205 
	`f·wf_execuã
 (
±mp
);

1206 
	`f·wf_de°roy_∂™
 (
±mp
);

1207 
	`dñvec_COMPLEX
 (
fûtc€f
);

1208 
	`dñvec_COMPLEX
(
tmpc€f
);

1210 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1212 
	}
}

1214 
DâSP_EXP
 

1215 
	$SëGΩhRXEQ10
(
thªad
, 
subrx
, *
rxeq
)

1227 
i
,
j
,
b™d
;

1228 
f·wf_∂™
 
±mp
;

1229 
COMPLEX
 *
fûtc€f
 = 
	`√wvec_COMPLEX
(512, "filter for EQ"),

1230 *
tmpc€f
 = 
	`√wvec_COMPLEX
(257, "tmp filter for EQ");

1231 
Com∂exFIR
 
tmpfût
;

1232 
REAL
 
¥ómp
;

1234 
¥ómp
 = 
	`dB2lö
((
REAL
Ë
rxeq
[0]) * 0.5f;

1236 
j
 = 1, 
b™d
 = 15; j <= 10; j++, band += 3)

1238 
REAL
 
f_hîe
 = 
	`ISOb™d_gë_nomöÆ
(
b™d
),

1239 
f_bñow
 = 
	`gmón
(
f_hîe
 / 2.0f, f_here),

1240 
f_above
 = 
	`gmón
(
f_hîe
, f_here * 2.0f),

1241 
g_hîe
 = 
	`dB2lö
((
REAL
Ë
rxeq
[
j
]Ë* 
¥ómp
;

1243 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
(-
f_above
, -
f_bñow
, 
uni
->
ßm∂î©e
, 257);

1244 
i
 = 0; i < 257; i++)

1245 
tmpc€f
[
i
] = 
	`Cadd
—mpc€f[i], 
	`Cs˛
(
tmpfût
->
c€f
[i], 
g_hîe
));

1246 
	`dñFIR_B™d∑ss_COMPLEX
(
tmpfût
);

1248 
tmpfût
 = 
	`√wFIR_B™d∑ss_COMPLEX
(
f_bñow
, 
f_above
, 
uni
->
ßm∂î©e
, 257);

1249 
i
 = 0; i < 257; i++)

1250 
tmpc€f
[
i
] = 
	`Cadd
—mpc€f[i], 
	`Cs˛
(
tmpfût
->
c€f
[i], 
g_hîe
));

1251 
	`dñFIR_B™d∑ss_COMPLEX
(
tmpfût
);

1254 
i
 = 0; i < 257; i++)

1255 
fûtc€f
[254 + 
i
] = 
	`Cs˛
(
tmpc€f
[i],(
REAL
)(1.0/512.0));;

1257 
±mp
 = 
	`f·wf_∂™_d·_1d
(512,

1258 (
f·wf_com∂ex
 *Ë
fûtc€f
,

1259 (
f·wf_com∂ex
 *Ë
rx
[
thªad
][
subrx
].
gøpheq
.
gí
->
p
->
zfvec
,

1260 
FFTW_FORWARD
,

1261 
uni
->
wisdom
.
bôs
);

1263 
	`f·wf_execuã
(
±mp
);

1264 
	`f·wf_de°roy_∂™
(
±mp
);

1265 
	`dñvec_COMPLEX
(
fûtc€f
);

1266 
	`dñvec_COMPLEX
(
tmpc€f
);

1267 
	}
}

1269 
DâSP_EXP
 

1270 
	$SëGΩhRXEQcmd
 (
thªad
, 
subrx
,
BOOLEAN
 
°©e
)

1272 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1273 
rx
[
thªad
][
subrx
].
gøpheq
.
Êag
 = 
°©e
;

1274 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1275 
	}
}

1277 
DâSP_EXP
 

1278 
	$SëTXAGCFF
 (
thªad
, 
BOOLEAN
 
£tô
)

1280 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1281 
tx
[
thªad
].
•r
.
Êag
 = 
£tô
;

1282 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1283 
	}
}

1285 
DâSP_EXP
 

1286 
	$SëTXAGCFFCom¥essi⁄
 (
thªad
, 
txcom¥essi⁄
)

1288 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1289 
tx
[
thªad
].
•r
.
gí
->
MaxGaö
 = (
REAL
Ë
	`pow
 (10.0, 
txcom¥essi⁄
 * 0.05);

1290 
tx
[
thªad
].
•r
.
gí
->
Ác
 = (
REAL
)

1291 ((((0.0000401002 * 
txcom¥essi⁄
) - 0.0032093390) *Åxcompression +

1292 0.0612862687Ë* 
txcom¥essi⁄
 + 0.9759745718);

1293 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1294 
	}
}

1296 
DâSP_EXP
 

1297 
	$SëSquñchVÆ
 (
thªad
, 
subrx
, 
£tô
)

1299 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1300 
rx
[
thªad
][
subrx
].
squñch
.
thªsh
 = 
£tô
;

1301 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1302 
	}
}

1304 
DâSP_EXP


1305 
	$SëSquñchSèã
 (
thªad
, 
subrx
,
BOOLEAN
 
£tô
)

1307 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1308 
rx
[
thªad
][
subrx
].
squñch
.
Êag
 = 
£tô
;

1309 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1310 
	}
}

1312 
DâSP_EXP
 

1313 
	$SëTRX
 (
thªad
, 
TRXMODE
 
£tô
)

1316 
	`£m_waô
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1317 
uni
[
thªad
].
mode
.
åx
 = 
£tô
;

1320 if(
£tô
 =
RX
)

1322 
i
=0; i<
uni
[
thªad
].
mu…úx
.
ƒx
; i++)

1323 
	`ª£t_OvSv
(
rx
[
thªad
][
i
].
fût
.
ovsv
);

1326 
	`ª£t_OvSv
(
tx
[
thªad
].
fût
.
ovsv
);

1329 
	`£m_po°
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1330 
	}
}

1332 
DâSP_EXP
 

1333 
	$FlushAŒBufs
 (
thªad
, 
BOOLEAN
 
åx
)

1335 
i
;

1336 
	`£m_waô
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1338 if(
åx
)

1340 
	`ª£t_OvSv
(
tx
[
thªad
].
fût
.
ovsv
);

1341 
	`mem£t
(
t›
[
thªad
].
hﬁd
.
buf
.
l
,0,t›[thªad].hﬁd.
size
.
‰ames
*(
REAL
));

1342 
	`mem£t
(
t›
[
thªad
].
hﬁd
.
buf
.
r
,0,t›[thªad].hﬁd.
size
.
‰ames
*(
REAL
));

1343 
	`DâSPAgc_Êushbuf
(
tx
[
thªad
].
Àvñî
.
gí
);

1344 
	`DâSPAgc_Êushbuf
(
tx
[
thªad
].
Æc
.
gí
);

1349 
	`mem£t
(
t›
[
thªad
].
hﬁd
.
buf
.
l
,0,t›[thªad].hﬁd.
size
.
‰ames
*(
REAL
));

1350 
	`mem£t
(
t›
[
thªad
].
hﬁd
.
buf
.
r
,0,t›[thªad].hﬁd.
size
.
‰ames
*(
REAL
));

1351 
i
=0; i<
uni
[
thªad
].
mu…úx
.
ƒx
; i++)

1353 
	`ª£t_OvSv
(
rx
[
thªad
][
i
].
fût
.
ovsv
);

1354 
	`DâSPAgc_Êushbuf
(
rx
[
thªad
][
i
].
dâ•agc
.
gí
);

1358 
	`£m_po°
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1361 
	}
}

1363 
DâSP_EXP
 

1364 
	$SëDSPBuÊí
 (
thªad
, 
√wBuffSize
)

1366 
	`ª£t_f‹_buÊí
 (, );

1367 
BOOLEAN
 
ª£t_em
;

1368 
	`£m_waô
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1369 
t›
[0].
su•
 = 
TRUE
;

1370 
	`ª£t_f‹_buÊí
 (
thªad
, 
√wBuffSize
);

1372 
ª£t_em
 = 
TRUE
;

1373 
t›
[0].
su•
 = 
FALSE
;

1374 
	`£m_po°
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1375 
	}
}

1377 
DâSP_EXP
 

1378 
	$SëAudioSize
 (
size
)

1380 
thªad
;

1381 
thªad
 = 0;thread < 3;Åhread++)

1383 
t›
[
thªad
].
su•
 = 
TRUE
;

1384 
	`£m_waô
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1386 
thªad
=0;Åhread < 3;Åhread++)

1388 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
);

1389 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
);

1390 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
l
);

1391 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
r
);

1392 
	`rögb_Êﬂt_ª°¨t
 (
t›
[
thªad
].
jack
.
rög
.
o
.
l
,Å›[thªad].
hﬁd
.
size
.
‰ames
);

1393 
	`rögb_Êﬂt_ª°¨t
 (
t›
[
thªad
].
jack
.
rög
.
o
.
r
,Å›[thªad].
hﬁd
.
size
.
‰ames
);

1395 
thªad
 = 0;thread < 3;Åhread++)

1397 
t›
[
thªad
].
su•
 = 
FALSE
;

1398 
	`£m_po°
 (&
t›
[
thªad
].
sync
.
upd
.
£m
);

1400 
	}
}

1409 
DâSP_EXP
 

1410 
	$SëTXAGCCom¥essi⁄
 (
thªad
, 
txcom¥essi⁄
)

1413 
	}
}

1415 
DâSP_EXP
 

1416 
	$Pro˚ss_Com∂exS≥˘rum
 (
thªad
, *
ªsu…s
)

1418 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_FILT
;

1419 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

1421 
	`¢≠_•e˘rum
 (&
uni
[
thªad
].
•ec
, uni[thªad].•ec.
ty≥
);

1423 
	`compuã_com∂ex_•e˘rum
 (&
uni
[
thªad
].
•ec
);

1424 
	`mem˝y
 ((*Ë
ªsu…s
, 
uni
[
thªad
].
•ec
.
couçut
, uni[thªad].•ec.
size
 *  (
COMPLEX
));

1425 
	}
}

1427 
DâSP_EXP
 

1428 
	$Pro˚ss_S≥˘rum
 (
thªad
, *
ªsu…s
)

1430 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_FILT
;

1431 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

1433 
	`¢≠_•e˘rum
 (&
uni
[
thªad
].
•ec
, uni[thªad].•ec.
ty≥
);

1435 
	`compuã_•e˘rum
 (&
uni
[
thªad
].
•ec
);

1436 
	`mem˝y
 ((*Ë
ªsu…s
, 
uni
[
thªad
].
•ec
.
ouçut
, uni[thªad].•ec.
size
 *  ());

1437 
	}
}

1439 
DâSP_EXP
 

1440 
	$Pro˚ss_P™ad≠ãr
 (
thªad
, *
ªsu…s
)

1442 
BOOLEAN
 
ª£t_em
;

1444 i‡(
uni
[
thªad
].
mode
.
åx
 =
TX
)

1445 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_FILT
;

1447 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_PRE_FILT
;

1449 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

1451 i‡(
ª£t_em
)

1453 
	`mem£t
(
ªsu…s
,0,
uni
[
thªad
].
•ec
.
size
 *  ());

1457 
	`¢≠_•e˘rum
 (&
uni
[
thªad
].
•ec
, uni[thªad].•ec.
ty≥
);

1459 
	`compuã_•e˘rum
 (&
uni
[
thªad
].
•ec
);

1460 
	`mem˝y
 ((*Ë
ªsu…s
, 
uni
[
thªad
].
•ec
.
ouçut
, uni[thªad].•ec.
size
 *  ());

1461 
	}
}

1463 
DâSP_EXP
 

1464 
	$Pro˚ss_Pha£
 (
thªad
, *
ªsu…s
, 
numpoöts
)

1466 
i
, 
j
;

1467 
BOOLEAN
 
ª£t_em
;

1468 i‡(
ª£t_em
)

1470 
	`mem£t
(
ªsu…s
,0,
numpoöts
 *  ());

1474 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_AGC
;

1475 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

1476 
uni
[
thªad
].
•ec
.
rxk
 = 0;

1477 
	`¢≠_sc›e
 (&
uni
[
thªad
].
•ec
, uni[thªad].•ec.
ty≥
);

1479 
i
 = 0, 
j
 = 0; i < 
numpoöts
; i++, j += 2)

1481 
ªsu…s
[
j
] = (Ë
	`CXBªÆ
 (
uni
[
thªad
].
•ec
.
timebuf
, 
i
);

1482 
ªsu…s
[
j
 + 1] = (Ë
	`CXBimag
 (
uni
[
thªad
].
•ec
.
timebuf
, 
i
);

1484 
	}
}

1486 
DâSP_EXP
 

1487 
	$Pro˚ss_Sc›e
 (
thªad
, *
ªsu…s
, 
numpoöts
)

1489 
i
;

1490 
BOOLEAN
 
ª£t_em
;

1491 i‡(
ª£t_em
)

1493 
	`mem£t
(
ªsu…s
,0,
numpoöts
 *  ());

1497 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_AGC
;

1498 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

1499 
uni
[
thªad
].
•ec
.
rxk
 = 0;

1501 
	`¢≠_sc›e
 (&
uni
[
thªad
].
•ec
, uni[thªad].•ec.
ty≥
);

1503 
i
 = 0; i < 
numpoöts
; i++)

1505 
ªsu…s
[
i
] = (Ë
	`CXBªÆ
 (
uni
[
thªad
].
•ec
.
timebuf
, i);

1507 
	}
}

1509 
DâSP_EXP
 

1510 
	$SëRögBuf„rOff£t
(
thªad
, 
off£t
)

1512 
BOOLEAN
 
ª£t_em
;

1513 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1514 
t›
[
thªad
].
off£t
 = offset;

1516 
ª£t_em
 = 
TRUE
;

1517 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1518 
	}
}

1520 
DâSP_EXP
 

1521 
	$CÆcuœãRXMëî
 (
thªad
, 
subrx
, 
METERTYPE
 
mt
)

1523 
ªtu∫vÆ
 = 0;

1525 
uni
[
thªad
].
mëî
.
rx
.
mode
[
subrx
] = 
mt
;

1526 
mt
)

1528 
SIGNAL_STRENGTH
:

1529 
ªtu∫vÆ
 = 
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
subrx
][
RX_SIGNAL_STRENGTH
];

1531 
AVG_SIGNAL_STRENGTH
:

1532 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
subrx
][
RX_AVG_SIGNAL_STRENGTH
];

1534 
ADC_REAL
:

1535 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
subrx
][
RX_ADC_IMAG
];

1537 
ADC_IMAG
:

1538 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
subrx
][
RX_ADC_REAL
];

1540 
AGC_GAIN
:

1541 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
rx
.
vÆ
[
subrx
][
RX_AGC_GAIN
];

1544 
ªtu∫vÆ
 = -200;

1549  
ªtu∫vÆ
;

1550 
	}
}

1552 
DâSP_EXP
 

1553 
	$CÆcuœãTXMëî
 (
thªad
, 
METERTYPE
 
mt
)

1555 
ªtu∫vÆ
 = 0;

1557 
uni
[
thªad
].
mëî
.
tx
.
mode
 = 
mt
;

1558 
mt
)

1560 
MIC
:

1561 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_MIC
];

1563 
PWR
:

1564 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_PWR
];

1566 
ALC
:

1567 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_ALC
];

1569 
EQèp
:

1570 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_EQ
];

1572 
LEVELER
:

1573 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_LVL
];

1575 
COMP
:

1576 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_COMP
];

1578 
CPDR
:

1579 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_CPDR
];

1581 
ALC_G
:

1582 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_ALC_G
];

1584 
LVL_G
:

1585 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_LVL_G
];

1587 
MIC_PK
:

1588 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_MIC_PK
];

1590 
ALC_PK
:

1591 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_ALC_PK
];

1593 
EQ_PK
:

1594 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_EQ_PK
];

1596 
LEVELER_PK
:

1597 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_LVL_PK
];

1599 
COMP_PK
:

1600 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_COMP_PK
];

1602 
CPDR_PK
:

1603 
ªtu∫vÆ
 = (Ë
uni
[
thªad
].
mëî
.
tx
.
vÆ
[
TX_CPDR_PK
];

1606 
ªtu∫vÆ
 = -200;

1609  
ªtu∫vÆ
;

1610 
	}
}

1612 
DâSP_EXP
 *

1613 
	$NewReßm∂î
 (
ßm∂î©e_ö
, 
ßm∂î©e_out
)

1615 
ResSt
 
tmp
;

1616 
lcm
 = 28224000, 
öãΩFa˘‹
, 
deciFa˘‹
;

1617 
öãΩFa˘‹
 = 
lcm
 / 
ßm∂î©e_ö
;

1618 
deciFa˘‹
 = 
lcm
 / 
ßm∂î©e_out
;

1619 
tmp
 = 
	`√wPﬁyPha£FIR
 (32768, 0, 
öãΩFa˘‹
, 0, 
deciFa˘‹
);

1620  (*Ë
tmp
;

1621 
	}
}

1623 
DâSP_EXP
 

1624 
	$DoReßm∂î
 (
COMPLEX
 * 
öput
, COMPLEX * 
ouçut
, 
numßmps
, *
outßmps
,

1625 
ResSt
 
±r
)

1627 
±r
->
öput
 = input;

1628 
±r
->
ouçut
 = output;

1629 
±r
->
öputAºayLígth
 = 
numßmps
;

1630 
	`PﬁyPha£FIR
 (
±r
);

1631 *
outßmps
 = 
±r
->
numOuçutSam∂es
;

1632 
	}
}

1634 
DâSP_EXP
 

1635 
	$DñPﬁyPha£FIR
 (
ResSt
 
ªs°
)

1637 
	`dñPﬁyPha£FIR
 (
ResSt
 
ªs°
);

1638 
	`dñPﬁyPha£FIR
 (
ªs°
);

1639 
	}
}

1641 
DâSP_EXP
 *

1642 
	$NewReßm∂îF
 (
ßm∂î©e_ö
, 
ßm∂î©e_out
)

1644 
ResStF
 
tmp
;

1645 
lcm
 = 28224000, 
öãΩFa˘‹
, 
deciFa˘‹
;

1646 
öãΩFa˘‹
 = 
lcm
 / 
ßm∂î©e_ö
;

1647 
deciFa˘‹
 = 
lcm
 / 
ßm∂î©e_out
;

1648 
tmp
 = 
	`√wPﬁyPha£FIRF
 (4096, 0, 
öãΩFa˘‹
, 0, 
deciFa˘‹
);

1649  (*Ë
tmp
;

1650 
	}
}

1652 
DâSP_EXP
 

1653 
	$DoReßm∂îF
 (*
öput
, *
ouçut
, 
numßmps
, *
outßmps
,

1654 
ResStF
 
±r
)

1656 
±r
->
öput
 = input;

1657 
±r
->
ouçut
 = output;

1658 
±r
->
öputAºayLígth
 = 
numßmps
;

1659 
	`PﬁyPha£FIRF
 (
±r
);

1660 *
outßmps
 = 
±r
->
numOuçutSam∂es
;

1661 
	}
}

1663 
DâSP_EXP
 

1664 
	$DñPﬁyPha£FIRF
 (
ResSt
 
ªs°
)

1666 
	`dñPﬁyPha£FIRF
 (
ResSt
 
ªs°
);

1667 
	`dñPﬁyPha£FIRF
 (
ªs°
);

1668 
	}
}

1670 
DâSP_EXP
 

1671 
	$SëSubRXSt
(
thªad
, 
subrx
, 
BOOLEAN
 
£tô
)

1673 
πn
 = 0;

1674 
£tô
)

1676 
TRUE
:

1677 i‡(
subrx
 >()
uni
[
thªad
].
mu…úx
.
ƒx
)

1679 
πn
 = -1;

1683 i‡(
uni
[
thªad
].
mu…úx
.
a˘
[
subrx
])

1685 
πn
 = -1;

1689 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1690 
uni
[
thªad
].
mu…úx
.
a˘
[
subrx
] = 
TRUE
;

1691 
uni
[
thªad
].
mu…úx
.
«c
++;

1692 
rx
[
thªad
][
subrx
].
tick
 = 0;

1693 
πn
 = 0;

1694 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1698 
FALSE
:

1699 i‡–
subrx
 >()
uni
[
thªad
].
mu…úx
.
ƒx
)

1701 
πn
 = -1;

1705 i‡(!
uni
[
thªad
].
mu…úx
.
a˘
[
subrx
])

1706 
πn
 = -1;

1709 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1710 
uni
[
thªad
].
mu…úx
.
a˘
[
subrx
] = 
FALSE
;

1711 --
uni
[
thªad
].
mu…úx
.
«c
;

1712 
πn
 = 0;

1713 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1718  
πn
;

1719 
	}
}

1721 
DâSP_EXP
 

1722 
	$SëRXP™
(
thªad
, 
subrx
, 
pos
)

1724 
πn
 = 0;

1725 
thëa
;

1726 
	`£m_waô
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1727 i‡((
pos
 < 0.0f) || (pos > 1.0f))

1728 
πn
 = -1;

1729 
thëa
 = (
REAL
Ë((1.0 - 
pos
Ë* 
M_PI
 / 2.0);

1730 
rx
[
thªad
][
subrx
].
azim
 = 
	`Cm∂x
 ((
REAL
Ë
	`cos
 (
thëa
), (REALË
	`sö
 (theta));

1732 
	`£m_po°
(&
t›
[
thªad
].
sync
.
upd
.
£m
);

1733  
πn
;

1734 
	}
}

1736 
DâSP_EXP
 

1737 
	$SëDivîsôy
 (
£tô
)

1739 
BOOLEAN
 
ª£t_em
;

1741 
	`£m_waô
(&
t›
[0].
sync
.
upd
.
£m
);

1742 
	`£m_waô
(&
t›
[1].
sync
.
upd
.
£m
);

1743 
	`£m_waô
(&
t›
[2].
sync
.
upd
.
£m
);

1745 
divîsôy
.
Êag
 = 
£tô
;

1746 
	`£m_po°
(&
t›
[0].
sync
.
upd
.
£m
);

1747 
	`£m_po°
(&
t›
[1].
sync
.
upd
.
£m
);

1748 
	`£m_po°
(&
t›
[2].
sync
.
upd
.
£m
);

1749 
	}
}

1751 
DâSP_EXP
 

1752 
	$SëDivîsôySˇœr
(
REAL
 
ª
, REAL 
im
)

1755 
	`£m_waô
(&
t›
[2].
sync
.
upd
.
£m
);

1756 
divîsôy
.
sˇœr
 = 
	`Cm∂x
(
ª
,
im
);

1757 
	`£m_po°
(&
t›
[2].
sync
.
upd
.
£m
);

1758 
	}
}

1760 
DâSP_EXP
 

1761 
	$SëDivîsôyGaö
(
REAL
 
gaö
)

1764 
	`£m_waô
(&
t›
[2].
sync
.
upd
.
£m
);

1765 
divîsôy
.
gaö
 = gain;

1766 
	`£m_po°
(&
t›
[2].
sync
.
upd
.
£m
);

1767 
	}
}

	@update.h

36 #i‚de‡
_upd©e_h


37 
	#_upd©e_h


	)

39 
	~<‰omsys.h
>

40 
	~<b™Æ.h
>

41 
	~<d©©y≥s.h
>

43 
do_upd©e
 (
thªad
, *
°r
, 
FILE
 * 
log
);

	@window.c

34 
	~<wödow.h
>

53 
REAL
 *

54 
	$makewödow
 (
Wödowty≥
 
ty≥
, 
size
, 
REAL
 * 
wödow
)

56 
i
, 
j
, 
midn
, 
midp1
, 
midm1
;

57 
REAL
 
‰eq
, 
øã
, 
§1
, 
™gÀ
, 
ex≤
, 
expsum
, 
cx
, 
two_pi
;

59 
midn
 = 
size
 >> 1;

60 
midp1
 = (
size
 + 1) / 2;

61 
midm1
 = (
size
 - 1) / 2;

62 
two_pi
 = (
REAL
Ë(8.0 * 
	`©™
 (1.0));

63 
‰eq
 = 
two_pi
 / (
REAL
Ë
size
;

64 
øã
 = (
REAL
Ë(1.0 / (REALË
midn
);

65 
™gÀ
 = 0.0;

66 
ex≤
 = (
REAL
Ë(
	`log
 (2.0Ë/ (REALË
midn
 + 1.0);

67 
expsum
 = 1.0;

69 
ty≥
)

71 
RECTANGULAR_WINDOW
:

72 
i
 = 0; i < 
size
; i++)

73 
wödow
[
i
] = 1.0;

75 
HANNING_WINDOW
:

76 
i
 = 0, 
j
 = 
size
 - 1, 
™gÀ
 = 0.0; i <
midn
;

77 
i
++, 
j
--, 
™gÀ
 +
‰eq
)

78 
wödow
[
j
] = (wödow[
i
] = (
REAL
Ë(0.5 - 0.5 * 
	`cos
 (
™gÀ
)));

80 
WELCH_WINDOW
:

81 
i
 = 0, 
j
 = 
size
 - 1; i <
midn
; i++, j--)

82 
wödow
[
j
] =

83 (
wödow
[
i
] =

84 (
REAL
Ë(1.0 - 
	`sqr
 ((REALË(
i
 - 
midm1
Ë/ (REALË
midp1
)));

86 
PARZEN_WINDOW
:

87 
i
 = 0, 
j
 = 
size
 - 1; i <
midn
; i++, j--)

88 
wödow
[
j
] =

89 (
wödow
[
i
] =

90 (
REAL
Ë(1.0 - 
	`Ábs
 ((REALË(
i
 - 
midm1
Ë/ (REALË
midp1
)));

92 
BARTLETT_WINDOW
:

93 
i
 = 0, 
j
 = 
size
 - 1, 
™gÀ
 = 0.0; i <
midn
;

94 
i
++, 
j
--, 
™gÀ
 +
øã
)

95 
wödow
[
j
] = (wödow[
i
] = 
™gÀ
);

97 
HAMMING_WINDOW
:

98 
i
 = 0, 
j
 = 
size
 - 1, 
™gÀ
 = 0.0; i <
midn
;

99 
i
++, 
j
--, 
™gÀ
 +
‰eq
)

100 
wödow
[
j
] = (wödow[
i
] = (
REAL
Ë(0.54 - 0.46 * 
	`cos
 (
™gÀ
)));

102 
BLACKMAN2_WINDOW
:

103 
i
 = 0, 
j
 = 
size
 - 1, 
™gÀ
 = 0.0; i <
midn
;

104 
i
++, 
j
--, 
™gÀ
 +
‰eq
)

106 
cx
 = (
REAL
Ë
	`cos
 (
™gÀ
);

107 
wödow
[
j
] = (wödow[
i
] =

108 (
REAL
Ë(.34401 + (
cx
 * (-.49755 + (cx * .15844)))));

111 
BLACKMAN3_WINDOW
:

112 
i
 = 0, 
j
 = 
size
 - 1, 
™gÀ
 = 0.0; i <
midn
;

113 
i
++, 
j
--, 
™gÀ
 +
‰eq
)

115 
cx
 = (
REAL
Ë
	`cos
 (
™gÀ
);

116 
wödow
[
j
] =

117 (
wödow
[
i
] =

118 (
REAL
) (.21747 +

119 (
cx
 * (-.45325 + (cx * (.28256 - (cx * .04672)))))));

122 
BLACKMAN4_WINDOW
:

123 
i
 = 0, 
j
 = 
size
 - 1, 
™gÀ
 = 0.0; i <
midn
;

124 
i
++, 
j
--, 
™gÀ
 +
‰eq
)

126 
cx
 = (
REAL
Ë
	`cos
 (
™gÀ
);

127 
wödow
[
j
] = (wödow[
i
] = (
REAL
)

129 (
cx
 *

131 (
cx
 *

132 (.375696 + (
cx
 * (-.20762 + (cx * .041194)))))))));

135 
EXPONENTIAL_WINDOW
:

136 
i
 = 0, 
j
 = 
size
 - 1; i <
midn
; i++, j--)

138 
wödow
[
j
] = (wödow[
i
] = (
REAL
Ë(
expsum
 - 1.0));

139 
expsum
 *
ex≤
;

142 
RIEMANN_WINDOW
:

143 
§1
 = 
two_pi
 / (
REAL
Ë
size
;

144 
i
 = 0, 
j
 = 
size
 - 1; i <
midn
; i++, j--)

146 i‡(
i
 =
midn
)

147 
wödow
[
j
] = (wödow[
i
] = 1.0);

151 
cx
 = 
§1
 * (
midn
 - 
i
);

152 
wödow
[
i
] = (
REAL
Ë(
	`sö
 (
cx
) / cx);

153 
wödow
[
j
] = wödow[
i
];

157 
BLACKMANHARRIS_WINDOW
:

159 
REAL
 
a0
 = 0.35875f, 
a1
 = 0.48829f, 
a2
 = 0.14128f, 
a3
 = 0.01168f;

162 
i
 = 0; i < 
size
; i++)

164 
wödow
[
i
] =

165 (
REAL
Ë(
a0
 -

166 
a1
 * 
	`cos
 (
two_pi
 * (
REAL
Ë(
i
) /

167 (
REAL
Ë(
size
 - 1)) +

168 
a2
 * 
	`cos
 (2.0 * 
two_pi
 * (
REAL
Ë(
i
) /

169 (
REAL
Ë(
size
 - 1)) -

170 
a3
 * 
	`cos
 (3.0 * 
two_pi
 * (
REAL
Ë(
i
) /

171 (
REAL
Ë(
size
 - 1)));

175 
NUTTALL_WINDOW
:

177 
REAL
 
a0
 = 0.3635819f, 
a1
 = 0.4891775f, 
a2
 = 0.1365995f, 
a3
 =

181 
i
 = 0; i < 
size
; i++)

183 
wödow
[
i
] =

184 (
REAL
Ë(
a0
 -

185 
a1
 * 
	`cos
 (
two_pi
 * (
REAL
Ë(
i
) /

186 (
REAL
Ë(
size
 - 1)) +

187 
a2
 * 
	`cos
 (2.0 * 
two_pi
 * (
REAL
Ë(
i
) /

188 (
REAL
Ë(
size
 - 1)) -

189 
a3
 * 
	`cos
 (3.0 * 
two_pi
 * (
REAL
Ë(
i
) /

190 (
REAL
Ë(
size
 - 1)));

199  
wödow
;

200 
	}
}

	@window.h

35 #i‚de‡
_wödow_h


36 
	#_wödow_h


	)

38 
	~<°dlib.h
>

39 
	~<°dio.h
>

40 
	~<d©©y≥s.h
>

41 
	~<˘y≥.h
>

42 
	~<°rög.h
>

43 
	~<m©h.h
>

57 
	e_wödowty≥


59 
	mRECTANGULAR_WINDOW
,

60 
	mHANNING_WINDOW
,

61 
	mWELCH_WINDOW
,

62 
	mPARZEN_WINDOW
,

63 
	mBARTLETT_WINDOW
,

64 
	mHAMMING_WINDOW
,

65 
	mBLACKMAN2_WINDOW
,

66 
	mBLACKMAN3_WINDOW
,

67 
	mBLACKMAN4_WINDOW
,

68 
	mEXPONENTIAL_WINDOW
,

69 
	mRIEMANN_WINDOW
,

70 
	mBLACKMANHARRIS_WINDOW
,

71 
	mNUTTALL_WINDOW
,

72 } 
	tWödowty≥
;

74 
REAL
 *
makewödow
 (
Wödowty≥
 
ty≥
, 
size
, REAL * 
wödow
);

76 
REAL
 
sqr
 (REAL 
x
);

	@winmain.c

34 
	~<comm⁄.h
>

38 
_loc
 
	gloc
[3];

39 
thªadno
;

44 
ª£t_mëîs
 ();

45 
ª£t_•e˘rum
 ();

46 
ª£t_cou¡îs
 ();

47 
¥o˚ss_ßm∂es
 (*, *, *, *, , );

48 
£tup_w‹k•a˚
 (
REAL
 
øã
,

49 
buÊí
,

50 
SDRMODE
 
mode
,

51 *
wisdom
,

52 
•ecsize
, 
numªcv
, 
˝dsize
, 
thªad
);

53 
de°roy_w‹k•a˚
 (
thªad
);

62 
BOOLEAN
 
	gª£t_em
;

63 *
	gAPP_DATA_PATH
;

65 
PRIVATE
 
BOOLEAN


66 
	$gëhﬁd
 (
¥oc_thªad
)

68 i‡(
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
i
.
l
Ë>t›[¥oc_thªad].
hﬁd
.
size
.
‰ames
)

70 
	`rögb_Êﬂt_ªad
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
i
.
l
,

71 
t›
[
¥oc_thªad
].
hﬁd
.
buf
.
l
,Å›[¥oc_thªad].hﬁd.
size
.
‰ames
);

72 
	`rögb_Êﬂt_ªad
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
i
.
r
,

73 
t›
[
¥oc_thªad
].
hﬁd
.
buf
.
r
,Å›[¥oc_thªad].hﬁd.
size
.
‰ames
);

74 #ifde‡
USE_AUXILIARY


75 
	`rögb_Êﬂt_ªad
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
i
.
l
,

76 
t›
[
¥oc_thªad
].
hﬁd
.
aux
.
l
,Å›[¥oc_thªad].hﬁd.
size
.
‰ames
);

77 
	`rögb_Êﬂt_ªad
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
r
,

78 
t›
[
¥oc_thªad
].
hﬁd
.
aux
.
r
,Å›[¥oc_thªad].hﬁd.
size
.
‰ames
);

80 
	`rögb_Êﬂt_ªad
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
i
.
l
,

81 
t›
[
¥oc_thªad
].
hﬁd
.
buf
.
l
,Å›[¥oc_thªad].hﬁd.
size
.
‰ames
);

82 
	`rögb_Êﬂt_ªad
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
i
.
r
,

83 
t›
[
¥oc_thªad
].
hﬁd
.
buf
.
r
,Å›[¥oc_thªad].hﬁd.
size
.
‰ames
);

85  
TRUE
;

86 }  
FALSE
;

88 
	}
}

89 
PRIVATE
 

90 
	$puthﬁd
(
¥oc_thªad
)

92 i‡(
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
o
.
l
Ë>t›[¥oc_thªad].
hﬁd
.
size
.
‰ames
)

94 
	`rögb_Êﬂt_wrôe
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
o
.
l
,Å›[¥oc_thªad].
hﬁd
.
buf
.l,

95 
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

96 
	`rögb_Êﬂt_wrôe
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
o
.
r
,Å›[¥oc_thªad].
hﬁd
.
buf
.r,

97 
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

98 #ifde‡
USE_AUXILIARY


99 
	`rögb_Êﬂt_wrôe
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
o
.
l
,Å›[¥oc_thªad].
hﬁd
.
aux
.l,

100 
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

101 
	`rögb_Êﬂt_wrôe
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
o
.
r
,Å›[¥oc_thªad].
hﬁd
.
aux
.r,

102 
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

104 
	`rögb_Êﬂt_wrôe
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
o
.
l
,Å›[¥oc_thªad].
hﬁd
.
buf
.l,

105 
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

106 
	`rögb_Êﬂt_wrôe
 (
t›
[
¥oc_thªad
].
jack
.
auxr
.
o
.
r
,Å›[¥oc_thªad].
hﬁd
.
buf
.r,

107 
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

112 
PRIVATE
 
BOOLEAN


113 
	`ˇnhﬁd
 (
¥oc_thªad
)

116  (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
¥oc_thªad
].
jack
.
rög
.
i
.
l
) >=

117 (
size_t
Ë
t›
[
¥oc_thªad
].
hﬁd
.
size
.
‰ames
);

123 
PRIVATE
 

124 
	`run_muã
 (
thªad
)

126 
	`mem£t
 ((*Ë
t›
[
thªad
].
hﬁd
.
buf
.
l
, 0,Å›[thªad].hﬁd.
size
.
byãs
);

127 
	`mem£t
 ((*Ë
t›
[
thªad
].
hﬁd
.
buf
.
r
, 0,Å›[thªad].hﬁd.
size
.
byãs
);

128 
	`mem£t
 ((*Ë
t›
[
thªad
].
hﬁd
.
aux
.
l
, 0,Å›[thªad].hﬁd.
size
.
byãs
);

129 
	`mem£t
 ((*Ë
t›
[
thªad
].
hﬁd
.
aux
.
r
, 0,Å›[thªad].hﬁd.
size
.
byãs
);

130 
uni
[
thªad
].
tick
++;

133 
PRIVATE
 

134 
	`run_∑ss
 (
thªad
)

136 
uni
[
thªad
].
tick
++;

139 
PRIVATE
 

140 
	`run_∂ay
 (
thªad
)

142 
	`¥o˚ss_ßm∂es
 (
t›
[
thªad
].
hﬁd
.
buf
.
l
,Å›[thªad].hﬁd.buf.
r
,

143 
t›
[
thªad
].
hﬁd
.
aux
.
l
,Å›[thªad].hﬁd.aux.
r
,Å›[thªad].hﬁd.
size
.
‰ames
,Åhread);

150 
PRIVATE
 

151 
	`run_swch
(
thªad
)

153 
i
, 
n
 = 
t›
[
thªad
].
hﬁd
.
size
.
‰ames
;

154 
REAL
 
w
;

157 
	`¥o˚ss_ßm∂es
(
t›
[
thªad
].
hﬁd
.
buf
.
l
,Å›[thªad].hﬁd.buf.
r
,

158 
t›
[
thªad
].
hﬁd
.
aux
.
l
,Å›[thªad].hﬁd.aux.
r
,

159 
t›
[
thªad
].
hﬁd
.
size
.
‰ames
,Åhread);

161 
i
 = 0; i < 
n
; i++)

164 i‡(
t›
[
thªad
].
swch
.
ív
.
cuº
.
ty≥
 =
SWCH_FALL
)

166 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 +t›[thªad].swch.ív.
ÁŒ
.
ö¸
;

167 
w
 = (
REAL
)
	`sö
(
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 * 
M_PI
 / 2.0f);

168 
t›
[
thªad
].
hﬁd
.
buf
.
l
[thªad] *
w
,Å›[thªad].hﬁd.buf.
r
[thread] *= w;

169 
t›
[
thªad
].
hﬁd
.
aux
.
l
[thªad] *
w
,Å›[thªad].hﬁd.aux.
r
[thread] *= w;

172 i‡(++
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 >t›[thªad].swch.ív.
ÁŒ
.
size
)

175 
t›
[
thªad
].
swch
.
ív
.
cuº
.
ty≥
 = 
SWCH_STDY
;

176 
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 = 0;

177 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 = 0.0;

181 i‡(
t›
[
thªad
].
swch
.
ív
.
cuº
.
ty≥
 =
SWCH_STDY
)

183 
t›
[
thªad
].
hﬁd
.
buf
.
l
[
i
]t›[thªad].hﬁd.buf.
r
[i] =

184 
t›
[
thªad
].
hﬁd
.
aux
.
l
[
i
] =Å›[thªad].hﬁd.aux.
r
[i] = 0.0;

186 i‡(++
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 >t›[thªad].swch.ív.
°dy
.
size
)

189 
t›
[
thªad
].
swch
.
ív
.
cuº
.
ty≥
 = 
SWCH_RISE
;

190 
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 = 0;

191 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 = 0.0;

195 i‡(
t›
[
thªad
].
swch
.
ív
.
cuº
.
ty≥
 =
SWCH_RISE
)

197 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 +t›[thªad].swch.ív.
ri£
.
ö¸
;

198 
w
 = (
REAL
)
	`sö
(
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 * 
M_PI
 / 2.0f);

199 
t›
[
thªad
].
hﬁd
.
buf
.
l
[
i
] *
w
,Å›[thªad].hﬁd.buf.
r
[i] *= w;

200 
t›
[
thªad
].
hﬁd
.
aux
.
l
[
i
] *
w
,Å›[thªad].hﬁd.aux.
r
[i] *= w;

202 i‡(++
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 >t›[thªad].swch.ív.
ri£
.
size
)

208 
uni
[
thªad
].
mode
.
åx
 = 
t›
[thªad].
swch
.åx.
√xt
;

209 
t›
[
thªad
].
°©e
 =Å›[thªad].
swch
.
run
.
œ°
;

220 
	`ª£t_sy°em_audio
(
size_t
 
n‰ames
)

222 
size_t
 
ª£t_size
;

223 
thªad
;

224 c⁄° 
zîo
 = 0.;

225 
i
;

227 
ª£t_em
 = 
FALSE
;

228 
thªad
 = 0;Åhªad < 
thªadno
;Åhread++)

230 
ª£t_size
 = 
	`max
 (
t›
[
thªad
].
jack
.ª£t_size, 
n‰ames
);

231 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
);

232 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
);

233 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
l
);

234 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
r
);

235 
	`rögb_Êﬂt_˛ór
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
,Å›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.ring-1);

236 
	`rögb_Êﬂt_˛ór
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
,Å›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.ring-1);

237 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
);

238 
	`rögb_Êﬂt_ª£t
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
);

242 i‡(
t›
[
thªad
].
off£t
 < 0)

244 
i
=
t›
[
thªad
].
off£t
;i<0;i++)

246 
	`rögb_Êﬂt_wrôe
(
t›
[
thªad
].
jack
.
rög
.
i
.
l
,&
zîo
,1);

247 
	`rögb_Êﬂt_wrôe
(
t›
[
thªad
].
jack
.
auxr
.
i
.
l
,&
zîo
,1);

253 
i
=0;i<
t›
[
thªad
].
off£t
;i++)

255 
	`rögb_Êﬂt_wrôe
(
t›
[
thªad
].
jack
.
rög
.
i
.
r
,&
zîo
,1);

256 
	`rögb_Êﬂt_wrôe
(
t›
[
thªad
].
jack
.
auxr
.
i
.
r
,&
zîo
,1);

261 
	`rögb_Êﬂt_ª°¨t
 (
t›
[
thªad
].
jack
.
rög
.
o
.
r
, 
ª£t_size
);

262 
	`rögb_Êﬂt_ª°¨t
 (
t›
[
thªad
].
jack
.
rög
.
o
.
l
, 
ª£t_size
);

263 
	`rögb_Êﬂt_ª°¨t
 (
t›
[
thªad
].
jack
.
auxr
.
o
.
r
, 
ª£t_size
);

264 
	`rögb_Êﬂt_ª°¨t
 (
t›
[
thªad
].
jack
.
auxr
.
o
.
l
, 
ª£t_size
);

270 
DâSP_EXP
 

271 
	`Audio_CÆlback
 (*
öput_l
, *
öput_r
, *
ouçut_l
,

272 *
ouçut_r
, 
n‰ames
, 
thªad
)

274 
BOOLEAN
 
b
 = 
ª£t_em
;

275 
i
;

276 
ªåy
;

277 vﬁ©ûê
size_t
 
ls
;

278 vﬁ©ûê
size_t
 
rs
;

280 
i
=
thªad
;

281 i‡(
t›
[
i
].
su•
)

283 
	`mem£t
 (
ouçut_l
, 0, 
n‰ames
 *  ());

284 
	`mem£t
 (
ouçut_r
, 0, 
n‰ames
 *  ());

288 i‡(
b
)

291 
	`ª£t_sy°em_audio
(
n‰ames
);

292 
	`mem£t
 (
ouçut_l
, 0, 
n‰ames
 *  ());

293 
	`mem£t
 (
ouçut_r
, 0, 
n‰ames
 *  ());

299 
ªåy
 = 0;

301 
åyagaö
:

303 
ls
 = 
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
i
].
jack
.
rög
.
o
.
l
);

304 
rs
 = 
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
i
].
jack
.
rög
.
o
.
r
);

306 i‡((
ls
 >
n‰ames
Ë&& (
rs
 >=Çframes))

308 i‡(
t›
[
i
].
°©e
 =
RUN_PLAY
)

312 
	`rögb_Êﬂt_ªad
 (
t›
[
i
].
jack
.
rög
.
o
.
l
, 
ouçut_l
, 
n‰ames
);

313 
	`rögb_Êﬂt_ªad
 (
t›
[
i
].
jack
.
rög
.
o
.
r
, 
ouçut_r
, 
n‰ames
);

319 
	`rögb_Êﬂt_ªad_adv™˚
 (
t›
[
i
].
jack
.
rög
.
o
.
l
, 
n‰ames
);

320 
	`rögb_Êﬂt_ªad_adv™˚
 (
t›
[
i
].
jack
.
rög
.
o
.
r
, 
n‰ames
);

326 i‡(!
ªåy
++)

327 
åyagaö
;

329 
	`Ârötf
(
°dout
,"Audio_Callback:Ñb outÖathologyÇframes %dÑeadÜspace %dÑspace %dÑetry %d\n",

330 
n‰ames
, ()
rs
, ()
ls
, 
ªåy
), 
	`fÊush
(
°dout
);

337 i‡((
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[
i
].
jack
.
rög
.i.
l
Ë>
n‰ames
)

338 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[
i
].
jack
.
rög
.i.
r
Ë>
n‰ames
))

340 
	`rögb_Êﬂt_wrôe
 (
t›
[
i
].
jack
.
rög
.i.
l
, (*Ë
öput_l
, 
n‰ames
);

341 
	`rögb_Êﬂt_wrôe
 (
t›
[
i
].
jack
.
rög
.i.
r
, (*Ë
öput_r
, 
n‰ames
);

347 
	`Ârötf
(
°dout
,"Audio_Callback-3:Ñb inÖathologyÇframes %d writeÜspace %dÑspace %d\n",

348 
n‰ames
,

349 
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[
i
].
jack
.
rög
.i.
l
),

350 
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[
i
].
jack
.
rög
.i.
r
)), 
	`fÊush
(
°dout
);

357 i‡(
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
i
].
jack
.
rög
.i.
l
Ë>t›[i].
hﬁd
.
size
.
‰ames
)

358 
	`£m_po°
 (&
t›
[
i
].
sync
.
buf
.
£m
);

362 
DâSP_EXP
 

363 
	`Audio_CÆlback2
 (**
öput
, **
ouçut
, 
n‰ames
)

365 
thªad
;

366 
BOOLEAN
 
b
 = 
ª£t_em
;

367 
BOOLEAN
 
ªtu∫_em±y
=
FALSE
;

368 
i
;

369 
thªad
=0;thªad<
thªadno
;thread++)

371 i‡(
t›
[
thªad
].
su•
Ë
ªtu∫_em±y
 = 
TRUE
;

374 i‡(
ªtu∫_em±y
)

376 
thªad
=0;thªad<
thªadno
;thread++)

378 
	`mem£t
 (
ouçut
[2*
thªad
], 0, 
n‰ames
 *  ());

379 
	`mem£t
 (
ouçut
[2*
thªad
+1], 0, 
n‰ames
 *  ());

384 i‡(
b
)

388 
	`ª£t_sy°em_audio
(
n‰ames
);

389 
thªad
=0;thªad<
thªadno
;thread++) {

390 
	`mem£t
 (
ouçut
[2*
thªad
], 0, 
n‰ames
 *  ());

391 
	`mem£t
 (
ouçut
[2*
thªad
+1], 0, 
n‰ames
 *  ());

396 i‡(
divîsôy
.
Êag
) {

398 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[1].
jack
.
rög
.
o
.
l
Ë>
n‰ames
)

399 && (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[1].
jack
.
rög
.
o
.
r
Ë>
n‰ames
))

401 
	`rögb_Êﬂt_ªad
 (
t›
[1].
jack
.
rög
.
o
.
l
, 
ouçut
[2], 
n‰ames
);

402 
	`rögb_Êﬂt_ªad
 (
t›
[1].
jack
.
rög
.
o
.
r
, 
ouçut
[3], 
n‰ames
);

408 
thªad
=0;thªad<
thªadno
;thread++)

410 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

411 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

417 i‡((
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[1].
jack
.
rög
.
i
.
l
Ë>
n‰ames
)

418 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[1].
jack
.
rög
.
i
.
r
Ë>
n‰ames
))

420 
	`rögb_Êﬂt_wrôe
 (
t›
[1].
jack
.
rög
.
i
.
l
, 
öput
[2], 
n‰ames
);

421 
	`rögb_Êﬂt_wrôe
 (
t›
[1].
jack
.
rög
.
i
.
r
, 
öput
[3], 
n‰ames
);

426 
thªad
=0;thªad<
thªadno
;thread++)

428 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

429 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

435 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[1].
jack
.
rög
.
i
.
l
Ë>t›[1].
hﬁd
.
size
.
‰ames
) &&

436 (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[1].
jack
.
rög
.
i
.
r
Ë>t›[1].
hﬁd
.
size
.
‰ames
))

437 
	`£m_po°
 (&
t›
[1].
sync
.
buf
.
£m
);

442 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[0].
jack
.
rög
.
o
.
l
Ë>
n‰ames
)

443 && (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[0].
jack
.
rög
.
o
.
r
Ë>
n‰ames
))

447 
	`rögb_Êﬂt_ªad
 (
t›
[0].
jack
.
rög
.
o
.
l
, 
ouçut
[2], 
n‰ames
);

448 
	`rögb_Êﬂt_ªad
 (
t›
[0].
jack
.
rög
.
o
.
r
, 
ouçut
[3], 
n‰ames
);

454 
thªad
=0;thªad<
thªadno
;thread++)

456 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

457 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

465 i‡((
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[0].
jack
.
rög
.
i
.
l
Ë>
n‰ames
)

466 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[0].
jack
.
rög
.
i
.
r
Ë>
n‰ames
) &&

467 (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
l
Ë>
n‰ames
)

468 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
r
Ë>
n‰ames
))

470 
REAL
 *
l0
 = 
öput
[0];

471 
REAL
 *
r0
 = 
öput
[1];

472 
REAL
 *
l2
 = 
öput
[4];

473 
REAL
 *
r2
 = 
öput
[5];

474 
i
=0;i<
n‰ames
;i++) {

475 
COMPLEX
 
A
 = 
	`Cm∂x
(
l0
[
i
],
r0
[i]);

476 
COMPLEX
 
B
 = 
	`Cm∂x
(
l2
[
i
],
r2
[i]);

477 
A
 = 
	`Cs˛
(
	`Cadd
(A,
	`Cmul
(
B
,
divîsôy
.
sˇœr
)),divîsôy.
gaö
);

478 
	`rögb_Êﬂt_wrôe
 (
t›
[0].
jack
.
rög
.
i
.
l
, &
A
.
ª
, 1);

479 
	`rögb_Êﬂt_wrôe
 (
t›
[0].
jack
.
rög
.
i
.
r
, &
A
.
im
, 1);

488 
thªad
=0;thªad<
thªadno
;thread++)

490 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

491 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

497 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[0].
jack
.
rög
.
i
.
l
Ë>t›[0].
hﬁd
.
size
.
‰ames
) &&

498 (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[0].
jack
.
rög
.
i
.
r
Ë>t›[0].
hﬁd
.
size
.
‰ames
))

499 
	`£m_po°
 (&
t›
[0].
sync
.
buf
.
£m
);

506 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[2].
jack
.
rög
.
o
.
l
Ë>
n‰ames
)

507 && (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[2].
jack
.
rög
.
o
.
r
Ë>
n‰ames
))

511 
	`rögb_Êﬂt_ªad
 (
t›
[2].
jack
.
rög
.
o
.
l
, 
ouçut
[4], 
n‰ames
);

512 
	`rögb_Êﬂt_ªad
 (
t›
[2].
jack
.
rög
.
o
.
r
, 
ouçut
[5], 
n‰ames
);

518 
thªad
=0;thªad<
thªadno
;thread++)

520 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

521 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

527 i‡((
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
l
Ë>
n‰ames
)

528 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
r
Ë>
n‰ames
))

530 
	`rögb_Êﬂt_wrôe
 (
t›
[2].
jack
.
rög
.
i
.
l
, 
öput
[4], 
n‰ames
);

531 
	`rögb_Êﬂt_wrôe
 (
t›
[2].
jack
.
rög
.
i
.
r
, 
öput
[5], 
n‰ames
);

536 
thªad
=0;thªad<
thªadno
;thread++)

538 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

539 
	`mem£t
 (
ouçut
[
thªad
], 0, 
n‰ames
 *  ());

545 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
l
Ë>t›[2].
hﬁd
.
size
.
‰ames
) &&

546 (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
r
Ë>t›[2].
hﬁd
.
size
.
‰ames
))

547 
	`£m_po°
 (&
t›
[2].
sync
.
buf
.
£m
);

551 
thªad
=0;Åhªad<
thªadno
;Åhread++)

553 
l
=2*
thªad
, 
r
 = 2*thread+1;

554 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
thªad
].
jack
.
rög
.
o
.
l
Ë>
n‰ames
)

555 && (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
thªad
].
jack
.
rög
.
o
.
r
Ë>
n‰ames
))

559 
	`rögb_Êﬂt_ªad
 (
t›
[
thªad
].
jack
.
rög
.
o
.
l
, 
ouçut
[l], 
n‰ames
);

560 
	`rögb_Êﬂt_ªad
 (
t›
[
thªad
].
jack
.
rög
.
o
.
r
, 
ouçut
[r], 
n‰ames
);

566 
thªad
=0;thªad<
thªadno
;thread++)

568 
	`mem£t
 (
ouçut
[2*
thªad
 ], 0, 
n‰ames
 *  ());

569 
	`mem£t
 (
ouçut
[2*
thªad
+1], 0, 
n‰ames
 *  ());

575 i‡((
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
Ë>
n‰ames
)

576 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
Ë>
n‰ames
))

578 i‡(
divîsôy
.
Êag
 && (
thªad
 == 0)) {

579 i‡((
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
l
Ë>
n‰ames
)

580 && (
	`rögb_Êﬂt_wrôe_•a˚
 (
t›
[2].
jack
.
rög
.
i
.
r
Ë>
n‰ames
))

582 
REAL
 *
l0
 = 
öput
[0];

583 
REAL
 *
r0
 = 
öput
[1];

584 
REAL
 *
l2
 = 
öput
[4];

585 
REAL
 *
r2
 = 
öput
[5];

586 
i
=0;i<
n‰ames
;i++) {

587 
COMPLEX
 
A
 = 
	`Cm∂x
(
l0
[
i
],
r0
[i]);

588 
COMPLEX
 
B
 = 
	`Cm∂x
(
l2
[
i
],
r2
[i]);

589 
A
 = 
	`Cs˛
(
	`Cadd
(A,
	`Cmul
(
B
,
divîsôy
.
sˇœr
)),divîsôy.
gaö
);

590 
	`rögb_Êﬂt_wrôe
 (
t›
[0].
jack
.
rög
.
i
.
l
, &
A
.
ª
, 1);

591 
	`rögb_Êﬂt_wrôe
 (
t›
[0].
jack
.
rög
.
i
.
r
, &
A
.
im
, 1);

598 
thªad
=0;thªad<
thªadno
;thread++)

600 
	`mem£t
 (
ouçut
[2*
thªad
 ], 0, 
n‰ames
 *  ());

601 
	`mem£t
 (
ouçut
[2*
thªad
+1], 0, 
n‰ames
 *  ());

606 
	`rögb_Êﬂt_wrôe
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
, 
öput
[l], 
n‰ames
);

607 
	`rögb_Êﬂt_wrôe
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
, 
öput
[r], 
n‰ames
);

616 
thªad
=0;thªad<
thªadno
;thread++)

618 
	`mem£t
 (
ouçut
[2*
thªad
 ], 0, 
n‰ames
 *  ());

619 
	`mem£t
 (
ouçut
[2*
thªad
+1], 0, 
n‰ames
 *  ());

625 i‡((
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
Ë>t›[thªad].
hﬁd
.
size
.
‰ames
) &&

626 (
	`rögb_Êﬂt_ªad_•a˚
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
Ë>t›[thªad].
hﬁd
.
size
.
‰ames
))

627 
	`£m_po°
 (&
t›
[
thªad
].
sync
.
buf
.
£m
);

635 
DâSP_EXP
 

636 
	`¥o˚ss_ßm∂es_thªad
 (
¥oc_thªad
)

638 
t›
[
¥oc_thªad
].
ru¬ög
)

640 
	`£m_waô
 (&
t›
[
¥oc_thªad
].
sync
.
buf
.
£m
);

641 
	`gëhﬁd
(
¥oc_thªad
))

643 
	`£m_waô
 (&
t›
[
¥oc_thªad
].
sync
.
upd
.
£m
);

644 
t›
[
¥oc_thªad
].
°©e
)

646 
RUN_MUTE
:

647 
	`run_muã
 (
¥oc_thªad
);

649 
RUN_PASS
:

650 
	`run_∑ss
 (
¥oc_thªad
);

652 
RUN_PLAY
:

653 
	`run_∂ay
 (
¥oc_thªad
);

655 
RUN_SWCH
:

656 
	`run_swch
 (
¥oc_thªad
);

659 
	`£m_po°
 (&
t›
[
¥oc_thªad
].
sync
.
upd
.
£m
);

660 
	`puthﬁd
 (
¥oc_thªad
);

668 
	`˛o£up
 ()

670 
thªad
;

671 
thªad
 = 0;Åhread<3;thread++)

673 
t›
[
thªad
].
ru¬ög
 = 
FALSE
;

674 
t›
[
thªad
].
su•
 = 
TRUE
;

676 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
l
);

677 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
auxr
.
i
.
r
);

678 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
auxr
.
o
.
l
);

679 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
auxr
.
o
.
r
);

681 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
rög
.
o
.
r
);

682 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
rög
.
o
.
l
);

683 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
rög
.
i
.
r
);

684 
	`rögb_Êﬂt_‰ì
 (
t›
[
thªad
].
jack
.
rög
.
i
.
l
);

686 
	`de°roy_w‹k•a˚
 (
thªad
);

694 
PRIVATE
 

695 
	`£tup_loˇl_audio
 (
thªad
)

697 
t›
[
thªad
].
hﬁd
.
size
.
‰ames
 = 
uni
[thªad].
buÊí
;

698 
t›
[
thªad
].
hﬁd
.
size
.
byãs
 =Å›[thªad].hﬁd.size.
‰ames
 *  ();

699 
t›
[
thªad
].
hﬁd
.
buf
.
l
 =

700 (*Ë
	`ß„Æloc
 (
t›
[
thªad
].
hﬁd
.
size
.
‰ames
,  (),

702 
t›
[
thªad
].
hﬁd
.
buf
.
r
 =

703 (*Ë
	`ß„Æloc
 (
t›
[
thªad
].
hﬁd
.
size
.
‰ames
,  (),

705 
t›
[
thªad
].
hﬁd
.
aux
.
l
 =

706 (*Ë
	`ß„Æloc
 (
t›
[
thªad
].
hﬁd
.
size
.
‰ames
,  (),

708 
t›
[
thªad
].
hﬁd
.
aux
.
r
 =

709 (*Ë
	`ß„Æloc
 (
t›
[
thªad
].
hﬁd
.
size
.
‰ames
,  (),

714 
PRIVATE
 

715 
	`£tup_sy°em_audio
 (
thªad
)

718 
	`•rötf
 (
t›
[
thªad
].
jack
.
«me
, "sdr-%d-%0u",Å›[thªad].
pid
,thread);

719 
t›
[
thªad
].
jack
.
size
 = 1024;

721 
	`mem£t
 ((*Ë&
t›
[
thªad
].
jack
.
blow
, 0,  (top[thread].jack.blow));

722 
t›
[
thªad
].
jack
.
rög
.
i
.
l
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.ring);

723 
t›
[
thªad
].
jack
.
rög
.
i
.
r
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.ring);

724 
t›
[
thªad
].
jack
.
rög
.
o
.
l
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.ring);

725 
t›
[
thªad
].
jack
.
rög
.
o
.
r
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.ring);

726 
t›
[
thªad
].
jack
.
auxr
.
i
.
l
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.
rög
);

727 
t›
[
thªad
].
jack
.
auxr
.
i
.
r
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.
rög
);

728 
t›
[
thªad
].
jack
.
auxr
.
o
.
l
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.
rög
);

729 
t›
[
thªad
].
jack
.
auxr
.
o
.
r
 = 
	`rögb_Êﬂt_¸óã
 (t›[thªad].jack.
size
 * 
loc
[thªad].
mu…
.
rög
);

730 
	`rögb_Êﬂt_˛ór
 (
t›
[
thªad
].
jack
.
rög
.
o
.
l
,Å›[thªad].
hﬁd
.
size
.
‰ames
);

731 
	`rögb_Êﬂt_˛ór
 (
t›
[
thªad
].
jack
.
rög
.
o
.
r
,Å›[thªad].
hﬁd
.
size
.
‰ames
);

734 
PRIVATE
 

735 
	`£tup_thªadög
 (
thªad
)

737 
t›
[
thªad
].
su•
 = 
FALSE
;

738 
	`£m_öô
 (&
t›
[
thªad
].
sync
.
upd
.
£m
, 0, 0);

739 
	`£m_öô
 (&
t›
[
thªad
].
sync
.
buf
.
£m
, 0, 0);

740 
	`±hªad_¸óã
(&
t›
[
thªad
].
pid
, 0, (*Ë
¥o˚ss_ßm∂es_thªad
,Åhread);

746 
PRIVATE
 

747 
	`£tup_deÁu…s
 (
thªad
)

750 
loc
[
thªad
].
«me
[0] = 0;

751 
	`•rötf
 (
loc
[
thªad
].
∑th
.
rcfûe
, "%s%0lu_%0u", 
RCBASE
, 
t›
[thªad].
pid
,thread);

752 
	`•rötf
 (
loc
[
thªad
].
∑th
.
∑rm
, "%s%0lu_%0u", 
PARMPATH
, 
t›
[thªad].
pid
,thread);

753 
	`•rötf
 (
loc
[
thªad
].
∑th
.
mëî
, "%s%0lu_%0u", 
METERPATH
, 
t›
[thªad].
pid
,thread);

754 
	`•rötf
 (
loc
[
thªad
].
∑th
.
•ec
, "%s%0lu_%0u", 
SPECPATH
, 
t›
[thªad].
pid
,thread);

755 
	`•rötf
 (
loc
[
thªad
].
∑th
.
wisdom
, "%s%0lu_%0u", 
WISDOMPATH
, 
t›
[thªad].
pid
,thread);

756 
loc
[
thªad
].
def
.
øã
 = 
DEFRATE
;

757 
loc
[
thªad
].
def
.
size
 = 
DEFSIZE
;

758 
loc
[
thªad
].
def
.
ƒx
 = 
MAXRX
;

759 
loc
[
thªad
].
def
.
mode
 = 
DEFMODE
;

760 
loc
[
thªad
].
def
.
•ec
 = 
DEFSPEC
;

761 
loc
[
thªad
].
mu…
.
rög
 = 
RINGMULT
;

762 
loc
[
thªad
].
def
.
comp
 = 
DEFCOMP
;

767 
	`£tup
 (*
≠p_d©a_∑th
)

769 
thªad
;

771 
divîsôy
.
gaö
 = 1;

772 
divîsôy
.
Êag
 = 
FALSE
;

773 
divîsôy
.
sˇœr
 = 
cxzîo
;

775 
APP_DATA_PATH
=
≠p_d©a_∑th
;

776 
thªad
=0;thread<3;thread++)

778 
t›
[
thªad
].
pid
 = 
	`gëpid
();

779 
t›
[
thªad
].
uid
 = 0L;

780 
t›
[
thªad
].
°¨t_tv
 = 
	`now_tv
 ();

781 
t›
[
thªad
].
ru¬ög
 = 
TRUE
;

782 
t›
[
thªad
].
vîbo£
 = 
FALSE
;

783 i‡(
thªad
 !1Ë
t›
[thªad].
°©e
 = 
RUN_PLAY
;

784 
t›
[
thªad
].
°©e
 = 
RUN_PASS
;

785 
t›
[
thªad
].
off£t
 = 0;

786 
t›
[
thªad
].
jack
.
ª£t_size
 = 1024;

787 
ª£t_em
 =
TRUE
;

788 
	`£tup_deÁu…s
 (
thªad
);

789 
	`°r˝y
(
loc
[
thªad
].
∑th
.
wisdom
,
≠p_d©a_∑th
);

792 
uni
[
thªad
].
mëî
.
Êag
 = 
TRUE
;

793 
uni
[
thªad
].
•ec
.
Êag
 = 
TRUE
;

794 
t›
[
thªad
].
swch
.
ív
.
ÁŒ
.
size
 = ()(
loc
[thªad].
def
.
øã
 * 0.005);

795 
t›
[
thªad
].
swch
.
ív
.
°dy
.
size
 = ()(
loc
[thªad].
def
.
øã
 * 0.050);

796 
t›
[
thªad
].
swch
.
ív
.
ri£
.
size
 = ()(
loc
[thªad].
def
.
øã
 * 0.005);

799 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 = 0.0;

800 
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 = 0;

801 
t›
[
thªad
].
swch
.
ív
.
ri£
.
ö¸
 = 1.0f/(È›[thªad].swch.ív.ri£.
size
;

802 
t›
[
thªad
].
swch
.
ív
.
ÁŒ
.
ö¸
 = 1.0f/(È›[thªad].swch.ív.ÁŒ.
size
;

805 
	`£tup_w‹k•a˚
 (
loc
[
thªad
].
def
.
øã
,

806 
loc
[
thªad
].
def
.
size
,

807 
loc
[
thªad
].
def
.
mode
,

808 
≠p_d©a_∑th
, 
loc
[
thªad
].
def
.
•ec
,Üoc[thªad].def.
ƒx
,Üoc[thªad].def.
comp
,Åhread);

811 
	`£tup_loˇl_audio
 (
thªad
);

813 
	`£tup_sy°em_audio
 (
thªad
);

816 
	`£tup_thªadög
 (
thªad
);

820 
uni
[
thªad
].
•ec
.
Êag
 = 
TRUE
;

821 
uni
[
thªad
].
•ec
.
ty≥
 = 
SPEC_POST_FILT
;

822 
uni
[
thªad
].
•ec
.
sˇÀ
 = 
SPEC_PWR
;

823 
uni
[
thªad
].
•ec
.
rxk
 = 0;

824 
	`ª£t_mëîs
 (
thªad
);

825 
	`ª£t_•e˘rum
 (
thªad
);

826 
	`ª£t_cou¡îs
 (
thªad
);

831 
BOOLEAN
 
ª£t_buÊí
 = 
FALSE
;

833 
	`ª£t_f‹_buÊí
 (
thªad
, 
√w_buÊí
)

836 i‡(
	`p›˙t
 (
√w_buÊí
) != 1)

838 
ª£t_buÊí
 = 
TRUE
;

839 
uni
[
thªad
].
buÊí
 = 
√w_buÊí
;

840 
t›
[
thªad
].
jack
.
ª£t_size
 = 
√w_buÊí
;

841 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
buf
.
r
);

842 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
buf
.
l
);

843 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
aux
.
r
);

844 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
aux
.
l
);

846 
	`de°roy_w‹k•a˚
 (
thªad
);

847 
ª£t_buÊí
 = 
FALSE
;

848 
loc
[
thªad
].
def
.
size
 = 
√w_buÊí
;

849 
	`£tup_w‹k•a˚
 (
loc
[
thªad
].
def
.
øã
,

850 
loc
[
thªad
].
def
.
size
,

851 
loc
[
thªad
].
def
.
mode
,

852 
APP_DATA_PATH
, 
loc
[
thªad
].
def
.
•ec
,Üoc[thªad].def.
ƒx
,Üoc[thªad].def.
size
,Åhread);

854 
	`£tup_loˇl_audio
 (
thªad
);

856 
	`ª£t_mëîs
 (
thªad
);

857 
	`ª£t_•e˘rum
 (
thªad
);

858 
	`ª£t_cou¡îs
 (
thªad
);

864 
	`ª£t_f‹_ßm∂î©e
 (
REAL
 
√w_ßm∂î©e
)

866 
thªad
;

868 
thªad
=0;Åhread<3;Åhread++)

870 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
buf
.
r
);

871 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
buf
.
l
);

872 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
aux
.
r
);

873 
	`ß„‰ì
 ((*Ë
t›
[
thªad
].
hﬁd
.
aux
.
l
);

874 
	`de°roy_w‹k•a˚
 (
thªad
);

876 
loc
[
thªad
].
def
.
øã
 = 
uni
[thªad].
ßm∂î©e
 = 
√w_ßm∂î©e
;

877 
t›
[
thªad
].
swch
.
ív
.
ÁŒ
.
size
 = ()(
loc
[thªad].
def
.
øã
 * 0.005);

878 
t›
[
thªad
].
swch
.
ív
.
°dy
.
size
 = ()(
loc
[thªad].
def
.
øã
 * 0.050);

879 
t›
[
thªad
].
swch
.
ív
.
ri£
.
size
 = ()(
loc
[thªad].
def
.
øã
 * 0.005);

880 
t›
[
thªad
].
swch
.
ív
.
cuº
.
vÆ
 = 0.0;

881 
t›
[
thªad
].
swch
.
ív
.
cuº
.
˙t
 = 0;

882 
t›
[
thªad
].
swch
.
ív
.
ÁŒ
.
ö¸
 = 1.0f/(È›[thªad].swch.ív.ÁŒ.
size
;

883 
t›
[
thªad
].
swch
.
ív
.
ri£
.
ö¸
 = 1.0f/(È›[thªad].swch.ív.ri£.
size
;

884 
	`£tup_w‹k•a˚
 (
loc
[
thªad
].
def
.
øã
,

885 
loc
[
thªad
].
def
.
size
,

886 
loc
[
thªad
].
def
.
mode
,

887 
APP_DATA_PATH
, 
loc
[
thªad
].
def
.
•ec
,Üoc[thªad].def.
ƒx
,Üoc[thªad].def.
size
,thread);

888 
	`£tup_loˇl_audio
 (
thªad
);

890 
	`ª£t_mëîs
 (
thªad
);

891 
	`ª£t_•e˘rum
 (
thªad
);

892 
	`ª£t_cou¡îs
 (
thªad
);

	@wscompand.c

35 
	~<wscom∑nd.h
>

37 
PRIVATE
 
INLINE
 
REAL


38 
	$WSCLookup
 (
WSCom∑ndî
 
wsc
, 
REAL
 
x
)

40 i‡(
x
 > 0.0)

44 
i
 = (Ë(
x
 * 
wsc
->
≈ts
), 
íd
 = wsc->
√nd
;

45 
REAL
 
d
 = 
x
 * 
wsc
->
≈ts
 - 
i
, 
y
, *
tbl
 = wsc->tbl;

47 i‡(
i
 < 
íd
)

48 
y
 = 
tbl
[
i
] + 
d
 * (tbl[i + 1] -Åbl[i]);

50 
y
 = 
tbl
[
íd
];

51  
y
 / 
x
;

57 
	}
}

60 
	$WSCom∑nd
 (
WSCom∑ndî
 
wsc
)

62 
i
, 
n
 = 
	`CXBsize
 (
wsc
->
buff
);

64 i‡(
wsc
->
Ác
 != 0.0)

66 
i
 = 0; i < 
n
 ; i++)

68 
COMPLEX
 
vÆ
 = 
	`CXBd©a
 (
wsc
->
buff
, 
i
);

69 
REAL
 
mag
 = 
	`Cmag
 (
vÆ
), 
s˛
 = 
	`WSCLookup
 (
wsc
, mag);

70 
	`CXBd©a
 (
wsc
->
buff
, 
i
Ë
	`Cs˛
 (
vÆ
,
s˛
);

73 
	}
}

76 
	$WSCRe£t
 (
WSCom∑ndî
 
wsc
, 
REAL
 
Ác
)

78 
i
;

79 
REAL
 *
tbl
 = 
wsc
->tbl;

81 i‡(
Ác
 == 0.0)

83 
i
 = 0; i < 
wsc
->
≈ts
; i++)

84 
tbl
[
i
] = i / (
REAL
Ë
wsc
->
√nd
;

88 
REAL
 
dñ
 = 
Ác
 / 
wsc
->
√nd
, 
s˛
 = (REALË(1.0 - 
	`exp
 (fac));

89 
i
 = 0; i < 
wsc
->
≈ts
; i++)

90 
tbl
[
i
] = (
REAL
Ë((1.0 - 
	`exp
 (ò* 
dñ
)Ë/ 
s˛
);

92 
wsc
->
Ác
 = fac;

93 
	}
}

98 
WSCom∑ndî


99 
	$√wWSCom∑ndî
 (
≈ts
, 
REAL
 
Ác
, 
CXB
 
buff
)

101 
WSCom∑ndî
 
wsc
;

103 
wsc
 = (
WSCom∑ndî
Ë
	`ß„Æloc
 (1,

104  (
WSCom∑ndîInfo
),

106 
wsc
->
≈ts
 =Çpts;

107 
wsc
->
√nd
 = 
≈ts
 - 1;

108 
wsc
->
tbl
 = 
	`√wvec_REAL
 (
≈ts
, "WSCompanderÅable");

109 
wsc
->
buff
 = 
	`√wCXB
 (
	`CXBsize
 (buff), 
	`CXBba£
 (buff), "WSCompander buff");

110 
	`WSCRe£t
 (
wsc
, 
Ác
);

111  
wsc
;

112 
	}
}

115 
	$dñWSCom∑ndî
 (
WSCom∑ndî
 
wsc
)

117 i‡(
wsc
)

119 
	`dñvec_REAL
 (
wsc
->
tbl
);

120 
	`dñCXB
 (
wsc
->
buff
);

121 
	`ß„‰ì
 ((*Ë
wsc
);

123 
	}
}

	@wscompand.h

34 #i‚de‡
_wscom∑nd_h


35 
	#_wscom∑nd_h


	)

37 
	~<‰omsys.h
>

38 
	~<defs.h
>

39 
	~<b™Æ.h
>

40 
	~<•lôfõlds.h
>

41 
	~<d©©y≥s.h
>

42 
	~<bufvec.h
>

43 
	~<cx›s.h
>

45 
	s_wscom∑ndî


47 
	m≈ts
, 
	m√nd
;

48 
REAL
 
	mÁc
, *
	mtbl
;

49 
CXB
 
	mbuff
;

50 } 
	tWSCom∑ndîInfo
, *
	tWSCom∑ndî
;

52 
WSCom∑nd
 (
WSCom∑ndî
 
wsc
);

57 
WSCRe£t
 (
WSCom∑ndî
 
wsc
, 
REAL
 
Ác
);

58 
WSCom∑ndî
 
√wWSCom∑ndî
 (
≈ts
, 
REAL
 
Ác
, 
CXB
 
buff
);

59 
dñWSCom∑ndî
 (
WSCom∑ndî
 
wsc
);

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

70 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

75 
__löe
,

76 
__c⁄°
 *
__fun˘i⁄
)

77 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

82 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

86 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

105 #ifde‡
__USE_ATFILE


106 
	#AT_FDCWD
 -100

	)

109 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

110 
	#AT_REMOVEDIR
 0x200

	)

112 
	#AT_SYMLINK_FOLLOW
 0x400

	)

113 
	#AT_NO_AUTOMOUNT
 0x800

	)

115 
	#AT_EMPTY_PATH
 0x1000

	)

116 
	#AT_EACCESS
 0x200

	)

125 
f˙é
 (
__fd
, 
__cmd
, ...);

133 #i‚de‡
__USE_FILE_OFFSET64


134 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__REDIRECT


137 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

138 
	`__n⁄nuŒ
 ((1));

140 
	#›í
 
›í64


	)

143 #ifde‡
__USE_LARGEFILE64


144 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

147 #ifde‡
__USE_ATFILE


157 #i‚de‡
__USE_FILE_OFFSET64


158 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

159 
	`__n⁄nuŒ
 ((2));

161 #ifde‡
__REDIRECT


162 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

163 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

165 
	#›í©
 
›í©64


	)

168 #ifde‡
__USE_LARGEFILE64


169 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

170 
	`__n⁄nuŒ
 ((2));

179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

182 #ifde‡
__REDIRECT


183 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

184 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

186 
	#¸ót
 
¸ót64


	)

189 #ifde‡
__USE_LARGEFILE64


190 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

193 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

194 && !
deföed
 
__USE_POSIX
))

203 
	#F_ULOCK
 0

	)

204 
	#F_LOCK
 1

	)

205 
	#F_TLOCK
 2

	)

206 
	#F_TEST
 3

	)

208 #i‚de‡
__USE_FILE_OFFSET64


209 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

211 #ifde‡
__REDIRECT


212 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

214 
	#lockf
 
lockf64


	)

217 #ifde‡
__USE_LARGEFILE64


218 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

222 #ifde‡
__USE_XOPEN2K


225 #i‚de‡
__USE_FILE_OFFSET64


226 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

227 
__advi£
Ë
__THROW
;

229 #ifde‡
__REDIRECT_NTH


230 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

231 
__off64_t
 
__Àn
, 
__advi£
),

232 
posix_Ádvi£64
);

234 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

237 #ifde‡
__USE_LARGEFILE64


238 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

239 
__advi£
Ë
__THROW
;

247 #i‚de‡
__USE_FILE_OFFSET64


248 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

250 #ifde‡
__REDIRECT


251 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

252 
__off64_t
 
__Àn
),

253 
posix_ÁŒoˇã64
);

255 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

258 #ifde‡
__USE_LARGEFILE64


259 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

265 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

266 && 
deföed
 
__va_¨g_∑ck_Àn


267 
	~<bôs/f˙é2.h
>

270 
__END_DECLS


	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 || deföed 
__LDBL_COMPAT
)

102 #ifde‡
__LDBL_COMPAT


104 #ifde‡
__USE_ISOC99


105 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

106 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

107 #ifde‡
__REDIRECT_NTH


108 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

109 
__∆dbl_√xâow¨df
)

110 
	`__©åibuã__
 ((
__c⁄°__
));

111 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

112 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

114 (
__x
, 
__y
),

115 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #unde‡
__MATHDECL_1


123 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

124 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

125 
¨gs
, 
Æüs
)

	)

126 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

127 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

130 #i‚de‡
_Ml⁄g_doubÀ_


131 
	#_Ml⁄g_doubÀ_
 

	)

133 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

134 #ifde‡
__STDC__


135 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

137 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

139 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

140 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

141 
	~<bôs/m©hˇŒs.h
>

142 #unde‡
_MdoubÀ_


143 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


144 #unde‡
_MdoubÀ_END_NAMESPACE


145 #unde‡
__MATH_PRECNAME


150 #unde‡
__MATHDECL_1


151 #unde‡
__MATHDECL


152 #unde‡
__MATHCALL


155 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


157 
signgam
;

162 #ifde‡
__USE_ISOC99


200 
FP_NAN
,

201 
	#FP_NAN
 
FP_NAN


	)

202 
FP_INFINITE
,

203 
	#FP_INFINITE
 
FP_INFINITE


	)

204 
FP_ZERO
,

205 
	#FP_ZERO
 
FP_ZERO


	)

206 
FP_SUBNORMAL
,

207 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

208 
FP_NORMAL


209 
	#FP_NORMAL
 
FP_NORMAL


	)

213 #ifde‡
__NO_LONG_DOUBLE_MATH


214 
	#Â˛assify
(
x
) \

215 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

217 
	#Â˛assify
(
x
) \

218 ( (
x
) ==  () \

219 ? 
	`__Â˛assifyf
 (
x
) \

220 :  (
x
) ==  () \

221 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

225 #ifde‡
__NO_LONG_DOUBLE_MATH


226 
	#signbô
(
x
) \

227 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

229 
	#signbô
(
x
) \

230 ( (
x
) ==  () \

231 ? 
	`__signbôf
 (
x
) \

232 :  (
x
) ==  () \

233 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

237 #ifde‡
__NO_LONG_DOUBLE_MATH


238 
	#isföôe
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

241 
	#isföôe
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__föôef
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

249 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

253 #ifde‡
__NO_LONG_DOUBLE_MATH


254 
	#i¢™
(
x
) \

255 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

257 
	#i¢™
(
x
) \

258 ( (
x
) ==  () \

259 ? 
	`__i¢™f
 (
x
) \

260 :  (
x
) ==  () \

261 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

265 #ifde‡
__NO_LONG_DOUBLE_MATH


266 
	#isöf
(
x
) \

267 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

269 
	#isöf
(
x
) \

270 ( (
x
) ==  () \

271 ? 
	`__isöff
 (
x
) \

272 :  (
x
) ==  () \

273 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

277 
	#MATH_ERRNO
 1

	)

278 
	#MATH_ERREXCEPT
 2

	)

283 #i‚de‡
__FAST_MATH__


284 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

289 #ifdef 
__USE_MISC


293 
_IEEE_
 = -1,

294 
_SVID_
,

295 
_XOPEN_
,

296 
_POSIX_
,

297 
_ISOC_


298 } 
	t_LIB_VERSION_TYPE
;

303 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

307 #ifde‡
__USE_SVID


313 #ifde‡
__˝lu•lus


314 
__ex˚±i⁄


316 
ex˚±i⁄


319 
ty≥
;

320 *
«me
;

321 
¨g1
;

322 
¨g2
;

323 
ªtvÆ
;

324 
	}
};

326 #ifde‡
__˝lu•lus


327 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

329 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

332 
	#X_TLOSS
 1.41484755040568800000e+16

	)

335 
	#DOMAIN
 1

	)

336 
	#SING
 2

	)

337 
	#OVERFLOW
 3

	)

338 
	#UNDERFLOW
 4

	)

339 
	#TLOSS
 5

	)

340 
	#PLOSS
 6

	)

343 
	#HUGE
 3.40282347e+38F

	)

347 #ifde‡
__USE_XOPEN


349 
	#MAXFLOAT
 3.40282347e+38F

	)

356 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


357 
	#M_E
 2.7182818284590452354

	)

358 
	#M_LOG2E
 1.4426950408889634074

	)

359 
	#M_LOG10E
 0.43429448190325182765

	)

360 
	#M_LN2
 0.69314718055994530942

	)

361 
	#M_LN10
 2.30258509299404568402

	)

362 
	#M_PI
 3.14159265358979323846

	)

363 
	#M_PI_2
 1.57079632679489661923

	)

364 
	#M_PI_4
 0.78539816339744830962

	)

365 
	#M_1_PI
 0.31830988618379067154

	)

366 
	#M_2_PI
 0.63661977236758134308

	)

367 
	#M_2_SQRTPI
 1.12837916709551257390

	)

368 
	#M_SQRT2
 1.41421356237309504880

	)

369 
	#M_SQRT1_2
 0.70710678118654752440

	)

375 #ifde‡
__USE_GNU


376 
	#M_El
 2.7182818284590452353602874713526625L

	)

377 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

378 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

379 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

380 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

381 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

382 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

383 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

384 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

385 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

386 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

387 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

388 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

395 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


396 
	#__NO_MATH_INLINES
 1

	)

399 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

406 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

407 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

408 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

409 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

410 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

411 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

415 #ifde‡
__USE_EXTERN_INLINES


416 
	~<bôs/m©hölöe.h
>

419 #ifde‡
__USE_ISOC99


423 #i‚de‡
isgª©î


424 
	#isgª©î
(
x
, 
y
) \

425 (
__exãnsi⁄__
 \

426 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

427 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

431 #i‚de‡
isgª©îequÆ


432 
	#isgª©îequÆ
(
x
, 
y
) \

433 (
__exãnsi⁄__
 \

434 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

435 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

439 #i‚de‡
i¶ess


440 
	#i¶ess
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

447 #i‚de‡
i¶es£quÆ


448 
	#i¶es£quÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

455 #i‚de‡
i¶essgª©î


456 
	#i¶essgª©î
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

463 #i‚de‡
isun‹dîed


464 
	#isun‹dîed
(
u
, 
v
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

467 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

472 
	g__END_DECLS


	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/semaphore.h

19 #i‚de‡
_SEMAPHORE_H


20 
	#_SEMAPHORE_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

24 #ifde‡
__USE_XOPEN2K


25 
	#__√ed_time•ec


	)

26 
	~<time.h
>

30 
	~<bôs/£m≠h‹e.h
>

33 
__BEGIN_DECLS


37 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

38 
__THROW
;

40 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

43 
£m_t
 *
	$£m_›í
 (
__c⁄°
 *
__«me
, 
__oÊag
, ...Ë
__THROW
;

46 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

49 
	$£m_u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
;

55 
	`£m_waô
 (
£m_t
 *
__£m
);

57 #ifde‡
__USE_XOPEN2K


62 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

63 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

67 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROW
;

70 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROW
;

73 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

74 
__THROW
;

77 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

169 
	#°dö
 
°dö


	)

170 
	#°dout
 
°dout


	)

171 
	#°dîr
 
°dîr


	)

173 
__BEGIN_NAMESPACE_STD


175 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

177 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

178 
__END_NAMESPACE_STD


180 #ifde‡
__USE_ATFILE


182 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

183 
__c⁄°
 *
__√w
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


191 #i‚de‡
__USE_FILE_OFFSET64


192 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

194 #ifde‡
__REDIRECT


195 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

197 
	#tmpfûe
 
tmpfûe64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

206 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

207 
__END_NAMESPACE_STD


209 #ifde‡
__USE_MISC


212 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

216 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


224 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

225 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

229 
__BEGIN_NAMESPACE_STD


234 
	`f˛o£
 (
FILE
 *
__°ªam
);

239 
	`fÊush
 (
FILE
 *
__°ªam
);

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_MISC


249 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

252 #ifde‡
__USE_GNU


259 
	`f˛o£Æl
 ();

263 
__BEGIN_NAMESPACE_STD


264 #i‚de‡
__USE_FILE_OFFSET64


269 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

270 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

275 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

276 
__c⁄°
 *
__ª°ri˘
 
__modes
,

277 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

279 #ifde‡
__REDIRECT


280 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

281 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

282 
__wur
;

283 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

284 
__c⁄°
 *
__ª°ri˘
 
__modes
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

286 
__wur
;

288 
	#f›í
 
f›í64


	)

289 
	#‰e›í
 
‰e›í64


	)

292 
__END_NAMESPACE_STD


293 #ifde‡
__USE_LARGEFILE64


294 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

295 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

296 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 #ifdef 
__USE_POSIX


303 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

306 #ifdef 
__USE_GNU


309 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

310 
__c⁄°
 *
__ª°ri˘
 
__modes
,

311 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

314 #ifde‡
__USE_XOPEN2K8


316 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

317 
__THROW
 
__wur
;

322 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

326 
__BEGIN_NAMESPACE_STD


329 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

333 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

334 
__modes
, 
size_t
 
__n
Ë
__THROW
;

335 
__END_NAMESPACE_STD


337 #ifdef 
__USE_BSD


340 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

341 
size_t
 
__size
Ë
__THROW
;

344 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

348 
__BEGIN_NAMESPACE_STD


353 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

354 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

359 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	$•rötf
 (*
__ª°ri˘
 
__s
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

368 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

369 
_G_va_li°
 
__¨g
);

374 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

376 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

377 
_G_va_li°
 
__¨g
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


381 
__BEGIN_NAMESPACE_C99


383 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

384 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

385 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

387 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

389 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

390 
__END_NAMESPACE_C99


393 #ifde‡
__USE_GNU


396 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

397 
_G_va_li°
 
__¨g
)

398 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

399 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

400 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

401 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

402 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

403 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

404 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

407 #ifde‡
__USE_XOPEN2K8


414 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

415 
_G_va_li°
 
__¨g
)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

417 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
__BEGIN_NAMESPACE_STD


427 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

428 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

436 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

438 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

439 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

440 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

441 #ifde‡
__REDIRECT


445 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

446 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_fsˇnf
Ë
__wur
;

448 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_sˇnf
Ë
__wur
;

450 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

451 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

452 
__isoc99_ssˇnf
);

454 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

456 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

457 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

458 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

459 
	#fsˇnf
 
__isoc99_fsˇnf


	)

460 
	#sˇnf
 
__isoc99_sˇnf


	)

461 
	#ssˇnf
 
__isoc99_ssˇnf


	)

465 
__END_NAMESPACE_STD


467 #ifdef 
__USE_ISOC99


468 
__BEGIN_NAMESPACE_C99


473 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

474 
_G_va_li°
 
__¨g
)

475 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

482 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

485 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

487 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

489 #i‡!
deföed
 
__USE_GNU
 \

490 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

491 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

492 #ifde‡
__REDIRECT


496 
	`__REDIRECT
 (
vfsˇnf
,

497 (
FILE
 *
__ª°ri˘
 
__s
,

498 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

499 
__isoc99_vfsˇnf
)

500 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

501 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

502 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

503 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

504 
	`__REDIRECT_NTH
 (
vssˇnf
,

505 (
__c⁄°
 *
__ª°ri˘
 
__s
,

506 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

507 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

508 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

510 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

511 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

516 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

517 
_G_va_li°
 
__¨g
Ë
__THROW
;

518 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

519 
	#vsˇnf
 
__isoc99_vsˇnf


	)

520 
	#vssˇnf
 
__isoc99_vssˇnf


	)

524 
__END_NAMESPACE_C99


528 
__BEGIN_NAMESPACE_STD


533 
	`fgëc
 (
FILE
 *
__°ªam
);

534 
	`gëc
 (
FILE
 *
__°ªam
);

540 
	`gëch¨
 ();

541 
__END_NAMESPACE_STD


545 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

547 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


552 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

553 
	`gëch¨_u∆ocked
 ();

556 #ifde‡
__USE_MISC


563 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

567 
__BEGIN_NAMESPACE_STD


575 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

576 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

582 
	`putch¨
 (
__c
);

583 
__END_NAMESPACE_STD


587 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

589 #ifde‡
__USE_MISC


596 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

599 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


604 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

605 
	`putch¨_u∆ocked
 (
__c
);

609 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

610 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

612 
	`gëw
 (
FILE
 *
__°ªam
);

615 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

619 
__BEGIN_NAMESPACE_STD


624 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

625 
__wur
;

632 *
	$gës
 (*
__s
Ë
__wur
;

633 
__END_NAMESPACE_STD


635 #ifde‡
__USE_GNU


642 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

647 #ifdef 
__USE_XOPEN2K8


658 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

659 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

660 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

661 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

662 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

671 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

672 
size_t
 *
__ª°ri˘
 
__n
,

673 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

677 
__BEGIN_NAMESPACE_STD


682 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

688 
	`puts
 (
__c⁄°
 *
__s
);

695 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

702 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

703 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

708 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

710 
__END_NAMESPACE_STD


712 #ifde‡
__USE_GNU


719 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

720 
FILE
 *
__ª°ri˘
 
__°ªam
);

723 #ifde‡
__USE_MISC


730 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

731 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

732 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

737 
__BEGIN_NAMESPACE_STD


742 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

747 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`ªwöd
 (
FILE
 *
__°ªam
);

753 
__END_NAMESPACE_STD


760 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


761 #i‚de‡
__USE_FILE_OFFSET64


766 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

771 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

773 #ifde‡
__REDIRECT


774 
	`__REDIRECT
 (
f£eko
,

775 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

776 
f£eko64
);

777 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

779 
	#f£eko
 
f£eko64


	)

780 
	#·ñlo
 
·ñlo64


	)

785 
__BEGIN_NAMESPACE_STD


786 #i‚de‡
__USE_FILE_OFFSET64


791 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

796 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

798 #ifde‡
__REDIRECT


799 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

800 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

801 
	`__REDIRECT
 (
f£ços
,

802 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

804 
	#fgëpos
 
fgëpos64


	)

805 
	#f£ços
 
f£ços64


	)

808 
__END_NAMESPACE_STD


810 #ifde‡
__USE_LARGEFILE64


811 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

812 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

813 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

814 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

817 
__BEGIN_NAMESPACE_STD


819 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

821 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

823 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

824 
__END_NAMESPACE_STD


826 #ifde‡
__USE_MISC


828 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

829 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
__BEGIN_NAMESPACE_STD


839 
	`≥º‹
 (
__c⁄°
 *
__s
);

840 
__END_NAMESPACE_STD


846 
	~<bôs/sys_îæi°.h
>

849 #ifdef 
__USE_POSIX


851 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

854 #ifde‡
__USE_MISC


856 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

860 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

861 
deföed
 
__USE_MISC
)

866 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

872 
	`p˛o£
 (
FILE
 *
__°ªam
);

876 #ifdef 
__USE_POSIX


878 *
	$˘îmid
 (*
__s
Ë
__THROW
;

882 #ifde‡
__USE_XOPEN


884 *
	`cu£rid
 (*
__s
);

888 #ifdef 
__USE_GNU


889 
ob°ack
;

892 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

893 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

894 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

895 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

896 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

897 
_G_va_li°
 
__¨gs
)

898 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

902 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


906 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

910 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

913 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


920 
	#__√ed_gë›t


	)

921 
	~<gë›t.h
>

926 #ifde‡
__USE_EXTERN_INLINES


927 
	~<bôs/°dio.h
>

929 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


930 
	~<bôs/°dio2.h
>

932 #ifde‡
__LDBL_COMPAT


933 
	~<bôs/°dio-ldbl.h
>

936 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 
	~<bôs/w‹dsize.h
>

27 #ifde‡
__USE_GNU


28 
	~<bôs/uio.h
>

34 
	#O_ACCMODE
 0003

	)

35 
	#O_RDONLY
 00

	)

36 
	#O_WRONLY
 01

	)

37 
	#O_RDWR
 02

	)

38 
	#O_CREAT
 0100

	)

39 
	#O_EXCL
 0200

	)

40 
	#O_NOCTTY
 0400

	)

41 
	#O_TRUNC
 01000

	)

42 
	#O_APPEND
 02000

	)

43 
	#O_NONBLOCK
 04000

	)

44 
	#O_NDELAY
 
O_NONBLOCK


	)

45 
	#O_SYNC
 04010000

	)

46 
	#O_FSYNC
 
O_SYNC


	)

47 
	#O_ASYNC
 020000

	)

49 #ifde‡
__USE_XOPEN2K8


50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_CLOEXEC
 02000000

	)

54 #ifde‡
__USE_GNU


55 
	#O_DIRECT
 040000

	)

56 
	#O_NOATIME
 01000000

	)

57 
	#O_PATH
 010000000

	)

63 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


64 
	#O_DSYNC
 010000

	)

65 
	#O_RSYNC
 
O_SYNC


	)

68 #ifde‡
__USE_LARGEFILE64


69 #i‡
__WORDSIZE
 == 64

70 
	#O_LARGEFILE
 0

	)

72 
	#O_LARGEFILE
 0100000

	)

77 
	#F_DUPFD
 0

	)

78 
	#F_GETFD
 1

	)

79 
	#F_SETFD
 2

	)

80 
	#F_GETFL
 3

	)

81 
	#F_SETFL
 4

	)

82 #i‡
__WORDSIZE
 == 64

83 
	#F_GETLK
 5

	)

84 
	#F_SETLK
 6

	)

85 
	#F_SETLKW
 7

	)

87 
	#F_GETLK64
 5

	)

88 
	#F_SETLK64
 6

	)

89 
	#F_SETLKW64
 7

	)

91 #i‚de‡
__USE_FILE_OFFSET64


92 
	#F_GETLK
 5

	)

93 
	#F_SETLK
 6

	)

94 
	#F_SETLKW
 7

	)

96 
	#F_GETLK
 
F_GETLK64


	)

97 
	#F_SETLK
 
F_SETLK64


	)

98 
	#F_SETLKW
 
F_SETLKW64


	)

100 
	#F_GETLK64
 12

	)

101 
	#F_SETLK64
 13

	)

102 
	#F_SETLKW64
 14

	)

105 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


106 
	#F_SETOWN
 8

	)

107 
	#F_GETOWN
 9

	)

110 #ifde‡
__USE_GNU


111 
	#F_SETSIG
 10

	)

112 
	#F_GETSIG
 11

	)

113 
	#F_SETOWN_EX
 15

	)

114 
	#F_GETOWN_EX
 16

	)

117 #ifde‡
__USE_GNU


118 
	#F_SETLEASE
 1024

	)

119 
	#F_GETLEASE
 1025

	)

120 
	#F_NOTIFY
 1026

	)

121 
	#F_SETPIPE_SZ
 1031

	)

122 
	#F_GETPIPE_SZ
 1032

	)

124 #ifde‡
__USE_XOPEN2K8


125 
	#F_DUPFD_CLOEXEC
 1030

	)

130 
	#FD_CLOEXEC
 1

	)

133 
	#F_RDLCK
 0

	)

134 
	#F_WRLCK
 1

	)

135 
	#F_UNLCK
 2

	)

138 
	#F_EXLCK
 4

	)

139 
	#F_SHLCK
 8

	)

141 #ifde‡
__USE_BSD


143 
	#LOCK_SH
 1

	)

144 
	#LOCK_EX
 2

	)

145 
	#LOCK_NB
 4

	)

147 
	#LOCK_UN
 8

	)

150 #ifde‡
__USE_GNU


151 
	#LOCK_MAND
 32

	)

152 
	#LOCK_READ
 64

	)

153 
	#LOCK_WRITE
 128

	)

154 
	#LOCK_RW
 192

	)

157 #ifde‡
__USE_GNU


159 
	#DN_ACCESS
 0x00000001

	)

160 
	#DN_MODIFY
 0x00000002

	)

161 
	#DN_CREATE
 0x00000004

	)

162 
	#DN_DELETE
 0x00000008

	)

163 
	#DN_RENAME
 0x00000010

	)

164 
	#DN_ATTRIB
 0x00000020

	)

165 
	#DN_MULTISHOT
 0x80000000

	)

168 
	sÊock


170 
	ml_ty≥
;

171 
	ml_whí˚
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
__off_t
 
	ml_°¨t
;

174 
__off_t
 
	ml_Àn
;

176 
__off64_t
 
	ml_°¨t
;

177 
__off64_t
 
	ml_Àn
;

179 
__pid_t
 
	ml_pid
;

182 #ifde‡
__USE_LARGEFILE64


183 
	sÊock64


185 
	ml_ty≥
;

186 
	ml_whí˚
;

187 
__off64_t
 
	ml_°¨t
;

188 
__off64_t
 
	ml_Àn
;

189 
__pid_t
 
	ml_pid
;

193 #ifde‡
__USE_GNU


195 
	e__pid_ty≥


197 
	mF_OWNER_TID
 = 0,

198 
	mF_OWNER_PID
,

199 
	mF_OWNER_PGRP
,

200 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


204 
	sf_ow√r_ex


206 
__pid_ty≥
 
	mty≥
;

207 
__pid_t
 
	mpid
;

213 #ifdef 
__USE_BSD


214 
	#FAPPEND
 
O_APPEND


	)

215 
	#FFSYNC
 
O_FSYNC


	)

216 
	#FASYNC
 
O_ASYNC


	)

217 
	#FNONBLOCK
 
O_NONBLOCK


	)

218 
	#FNDELAY
 
O_NDELAY


	)

222 #ifde‡
__USE_XOPEN2K


223 
	#POSIX_FADV_NORMAL
 0

	)

224 
	#POSIX_FADV_RANDOM
 1

	)

225 
	#POSIX_FADV_SEQUENTIAL
 2

	)

226 
	#POSIX_FADV_WILLNEED
 3

	)

227 
	#POSIX_FADV_DONTNEED
 4

	)

228 
	#POSIX_FADV_NOREUSE
 5

	)

232 #ifde‡
__USE_GNU


234 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

237 
	#SYNC_FILE_RANGE_WRITE
 2

	)

240 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

245 
	#SPLICE_F_MOVE
 1

	)

246 
	#SPLICE_F_NONBLOCK
 2

	)

249 
	#SPLICE_F_MORE
 4

	)

250 
	#SPLICE_F_GIFT
 8

	)

254 
	sfûe_h™dÀ


256 
	mh™dÀ_byãs
;

257 
	mh™dÀ_ty≥
;

259 
	mf_h™dÀ
[0];

263 
	#MAX_HANDLE_SZ
 128

	)

266 
	g__BEGIN_DECLS


268 #ifde‡
__USE_GNU


271 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

272 
__THROW
;

279 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

280 
__Êags
);

287 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

288 
size_t
 
__cou¡
, 
__Êags
);

294 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

295 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

296 
__Êags
);

302 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

303 
__Êags
);

309 #i‚de‡
__USE_FILE_OFFSET64


310 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

312 #ifde‡
__REDIRECT


313 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

314 
__off64_t
 
__Àn
),

315 
ÁŒoˇã64
);

317 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

320 #ifde‡
__USE_LARGEFILE64


321 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

322 
__off64_t
 
__Àn
);

327 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

328 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

329 
__Êags
Ë
__THROW
;

335 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

336 
__Êags
);

340 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

50 #i‡
__FP_FAST_FMA


51 
	#FP_FAST_FMA
 1

	)

54 #i‡
__FP_FAST_FMAF


55 
	#FP_FAST_FMAF
 1

	)

58 #i‡
__FP_FAST_FMAL


59 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 
	~<bôs/w‹dsize.h
>

27 #i‚de‡
__exã∫_ölöe


28 
	#__MATH_INLINE
 
__ölöe


	)

30 
	#__MATH_INLINE
 
__exã∫_ölöe


	)

34 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

37 
__MATH_INLINE
 

38 
__NTH
 (
	$__signbôf
 (
__x
))

40 #i‡
__WORDSIZE
 == 32

41 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

42  
__u
.
__i
 < 0;

44 
__m
;

45 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

46  
__m
 & 0x8;

48 
	}
}

49 
__MATH_INLINE
 

50 
__NTH
 (
	$__signbô
 (
__x
))

52 #i‡
__WORDSIZE
 == 32

53 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

54  
__u
.
__i
[1] < 0;

56 
__m
;

57 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

58  
__m
 & 0x80;

60 
	}
}

61 
__MATH_INLINE
 

62 
__NTH
 (
	$__signbôl
 (
__x
))

64 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

65  (
__u
.
__i
[2] & 0x8000) != 0;

66 
	}
}

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_GNU


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

97 
__END_DECLS


101 #i‡!
deföed
 
__deföed_sched∑øm
 \

102 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

103 
	#__deföed_sched∑øm
 1

	)

105 
	s__sched_∑øm


107 
__sched_¥i‹ôy
;

109 #unde‡
__√ed_sched∑øm


113 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


114 
	#__˝u_£t_t_deföed


	)

116 
	#__CPU_SETSIZE
 4096

	)

117 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

120 
	t__˝u_mask
;

123 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

124 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

129 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

130 } 
	t˝u_£t_t
;

133 #i‡
	`__GNUC_PREREQ
 (2, 91)

134 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

137 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

139 
size_t
 
__i
; \

140 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

141 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

142 
__i
 = 0; __ò< 
__imax
; ++__i) \

143 
__bôs
[
__i
] = 0; \

144 
	}
} 0)

	)

146 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 |
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 &~
	`__CPUMASK
 (
__˝u
)) \

159 : 0; }))

	)

160 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

161 (
__exãnsi⁄__
 \

162 ({ 
size_t
 
__˝u
 = (
˝u
); \

163 
__˝u
 < 8 * (
£tsize
) \

164 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

165 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

166 : 0; }))

	)

168 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

169 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

171 #i‡
__GNUC_PREREQ
 (2, 91)

172 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

173 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

175 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

176 (
__exãnsi⁄__
 \

177 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

178 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

179 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

180 
size_t
 
__i
; \

181 
__i
 = 0; __ò< 
__imax
; ++__i) \

182 i‡(
__bôs
[
__i
] != __bits[__i]) \

184 
__i
 =
__imax
; }))

	)

187 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

188 (
__exãnsi⁄__
 \

189 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

190 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

191 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

192 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

193 
size_t
 
__i
; \

194 
__i
 = 0; __ò< 
__imax
; ++__i) \

195 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

196 
__de°
; }))

	)

198 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

199 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

200 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

201 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

203 
__BEGIN_DECLS


205 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

206 
__THROW
;

207 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

208 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

210 
__END_DECLS


	@/usr/include/bits/semaphore.h

20 #i‚de‡
_SEMAPHORE_H


24 
	~<bôs/w‹dsize.h
>

26 #i‡
__WORDSIZE
 == 64

27 
	#__SIZEOF_SEM_T
 32

	)

29 
	#__SIZEOF_SEM_T
 16

	)

34 
	#SEM_FAILED
 ((
£m_t
 *Ë0)

	)

39 
	m__size
[
__SIZEOF_SEM_T
];

40 
	m__Æign
;

41 } 
	t£m_t
;

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_KERNEL
 0

	)

29 #i‡
__WORDSIZE
 == 32

30 
	#_STAT_VER_SVR4
 2

	)

31 
	#_STAT_VER_LINUX
 3

	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‡
__WORDSIZE
 == 32

50 
	m__∑d1
;

52 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‡
__WORDSIZE
 == 32

58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #i‡
__WORDSIZE
 == 64

67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‡
__WORDSIZE
 == 32

71 
	m__∑d2
;

73 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
	m°_˘imí£c
;

105 #i‡
__WORDSIZE
 == 64

106 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #i‡
__WORDSIZE
 == 64

123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #i‡
__WORDSIZE
 == 64

135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

155 
	#°_©ime
 
°_©im
.
tv_£c


	)

156 
	#°_mtime
 
°_mtim
.
tv_£c


	)

157 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

159 
__time_t
 
	m°_©ime
;

160 
	m°_©imí£c
;

161 
__time_t
 
	m°_mtime
;

162 
	m°_mtimí£c
;

163 
__time_t
 
	m°_˘ime
;

164 
	m°_˘imí£c
;

166 #i‡
__WORDSIZE
 == 64

167 
	m__unu£d
[3];

169 
__öo64_t
 
	m°_öo
;

175 
	#_STATBUF_ST_BLKSIZE


	)

176 
	#_STATBUF_ST_RDEV


	)

178 
	#_STATBUF_ST_NSEC


	)

182 
	#__S_IFMT
 0170000

	)

185 
	#__S_IFDIR
 0040000

	)

186 
	#__S_IFCHR
 0020000

	)

187 
	#__S_IFBLK
 0060000

	)

188 
	#__S_IFREG
 0100000

	)

189 
	#__S_IFIFO
 0010000

	)

190 
	#__S_IFLNK
 0120000

	)

191 
	#__S_IFSOCK
 0140000

	)

195 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

196 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

197 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

201 
	#__S_ISUID
 04000

	)

202 
	#__S_ISGID
 02000

	)

203 
	#__S_ISVTX
 01000

	)

204 
	#__S_IREAD
 0400

	)

205 
	#__S_IWRITE
 0200

	)

206 
	#__S_IEXEC
 0100

	)

208 #ifde‡
__USE_ATFILE


209 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

210 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


25 #i‚de‡
_STRUCT_TIMEVAL


26 
	#_STRUCT_TIMEVAL
 1

	)

27 
	~<bôs/ty≥s.h
>

31 
	stimevÆ


33 
__time_t
 
	mtv_£c
;

34 
__su£c⁄ds_t
 
	mtv_u£c
;

39 #i‚de‡
__√ed_timevÆ


40 #i‚de‡
_BITS_TIME_H


41 
	#_BITS_TIME_H
 1

	)

49 
	#CLOCKS_PER_SEC
 1000000l

	)

51 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	#__STDC_IEC_559__
 1

	)

325 
	#__STDC_IEC_559_COMPLEX__
 1

	)

328 
	#__STDC_ISO_10646__
 200009L

	)

336 #unde‡
__GNU_LIBRARY__


337 
	#__GNU_LIBRARY__
 6

	)

341 
	#__GLIBC__
 2

	)

342 
	#__GLIBC_MINOR__
 14

	)

344 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

345 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

348 #i‡
deföed
 
__GNUC__
 \

349 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

350 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

351 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

352 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

356 #i‚de‡
__ASSEMBLER__


357 #i‚de‡
_SYS_CDEFS_H


358 
	~<sys/cdefs.h
>

363 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


364 
	#__USE_LARGEFILE
 1

	)

365 
	#__USE_LARGEFILE64
 1

	)

371 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

372 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

373 && 
deföed
 
	g__exã∫_ölöe


374 
	#__USE_EXTERN_INLINES
 1

	)

382 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__BEGIN_DECLS


32 
__exãnsi⁄__


33 
	$gnu_dev_maj‹
 (
__dev
)

34 
__THROW
;

35 
__exãnsi⁄__


36 
	$gnu_dev_mö‹
 (
__dev
)

37 
__THROW
;

38 
__exãnsi⁄__


39 
	$gnu_dev_makedev
 (
__maj‹
,

40 
__mö‹
)

41 
__THROW
;

43 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


44 
__exãnsi⁄__
 
__exã∫_ölöe
 

45 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

47  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 

51 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

53  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

54 
	}
}

56 
__exãnsi⁄__
 
__exã∫_ölöe
 

57 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

59  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

60 | (((Ë(
__mö‹
 & ~0xff)) << 12)

61 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

62 
	}
}

64 
	g__END_DECLS


67 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

68 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

69 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
) \

60 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] |
	`__FDMASK
 (d)))

	)

61 
	#__FD_CLR
(
d
, 
£t
) \

62 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] &~
	`__FDMASK
 (d)))

	)

63 
	#__FD_ISSET
(
d
, 
£t
) \

64 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/timex.h

19 #i‚def 
_BITS_TIMEX_H


20 
	#_BITS_TIMEX_H
 1

	)

24 
	stimex


26 
	mmodes
;

27 
	moff£t
;

28 
	m‰eq
;

29 
	mmaxîr‹
;

30 
	me°îr‹
;

31 
	m°©us
;

32 
	mc⁄°™t
;

33 
	m¥ecisi⁄
;

34 
	mtﬁî™˚
;

35 
timevÆ
 
	mtime
;

36 
	mtick
;

38 
	mµs‰eq
;

39 
	mjôãr
;

40 
	mshi·
;

41 
	m°abû
;

42 
	mjô˙t
;

43 
	mˇl˙t
;

44 
	mîr˙t
;

45 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

41 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


42 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


43 
±hªad_muãx_t
 
	t__libc_lock_t
;

44 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

46 
	t__libc_lock_t
;

47 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

49 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

50 #ifde‡
__USE_UNIX98


51 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

53 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

56 
__libc_lock_›aque__
 
	t__libc_lock_t
;

57 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

58 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

62 
±hªad_key_t
 
	t__libc_key_t
;

71 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

73 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

75 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

77 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

89 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

90 #i‡
LLL_LOCK_INITIALIZER
 == 0

91 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

92 
CLASS
 
__libc_lock_t
 
NAME
;

	)

94 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

95 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

98 #i‡
__LT_SPINLOCK_INIT
 == 0

99 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

100 
CLASS
 
__libc_lock_t
 
NAME
;

	)

102 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

103 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

107 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

108 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

112 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

113 #i‡
LLL_LOCK_INITIALIZER
 == 0

114 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

115 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

117 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

118 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

120 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

121 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

123 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

124 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

125 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

126 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

129 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

130 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

131 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

132 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

134 
	#__πld_lock_öôülize
(
NAME
) \

135 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

142 #ifde‡
__PIC__


143 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

144 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

145 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

147 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

148 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

152 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


153 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

154 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

155 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

156 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

157 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

159 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

160 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

161 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

162 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

163 
FUNC
 
ARGS


	)

169 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

170 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

172 
	#__libc_lock_öô
(
NAME
) \

173 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

175 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


178 
	#__libc_rwlock_öô
(
NAME
) \

179 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

181 
	#__libc_rwlock_öô
(
NAME
) \

182 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

186 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

187 
	#__libc_lock_öô_ªcursive
(
NAME
) \

188 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

190 
	#__libc_lock_öô_ªcursive
(
NAME
) \

192 i‡(
__±hªad_muãx_öô
 !
NULL
) \

194 
±hªad_muãx©å_t
 
__©å
; \

195 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

196 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

197 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

198 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

200 } 0)

	)

203 
	#__πld_lock_öô_ªcursive
(
NAME
) \

205 i‡(
__±hªad_muãx_öô
 !
NULL
) \

207 
±hªad_muãx©å_t
 
__©å
; \

208 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

209 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

210 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

211 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

213 } 0)

	)

218 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

219 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

221 
	#__libc_lock_föi
(
NAME
) \

222 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

224 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


225 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

227 
	#__libc_rwlock_föi
(
NAME
) \

228 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

232 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

233 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

235 
	#__libc_lock_föi_ªcursive
(
NAME
) \

236 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

240 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

241 
	#__libc_lock_lock
(
NAME
) \

242 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

244 
	#__libc_lock_lock
(
NAME
) \

245 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

247 
	#__libc_rwlock_rdlock
(
NAME
) \

248 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

249 
	#__libc_rwlock_wæock
(
NAME
) \

250 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

253 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

254 
	#__libc_lock_lock_ªcursive
(
NAME
) \

256 *
£lf
 = 
THREAD_SELF
; \

257 i‡((
NAME
).
ow√r
 !
£lf
) \

259 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

260 (
NAME
).
ow√r
 = 
£lf
; \

262 ++(
NAME
).
˙t
; \

263 } 0)

	)

265 
	#__libc_lock_lock_ªcursive
(
NAME
) \

266 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

270 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

271 
	#__libc_lock_åylock
(
NAME
) \

272 
	`Œl_åylock
 (
NAME
)

	)

274 
	#__libc_lock_åylock
(
NAME
) \

275 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

277 
	#__libc_rwlock_åyrdlock
(
NAME
) \

278 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

279 
	#__libc_rwlock_åywæock
(
NAME
) \

280 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

283 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

284 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

286 
ªsu…
 = 0; \

287 *
£lf
 = 
THREAD_SELF
; \

288 i‡((
NAME
).
ow√r
 !
£lf
) \

290 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

292 (
NAME
).
ow√r
 = 
£lf
; \

293 (
NAME
).
˙t
 = 1; \

296 
ªsu…
 = 
EBUSY
; \

299 ++(
NAME
).
˙t
; \

300 
ªsu…
; \

301 })

	)

303 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

304 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

307 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

308 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

311 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

312 
	#__libc_lock_u∆ock
(
NAME
) \

313 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

315 
	#__libc_lock_u∆ock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

318 
	#__libc_rwlock_u∆ock
(
NAME
) \

319 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

322 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

324 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

326 i‡(--(
NAME
).
˙t
 == 0) \

328 (
NAME
).
ow√r
 = 
NULL
; \

329 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

331 } 0)

	)

333 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

334 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

337 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


338 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

339 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

341 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

342 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

344 
	#__πld_lock_lock_ªcursive
(
NAME
) \

345 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

347 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

348 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

350 
	#__πld_lock_lock_ªcursive
(
NAME
) \

351 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

353 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

358 #i‡
PTHREAD_ONCE_INIT
 == 0

361 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

362 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

364 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

365 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

369 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

371 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

372 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

373 
INIT_FUNCTION
)); \

374 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

375 
	`INIT_FUNCTION
 (); \

376 (
ONCE_CONTROL
) |= 2; \

378 } 0)

	)

385 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

386 (*
routöe
Ë(*), *
¨g
);

387 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

388 
execuã
);

389 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

390 (*
routöe
Ë(*), *
¨g
);

391 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

392 
execuã
);

395 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

396 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

397 
_avaû
; \

398 i‡(
DOIT
) { \

399 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

400 i‡(
_avaû
) { \

401 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

402 
ARG
)); \

404 
_buf„r
.
__routöe
 = (
FCT
); \

405 
_buf„r
.
__¨g
 = (
ARG
); \

408 
_avaû
 = 0; \

409 }

	)

412 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

413 i‡(
_avaû
) { \

414 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

415 } i‡(
DOIT
) \

416 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

417 
	}

	)
}

420 
	#__libc_˛ónup_íd
(
DOIT
) \

421 i‡(
_avaû
) { \

422 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

423 } i‡(
DOIT
) \

424 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

428 
__exã∫_ölöe
 

429 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

431 i‡(
f
->
__do_ô
)

432 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

433 
	}
}

435 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

437 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

438 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

439 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

440 .
__do_ô
 = 1 };

	)

442 
	#__libc_˛ónup_p›
(
execuã
) \

443 
__˛‰ame
.
__do_ô
 = (
execuã
); \

444 } 0)

	)

448 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

449 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

452 
	#__libc_gë•ecific
(
KEY
) \

453 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

456 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

457 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

463 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

464 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

465 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

466 (*
__∑ª¡
) (),

467 (*
__chûd
) (),

468 *
__dso_h™dÀ
);

473 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

474 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

476 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

478 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

480 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

482 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

484 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

486 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

488 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

489 
__köd
);

491 #ifde‡
__USE_UNIX98


492 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

493 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

495 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

497 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

499 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

501 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

503 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

505 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

508 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

509 (*
__de°r_fun˘i⁄
) (*));

511 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

512 
__c⁄°
 *
__poöãr
);

514 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

516 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

517 (*
__öô_routöe
) ());

519 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

520 (*
__∑ª¡
) (),

521 (*
__chûd
) ());

527 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


528 #ifde‡
wók_exã∫


529 #i‡
_LIBC


530 
	~<bp-sym.h
>

532 
	#BP_SYM
(
sym
Ë
	)
sym

534 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

535 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

536 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

537 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

538 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

539 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

540 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

541 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

542 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

543 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

544 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

545 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

546 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

547 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

548 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

549 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

550 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

551 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

552 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

553 
	$wók_exã∫
 (
__±hªad_öôülize
)

554 
	$wók_exã∫
 (
__±hªad_©f‹k
)

555 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

556 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

557 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

559 #¥agm®
wók
 
__±hªad_muãx_öô


560 #¥agm®
wók
 
__±hªad_muãx_de°roy


561 #¥agm®
wók
 
__±hªad_muãx_lock


562 #¥agm®
wók
 
__±hªad_muãx_åylock


563 #¥agm®
wók
 
__±hªad_muãx_u∆ock


564 #¥agm®
wók
 
__±hªad_muãx©å_öô


565 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


566 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


567 #¥agm®
wók
 
__±hªad_rwlock_de°roy


568 #¥agm®
wók
 
__±hªad_rwlock_rdlock


569 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


570 #¥agm®
wók
 
__±hªad_rwlock_wæock


571 #¥agm®
wók
 
__±hªad_rwlock_åywæock


572 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


573 #¥agm®
wók
 
__±hªad_key_¸óã


574 #¥agm®
wók
 
__±hªad_£t•ecific


575 #¥agm®
wók
 
__±hªad_gë•ecific


576 #¥agm®
wók
 
__±hªad_⁄˚


577 #¥agm®
wók
 
__±hªad_öôülize


578 #¥agm®
wók
 
__±hªad_©f‹k


579 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


580 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


581 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
154
2721
am_demod.c
am_demod.h
banal.c
banal.h
bufvec.c
bufvec.h
common.h
complex.h
correctIQ.c
correctIQ.h
cwtones.c
cwtones.h
cxops.c
cxops.h
datatypes.h
dcblock.c
dcblock.h
defs.h
diversity.h
dttspagc.c
dttspagc.h
fastrig.c
fastrig.h
fftw.h
fftw3.h
fftw3_fix.h
filter.c
filter.h
filterbank.c
filterbank.h
fm_demod.c
fm_demod.h
fromsys.h
graphiceq.c
graphiceq.h
hilbert.c
hilbert.h
iosdr.h
isoband.c
isoband.h
keyd.c
keyer.c
keyer.h
keyerio.c
lmadf.c
lmadf.h
local.h
malloc16.c
malloc16.h
meter.c
meter.h
metermon.c
noiseblanker.c
noiseblanker.h
oscillator.c
oscillator.h
ovsv.c
ovsv.h
resample.c
resample.h
resampleF.c
resampleF.h
ringb.c
ringb.h
sdr.c
sdrexport.c
sdrexport.h
spectrum.c
spectrum.h
speechproc.c
speechproc.h
splitfields.c
splitfields.h
spottone.c
spottone.h
update.c
update.h
window.c
window.h
winmain.c
wscompand.c
wscompand.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/fcntl.h
/usr/include/math.h
/usr/include/pthread.h
/usr/include/sched.h
/usr/include/semaphore.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/alloca.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sched.h
/usr/include/bits/semaphore.h
/usr/include/bits/setjmp.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/wctype.h
